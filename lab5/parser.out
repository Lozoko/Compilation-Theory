Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    IFS

Grammar

Rule 0     S' -> start
Rule 1     start -> LINE
Rule 2     LINE -> IDX ; LINE
Rule 3     LINE -> IFX LINE
Rule 4     LINE -> WHILEX LINE
Rule 5     LINE -> FORX LINE
Rule 6     LINE -> RETURNX ; LINE
Rule 7     LINE -> PRINTX ; LINE
Rule 8     LINE -> PRINTTRIANGLE ; LINE
Rule 9     LINE -> BLOCK LINE
Rule 10    LINE -> EMPTY
Rule 11    ONELINE -> IDX ;
Rule 12    ONELINE -> IFX
Rule 13    ONELINE -> WHILEX
Rule 14    ONELINE -> FORX
Rule 15    ONELINE -> RETURNX ;
Rule 16    ONELINE -> PRINTX ;
Rule 17    ONELINE -> PRINTTRIANGLE ;
Rule 18    BLOCK -> { LINE }
Rule 19    EMPTY -> <empty>
Rule 20    IDX -> ID = EXPRESSION
Rule 21    IDX -> ID = MATRIX
Rule 22    IDX -> ID = TABLE
Rule 23    IDX -> ID [ EXPRESSION ] = EXPRESSION
Rule 24    IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
Rule 25    IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
Rule 26    IDX -> ID ADDASSIGN EXPRESSION
Rule 27    IDX -> ID ADDASSIGN MATRIX
Rule 28    IDX -> ID ADDASSIGN TABLE
Rule 29    IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION
Rule 30    IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
Rule 31    IDX -> ID SUBASSIGN EXPRESSION
Rule 32    IDX -> ID SUBASSIGN MATRIX
Rule 33    IDX -> ID SUBASSIGN TABLE
Rule 34    IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION
Rule 35    IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
Rule 36    IDX -> ID MULASSIGN EXPRESSION
Rule 37    IDX -> ID MULASSIGN MATRIX
Rule 38    IDX -> ID MULASSIGN TABLE
Rule 39    IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION
Rule 40    IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
Rule 41    IDX -> ID DIVASSIGN EXPRESSION
Rule 42    IDX -> ID DIVASSIGN MATRIX
Rule 43    IDX -> ID DIVASSIGN TABLE
Rule 44    IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION
Rule 45    IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
Rule 46    ZEROSX -> ZEROS ( EXPRESSION )
Rule 47    ZEROSX -> ZEROS ( EXPRESSION , EXPRESSION )
Rule 48    ONESX -> ONES ( EXPRESSION )
Rule 49    ONESX -> ONES ( EXPRESSION , EXPRESSION )
Rule 50    EYEX -> EYE ( EXPRESSION )
Rule 51    EYEX -> EYE ( EXPRESSION , EXPRESSION )
Rule 52    MATRIX -> [ MATRIXINSIDE ]
Rule 53    MATRIX -> MATRIXEXPR
Rule 54    MATRIX -> ZEROSX
Rule 55    MATRIX -> ONESX
Rule 56    MATRIX -> EYEX
Rule 57    MATRIXINSIDE -> TABLE , MATRIXINSIDE
Rule 58    MATRIXINSIDE -> TABLE
Rule 59    TABLE -> [ VALUES ]
Rule 60    VALUES -> EXPRESSION , VALUES
Rule 61    VALUES -> EXPRESSION
Rule 62    MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR
Rule 63    MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR
Rule 64    MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR
Rule 65    MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR
Rule 66    MATRIXEXPR -> EXPRESSION DOTADD EXPRESSION
Rule 67    MATRIXEXPR -> EXPRESSION DOTSUB EXPRESSION
Rule 68    MATRIXEXPR -> EXPRESSION DOTMUL EXPRESSION
Rule 69    MATRIXEXPR -> EXPRESSION DOTDIV EXPRESSION
Rule 70    MATRIXEXPR -> EXPRESSION '
Rule 71    IFX -> IF ( CONDITION ) ONELINE
Rule 72    IFX -> IF ( CONDITION ) BLOCK
Rule 73    IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE
Rule 74    IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK
Rule 75    IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE
Rule 76    IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK
Rule 77    LOOPLINE -> IDX ; LOOPLINE
Rule 78    LOOPLINE -> WHILEX LOOPLINE
Rule 79    LOOPLINE -> FORX LOOPLINE
Rule 80    LOOPLINE -> RETURNX ; LOOPLINE
Rule 81    LOOPLINE -> PRINTX ; LOOPLINE
Rule 82    LOOPLINE -> PRINTTRIANGLE ; LOOPLINE
Rule 83    LOOPLINE -> LOOPBLOCK LOOPLINE
Rule 84    LOOPLINE -> EMPTY
Rule 85    LOOPLINE -> LOOPIFX LOOPLINE
Rule 86    LOOPLINE -> BREAKX ; LOOPLINE
Rule 87    LOOPLINE -> CONTINUEX ; LOOPLINE
Rule 88    ONELOOPLINE -> IDX ;
Rule 89    ONELOOPLINE -> WHILEX
Rule 90    ONELOOPLINE -> FORX
Rule 91    ONELOOPLINE -> RETURNX ;
Rule 92    ONELOOPLINE -> PRINTX ;
Rule 93    ONELOOPLINE -> PRINTTRIANGLE ;
Rule 94    ONELOOPLINE -> LOOPIFX
Rule 95    ONELOOPLINE -> BREAKX ;
Rule 96    ONELOOPLINE -> CONTINUEX ;
Rule 97    BREAKX -> BREAK
Rule 98    CONTINUEX -> CONTINUE
Rule 99    LOOPBLOCK -> { LOOPLINE }
Rule 100   LOOPIFX -> IF ( CONDITION ) ONELOOPLINE
Rule 101   LOOPIFX -> IF ( CONDITION ) LOOPBLOCK
Rule 102   LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
Rule 103   LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
Rule 104   LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
Rule 105   LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
Rule 106   WHILEX -> WHILE ( CONDITION ) ONELOOPLINE
Rule 107   WHILEX -> WHILE ( CONDITION ) LOOPBLOCK
Rule 108   FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
Rule 109   FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
Rule 110   CONDITION -> EXPRESSION EQUAL EXPRESSION
Rule 111   CONDITION -> EXPRESSION UNEQUAL EXPRESSION
Rule 112   CONDITION -> EXPRESSION LESSEQUAL EXPRESSION
Rule 113   CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION
Rule 114   CONDITION -> EXPRESSION > EXPRESSION
Rule 115   CONDITION -> EXPRESSION < EXPRESSION
Rule 116   PRINTX -> PRINT PRINTMANY
Rule 117   PRINTTRIANGLE -> PRINT STRING * EXPRESSION
Rule 118   PRINTMANY -> STRINGX , PRINTMANY
Rule 119   PRINTMANY -> EXPRESSION , PRINTMANY
Rule 120   PRINTMANY -> ID TABLE , PRINTMANY
Rule 121   PRINTMANY -> STRINGX
Rule 122   PRINTMANY -> EXPRESSION
Rule 123   PRINTMANY -> ID TABLE
Rule 124   STRINGX -> STRING
Rule 125   RETURNX -> RETURN EXPRESSION
Rule 126   EXPRESSION -> NUMBER
Rule 127   EXPRESSION -> FLOATNUMBER
Rule 128   EXPRESSION -> ID
Rule 129   EXPRESSION -> EXPRESSION + EXPRESSION
Rule 130   EXPRESSION -> EXPRESSION - EXPRESSION
Rule 131   EXPRESSION -> EXPRESSION * EXPRESSION
Rule 132   EXPRESSION -> EXPRESSION / EXPRESSION
Rule 133   EXPRESSION -> ( EXPRESSION )
Rule 134   EXPRESSION -> - EXPRESSION

Terminals, with rules where they appear

'                    : 70
(                    : 46 47 48 49 50 51 71 72 73 74 75 76 100 101 102 103 104 105 106 107 133
)                    : 46 47 48 49 50 51 71 72 73 74 75 76 100 101 102 103 104 105 106 107 133
*                    : 117 131
+                    : 129
,                    : 24 25 30 35 40 45 47 49 51 57 60 118 119 120
-                    : 130 134
/                    : 132
:                    : 25 25 108 109
;                    : 2 6 7 8 11 15 16 17 77 80 81 82 86 87 88 91 92 93 95 96
<                    : 115
=                    : 20 21 22 23 24 25 108 109
>                    : 114
ADDASSIGN            : 26 27 28 29 30
BREAK                : 97
COMMENT              : 
CONTINUE             : 98
DIVASSIGN            : 41 42 43 44 45
DOTADD               : 62 66
DOTDIV               : 65 69
DOTMUL               : 64 68
DOTSUB               : 63 67
ELSE                 : 73 74 75 76 102 103 104 105
EQUAL                : 110
EYE                  : 50 51
FLOATNUMBER          : 127
FOR                  : 108 109
GREATEREQUAL         : 113
ID                   : 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 108 109 120 123 128
IF                   : 71 72 73 74 75 76 100 101 102 103 104 105
IFS                  : 
LESSEQUAL            : 112
MULASSIGN            : 36 37 38 39 40
NUMBER               : 126
ONES                 : 48 49
PRINT                : 116 117
RETURN               : 125
STRING               : 117 124
SUBASSIGN            : 31 32 33 34 35
UNEQUAL              : 111
WHILE                : 106 107
ZEROS                : 46 47
[                    : 23 24 25 29 30 34 35 39 40 44 45 52 59
]                    : 23 24 25 29 30 34 35 39 40 44 45 52 59
error                : 
{                    : 18 99
}                    : 18 99

Nonterminals, with rules where they appear

BLOCK                : 9 72 74 75 76 76
BREAKX               : 86 95
CONDITION            : 71 72 73 74 75 76 100 101 102 103 104 105 106 107
CONTINUEX            : 87 96
EMPTY                : 10 84
EXPRESSION           : 20 23 23 24 24 24 25 25 25 25 25 26 29 29 30 30 30 31 34 34 35 35 35 36 39 39 40 40 40 41 44 44 45 45 45 46 47 47 48 49 49 50 51 51 60 61 62 63 64 65 66 66 67 67 68 68 69 69 70 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 117 119 122 125 129 129 130 130 131 131 132 132 133 134
EYEX                 : 56
FORX                 : 5 14 79 90
IDX                  : 2 11 77 88
IFX                  : 3 12
LINE                 : 1 2 3 4 5 6 7 8 9 18
LOOPBLOCK            : 83 101 103 104 105 105 107 109
LOOPIFX              : 85 94
LOOPLINE             : 77 78 79 80 81 82 83 85 86 87 99
MATRIX               : 21 27 32 37 42
MATRIXEXPR           : 53 62 63 64 65
MATRIXINSIDE         : 52 57
ONELINE              : 71 73 73 74 75
ONELOOPLINE          : 100 102 102 103 104 106 108
ONESX                : 55
PRINTMANY            : 116 118 119 120
PRINTTRIANGLE        : 8 17 82 93
PRINTX               : 7 16 81 92
RETURNX              : 6 15 80 91
STRINGX              : 118 121
TABLE                : 22 28 33 38 43 57 58 120 123
VALUES               : 59 60
WHILEX               : 4 13 78 89
ZEROSX               : 54
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)

    start                          shift and go to state 1
    LINE                           shift and go to state 2
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 1

    (0) S' -> start .



state 2

    (1) start -> LINE .

    $end            reduce using rule 1 (start -> LINE .)


state 3

    (2) LINE -> IDX . ; LINE

    ;               shift and go to state 19


state 4

    (3) LINE -> IFX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    IFX                            shift and go to state 4
    LINE                           shift and go to state 20
    IDX                            shift and go to state 3
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 5

    (4) LINE -> WHILEX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    WHILEX                         shift and go to state 5
    LINE                           shift and go to state 21
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 6

    (5) LINE -> FORX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    FORX                           shift and go to state 6
    LINE                           shift and go to state 22
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 7

    (6) LINE -> RETURNX . ; LINE

    ;               shift and go to state 23


state 8

    (7) LINE -> PRINTX . ; LINE

    ;               shift and go to state 24


state 9

    (8) LINE -> PRINTTRIANGLE . ; LINE

    ;               shift and go to state 25


state 10

    (9) LINE -> BLOCK . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    BLOCK                          shift and go to state 10
    LINE                           shift and go to state 26
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    EMPTY                          shift and go to state 11

state 11

    (10) LINE -> EMPTY .

    $end            reduce using rule 10 (LINE -> EMPTY .)
    }               reduce using rule 10 (LINE -> EMPTY .)


state 12

    (20) IDX -> ID . = EXPRESSION
    (21) IDX -> ID . = MATRIX
    (22) IDX -> ID . = TABLE
    (23) IDX -> ID . [ EXPRESSION ] = EXPRESSION
    (24) IDX -> ID . [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> ID . [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> ID . ADDASSIGN EXPRESSION
    (27) IDX -> ID . ADDASSIGN MATRIX
    (28) IDX -> ID . ADDASSIGN TABLE
    (29) IDX -> ID . [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> ID . [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> ID . SUBASSIGN EXPRESSION
    (32) IDX -> ID . SUBASSIGN MATRIX
    (33) IDX -> ID . SUBASSIGN TABLE
    (34) IDX -> ID . [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> ID . [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> ID . MULASSIGN EXPRESSION
    (37) IDX -> ID . MULASSIGN MATRIX
    (38) IDX -> ID . MULASSIGN TABLE
    (39) IDX -> ID . [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> ID . [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> ID . DIVASSIGN EXPRESSION
    (42) IDX -> ID . DIVASSIGN MATRIX
    (43) IDX -> ID . DIVASSIGN TABLE
    (44) IDX -> ID . [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> ID . [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION

    =               shift and go to state 27
    [               shift and go to state 28
    ADDASSIGN       shift and go to state 29
    SUBASSIGN       shift and go to state 30
    MULASSIGN       shift and go to state 31
    DIVASSIGN       shift and go to state 32


state 13

    (71) IFX -> IF . ( CONDITION ) ONELINE
    (72) IFX -> IF . ( CONDITION ) BLOCK
    (73) IFX -> IF . ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> IF . ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> IF . ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> IF . ( CONDITION ) BLOCK ELSE BLOCK

    (               shift and go to state 33


state 14

    (106) WHILEX -> WHILE . ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> WHILE . ( CONDITION ) LOOPBLOCK

    (               shift and go to state 34


state 15

    (108) FORX -> FOR . ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> FOR . ID = EXPRESSION : EXPRESSION LOOPBLOCK

    ID              shift and go to state 35


state 16

    (125) RETURNX -> RETURN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 36

state 17

    (116) PRINTX -> PRINT . PRINTMANY
    (117) PRINTTRIANGLE -> PRINT . STRING * EXPRESSION
    (118) PRINTMANY -> . STRINGX , PRINTMANY
    (119) PRINTMANY -> . EXPRESSION , PRINTMANY
    (120) PRINTMANY -> . ID TABLE , PRINTMANY
    (121) PRINTMANY -> . STRINGX
    (122) PRINTMANY -> . EXPRESSION
    (123) PRINTMANY -> . ID TABLE
    (124) STRINGX -> . STRING
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    STRING          shift and go to state 43
    ID              shift and go to state 46
    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    (               shift and go to state 41
    -               shift and go to state 40

    PRINTMANY                      shift and go to state 42
    EXPRESSION                     shift and go to state 44
    STRINGX                        shift and go to state 45

state 18

    (18) BLOCK -> { . LINE }
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    }               reduce using rule 19 (EMPTY -> .)

    LINE                           shift and go to state 47
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 19

    (2) LINE -> IDX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    IDX                            shift and go to state 3
    LINE                           shift and go to state 48
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 20

    (3) LINE -> IFX LINE .

    $end            reduce using rule 3 (LINE -> IFX LINE .)
    }               reduce using rule 3 (LINE -> IFX LINE .)


state 21

    (4) LINE -> WHILEX LINE .

    $end            reduce using rule 4 (LINE -> WHILEX LINE .)
    }               reduce using rule 4 (LINE -> WHILEX LINE .)


state 22

    (5) LINE -> FORX LINE .

    $end            reduce using rule 5 (LINE -> FORX LINE .)
    }               reduce using rule 5 (LINE -> FORX LINE .)


state 23

    (6) LINE -> RETURNX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    RETURNX                        shift and go to state 7
    LINE                           shift and go to state 49
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    PRINTX                         shift and go to state 8
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 24

    (7) LINE -> PRINTX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    PRINTX                         shift and go to state 8
    LINE                           shift and go to state 50
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTTRIANGLE                  shift and go to state 9
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 25

    (8) LINE -> PRINTTRIANGLE ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . PRINTTRIANGLE ; LINE
    (9) LINE -> . BLOCK LINE
    (10) LINE -> . EMPTY
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (18) BLOCK -> . { LINE }
    (19) EMPTY -> .

    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 18
    $end            reduce using rule 19 (EMPTY -> .)
    }               reduce using rule 19 (EMPTY -> .)

    PRINTTRIANGLE                  shift and go to state 9
    LINE                           shift and go to state 51
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 10
    EMPTY                          shift and go to state 11

state 26

    (9) LINE -> BLOCK LINE .

    $end            reduce using rule 9 (LINE -> BLOCK LINE .)
    }               reduce using rule 9 (LINE -> BLOCK LINE .)


state 27

    (20) IDX -> ID = . EXPRESSION
    (21) IDX -> ID = . MATRIX
    (22) IDX -> ID = . TABLE
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION
    (52) MATRIX -> . [ MATRIXINSIDE ]
    (53) MATRIX -> . MATRIXEXPR
    (54) MATRIX -> . ZEROSX
    (55) MATRIX -> . ONESX
    (56) MATRIX -> . EYEX
    (59) TABLE -> . [ VALUES ]
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (46) ZEROSX -> . ZEROS ( EXPRESSION )
    (47) ZEROSX -> . ZEROS ( EXPRESSION , EXPRESSION )
    (48) ONESX -> . ONES ( EXPRESSION )
    (49) ONESX -> . ONES ( EXPRESSION , EXPRESSION )
    (50) EYEX -> . EYE ( EXPRESSION )
    (51) EYEX -> . EYE ( EXPRESSION , EXPRESSION )

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40
    [               shift and go to state 55
    ZEROS           shift and go to state 60
    ONES            shift and go to state 61
    EYE             shift and go to state 62

    EXPRESSION                     shift and go to state 52
    MATRIX                         shift and go to state 53
    TABLE                          shift and go to state 54
    MATRIXEXPR                     shift and go to state 56
    ZEROSX                         shift and go to state 57
    ONESX                          shift and go to state 58
    EYEX                           shift and go to state 59

state 28

    (23) IDX -> ID [ . EXPRESSION ] = EXPRESSION
    (24) IDX -> ID [ . EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> ID [ . EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (29) IDX -> ID [ . EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> ID [ . EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (34) IDX -> ID [ . EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> ID [ . EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (39) IDX -> ID [ . EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> ID [ . EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (44) IDX -> ID [ . EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> ID [ . EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 63

state 29

    (26) IDX -> ID ADDASSIGN . EXPRESSION
    (27) IDX -> ID ADDASSIGN . MATRIX
    (28) IDX -> ID ADDASSIGN . TABLE
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION
    (52) MATRIX -> . [ MATRIXINSIDE ]
    (53) MATRIX -> . MATRIXEXPR
    (54) MATRIX -> . ZEROSX
    (55) MATRIX -> . ONESX
    (56) MATRIX -> . EYEX
    (59) TABLE -> . [ VALUES ]
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (46) ZEROSX -> . ZEROS ( EXPRESSION )
    (47) ZEROSX -> . ZEROS ( EXPRESSION , EXPRESSION )
    (48) ONESX -> . ONES ( EXPRESSION )
    (49) ONESX -> . ONES ( EXPRESSION , EXPRESSION )
    (50) EYEX -> . EYE ( EXPRESSION )
    (51) EYEX -> . EYE ( EXPRESSION , EXPRESSION )

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40
    [               shift and go to state 55
    ZEROS           shift and go to state 60
    ONES            shift and go to state 61
    EYE             shift and go to state 62

    EXPRESSION                     shift and go to state 64
    MATRIX                         shift and go to state 65
    TABLE                          shift and go to state 66
    MATRIXEXPR                     shift and go to state 56
    ZEROSX                         shift and go to state 57
    ONESX                          shift and go to state 58
    EYEX                           shift and go to state 59

state 30

    (31) IDX -> ID SUBASSIGN . EXPRESSION
    (32) IDX -> ID SUBASSIGN . MATRIX
    (33) IDX -> ID SUBASSIGN . TABLE
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION
    (52) MATRIX -> . [ MATRIXINSIDE ]
    (53) MATRIX -> . MATRIXEXPR
    (54) MATRIX -> . ZEROSX
    (55) MATRIX -> . ONESX
    (56) MATRIX -> . EYEX
    (59) TABLE -> . [ VALUES ]
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (46) ZEROSX -> . ZEROS ( EXPRESSION )
    (47) ZEROSX -> . ZEROS ( EXPRESSION , EXPRESSION )
    (48) ONESX -> . ONES ( EXPRESSION )
    (49) ONESX -> . ONES ( EXPRESSION , EXPRESSION )
    (50) EYEX -> . EYE ( EXPRESSION )
    (51) EYEX -> . EYE ( EXPRESSION , EXPRESSION )

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40
    [               shift and go to state 55
    ZEROS           shift and go to state 60
    ONES            shift and go to state 61
    EYE             shift and go to state 62

    EXPRESSION                     shift and go to state 67
    MATRIX                         shift and go to state 68
    TABLE                          shift and go to state 69
    MATRIXEXPR                     shift and go to state 56
    ZEROSX                         shift and go to state 57
    ONESX                          shift and go to state 58
    EYEX                           shift and go to state 59

state 31

    (36) IDX -> ID MULASSIGN . EXPRESSION
    (37) IDX -> ID MULASSIGN . MATRIX
    (38) IDX -> ID MULASSIGN . TABLE
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION
    (52) MATRIX -> . [ MATRIXINSIDE ]
    (53) MATRIX -> . MATRIXEXPR
    (54) MATRIX -> . ZEROSX
    (55) MATRIX -> . ONESX
    (56) MATRIX -> . EYEX
    (59) TABLE -> . [ VALUES ]
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (46) ZEROSX -> . ZEROS ( EXPRESSION )
    (47) ZEROSX -> . ZEROS ( EXPRESSION , EXPRESSION )
    (48) ONESX -> . ONES ( EXPRESSION )
    (49) ONESX -> . ONES ( EXPRESSION , EXPRESSION )
    (50) EYEX -> . EYE ( EXPRESSION )
    (51) EYEX -> . EYE ( EXPRESSION , EXPRESSION )

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40
    [               shift and go to state 55
    ZEROS           shift and go to state 60
    ONES            shift and go to state 61
    EYE             shift and go to state 62

    EXPRESSION                     shift and go to state 70
    MATRIX                         shift and go to state 71
    TABLE                          shift and go to state 72
    MATRIXEXPR                     shift and go to state 56
    ZEROSX                         shift and go to state 57
    ONESX                          shift and go to state 58
    EYEX                           shift and go to state 59

state 32

    (41) IDX -> ID DIVASSIGN . EXPRESSION
    (42) IDX -> ID DIVASSIGN . MATRIX
    (43) IDX -> ID DIVASSIGN . TABLE
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION
    (52) MATRIX -> . [ MATRIXINSIDE ]
    (53) MATRIX -> . MATRIXEXPR
    (54) MATRIX -> . ZEROSX
    (55) MATRIX -> . ONESX
    (56) MATRIX -> . EYEX
    (59) TABLE -> . [ VALUES ]
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (46) ZEROSX -> . ZEROS ( EXPRESSION )
    (47) ZEROSX -> . ZEROS ( EXPRESSION , EXPRESSION )
    (48) ONESX -> . ONES ( EXPRESSION )
    (49) ONESX -> . ONES ( EXPRESSION , EXPRESSION )
    (50) EYEX -> . EYE ( EXPRESSION )
    (51) EYEX -> . EYE ( EXPRESSION , EXPRESSION )

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40
    [               shift and go to state 55
    ZEROS           shift and go to state 60
    ONES            shift and go to state 61
    EYE             shift and go to state 62

    EXPRESSION                     shift and go to state 73
    MATRIX                         shift and go to state 74
    TABLE                          shift and go to state 75
    MATRIXEXPR                     shift and go to state 56
    ZEROSX                         shift and go to state 57
    ONESX                          shift and go to state 58
    EYEX                           shift and go to state 59

state 33

    (71) IFX -> IF ( . CONDITION ) ONELINE
    (72) IFX -> IF ( . CONDITION ) BLOCK
    (73) IFX -> IF ( . CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> IF ( . CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> IF ( . CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> IF ( . CONDITION ) BLOCK ELSE BLOCK
    (110) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (111) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (112) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (113) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (114) CONDITION -> . EXPRESSION > EXPRESSION
    (115) CONDITION -> . EXPRESSION < EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    CONDITION                      shift and go to state 76
    EXPRESSION                     shift and go to state 77

state 34

    (106) WHILEX -> WHILE ( . CONDITION ) ONELOOPLINE
    (107) WHILEX -> WHILE ( . CONDITION ) LOOPBLOCK
    (110) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (111) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (112) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (113) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (114) CONDITION -> . EXPRESSION > EXPRESSION
    (115) CONDITION -> . EXPRESSION < EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    CONDITION                      shift and go to state 78
    EXPRESSION                     shift and go to state 77

state 35

    (108) FORX -> FOR ID . = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> FOR ID . = EXPRESSION : EXPRESSION LOOPBLOCK

    =               shift and go to state 79


state 36

    (125) RETURNX -> RETURN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 125 (RETURNX -> RETURN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 37

    (126) EXPRESSION -> NUMBER .

    +               reduce using rule 126 (EXPRESSION -> NUMBER .)
    -               reduce using rule 126 (EXPRESSION -> NUMBER .)
    *               reduce using rule 126 (EXPRESSION -> NUMBER .)
    /               reduce using rule 126 (EXPRESSION -> NUMBER .)
    ;               reduce using rule 126 (EXPRESSION -> NUMBER .)
    ,               reduce using rule 126 (EXPRESSION -> NUMBER .)
    DOTADD          reduce using rule 126 (EXPRESSION -> NUMBER .)
    DOTSUB          reduce using rule 126 (EXPRESSION -> NUMBER .)
    DOTMUL          reduce using rule 126 (EXPRESSION -> NUMBER .)
    DOTDIV          reduce using rule 126 (EXPRESSION -> NUMBER .)
    '               reduce using rule 126 (EXPRESSION -> NUMBER .)
    ]               reduce using rule 126 (EXPRESSION -> NUMBER .)
    :               reduce using rule 126 (EXPRESSION -> NUMBER .)
    EQUAL           reduce using rule 126 (EXPRESSION -> NUMBER .)
    UNEQUAL         reduce using rule 126 (EXPRESSION -> NUMBER .)
    LESSEQUAL       reduce using rule 126 (EXPRESSION -> NUMBER .)
    GREATEREQUAL    reduce using rule 126 (EXPRESSION -> NUMBER .)
    >               reduce using rule 126 (EXPRESSION -> NUMBER .)
    <               reduce using rule 126 (EXPRESSION -> NUMBER .)
    )               reduce using rule 126 (EXPRESSION -> NUMBER .)
    {               reduce using rule 126 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 126 (EXPRESSION -> NUMBER .)
    WHILE           reduce using rule 126 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 126 (EXPRESSION -> NUMBER .)
    RETURN          reduce using rule 126 (EXPRESSION -> NUMBER .)
    PRINT           reduce using rule 126 (EXPRESSION -> NUMBER .)
    IF              reduce using rule 126 (EXPRESSION -> NUMBER .)
    BREAK           reduce using rule 126 (EXPRESSION -> NUMBER .)
    CONTINUE        reduce using rule 126 (EXPRESSION -> NUMBER .)


state 38

    (127) EXPRESSION -> FLOATNUMBER .

    +               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    -               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    *               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    /               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    ;               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    ,               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    DOTADD          reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    DOTSUB          reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    DOTMUL          reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    DOTDIV          reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    '               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    ]               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    :               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    EQUAL           reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    UNEQUAL         reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    LESSEQUAL       reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    GREATEREQUAL    reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    >               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    <               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    )               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    {               reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    ID              reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    WHILE           reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    FOR             reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    RETURN          reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    PRINT           reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    IF              reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    BREAK           reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)
    CONTINUE        reduce using rule 127 (EXPRESSION -> FLOATNUMBER .)


state 39

    (128) EXPRESSION -> ID .

    +               reduce using rule 128 (EXPRESSION -> ID .)
    -               reduce using rule 128 (EXPRESSION -> ID .)
    *               reduce using rule 128 (EXPRESSION -> ID .)
    /               reduce using rule 128 (EXPRESSION -> ID .)
    ;               reduce using rule 128 (EXPRESSION -> ID .)
    DOTADD          reduce using rule 128 (EXPRESSION -> ID .)
    DOTSUB          reduce using rule 128 (EXPRESSION -> ID .)
    DOTMUL          reduce using rule 128 (EXPRESSION -> ID .)
    DOTDIV          reduce using rule 128 (EXPRESSION -> ID .)
    '               reduce using rule 128 (EXPRESSION -> ID .)
    ]               reduce using rule 128 (EXPRESSION -> ID .)
    ,               reduce using rule 128 (EXPRESSION -> ID .)
    :               reduce using rule 128 (EXPRESSION -> ID .)
    EQUAL           reduce using rule 128 (EXPRESSION -> ID .)
    UNEQUAL         reduce using rule 128 (EXPRESSION -> ID .)
    LESSEQUAL       reduce using rule 128 (EXPRESSION -> ID .)
    GREATEREQUAL    reduce using rule 128 (EXPRESSION -> ID .)
    >               reduce using rule 128 (EXPRESSION -> ID .)
    <               reduce using rule 128 (EXPRESSION -> ID .)
    )               reduce using rule 128 (EXPRESSION -> ID .)
    {               reduce using rule 128 (EXPRESSION -> ID .)
    ID              reduce using rule 128 (EXPRESSION -> ID .)
    WHILE           reduce using rule 128 (EXPRESSION -> ID .)
    FOR             reduce using rule 128 (EXPRESSION -> ID .)
    RETURN          reduce using rule 128 (EXPRESSION -> ID .)
    PRINT           reduce using rule 128 (EXPRESSION -> ID .)
    IF              reduce using rule 128 (EXPRESSION -> ID .)
    BREAK           reduce using rule 128 (EXPRESSION -> ID .)
    CONTINUE        reduce using rule 128 (EXPRESSION -> ID .)


state 40

    (134) EXPRESSION -> - . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 84

state 41

    (133) EXPRESSION -> ( . EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 85

state 42

    (116) PRINTX -> PRINT PRINTMANY .

    ;               reduce using rule 116 (PRINTX -> PRINT PRINTMANY .)


state 43

    (117) PRINTTRIANGLE -> PRINT STRING . * EXPRESSION
    (124) STRINGX -> STRING .

    *               shift and go to state 86
    ,               reduce using rule 124 (STRINGX -> STRING .)
    ;               reduce using rule 124 (STRINGX -> STRING .)


state 44

    (119) PRINTMANY -> EXPRESSION . , PRINTMANY
    (122) PRINTMANY -> EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ,               shift and go to state 87
    ;               reduce using rule 122 (PRINTMANY -> EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 45

    (118) PRINTMANY -> STRINGX . , PRINTMANY
    (121) PRINTMANY -> STRINGX .

    ,               shift and go to state 88
    ;               reduce using rule 121 (PRINTMANY -> STRINGX .)


state 46

    (120) PRINTMANY -> ID . TABLE , PRINTMANY
    (123) PRINTMANY -> ID . TABLE
    (128) EXPRESSION -> ID .
    (59) TABLE -> . [ VALUES ]

    ,               reduce using rule 128 (EXPRESSION -> ID .)
    +               reduce using rule 128 (EXPRESSION -> ID .)
    -               reduce using rule 128 (EXPRESSION -> ID .)
    *               reduce using rule 128 (EXPRESSION -> ID .)
    /               reduce using rule 128 (EXPRESSION -> ID .)
    ;               reduce using rule 128 (EXPRESSION -> ID .)
    [               shift and go to state 90

    TABLE                          shift and go to state 89

state 47

    (18) BLOCK -> { LINE . }

    }               shift and go to state 91


state 48

    (2) LINE -> IDX ; LINE .

    $end            reduce using rule 2 (LINE -> IDX ; LINE .)
    }               reduce using rule 2 (LINE -> IDX ; LINE .)


state 49

    (6) LINE -> RETURNX ; LINE .

    $end            reduce using rule 6 (LINE -> RETURNX ; LINE .)
    }               reduce using rule 6 (LINE -> RETURNX ; LINE .)


state 50

    (7) LINE -> PRINTX ; LINE .

    $end            reduce using rule 7 (LINE -> PRINTX ; LINE .)
    }               reduce using rule 7 (LINE -> PRINTX ; LINE .)


state 51

    (8) LINE -> PRINTTRIANGLE ; LINE .

    $end            reduce using rule 8 (LINE -> PRINTTRIANGLE ; LINE .)
    }               reduce using rule 8 (LINE -> PRINTTRIANGLE ; LINE .)


state 52

    (20) IDX -> ID = EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 20 (IDX -> ID = EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96


state 53

    (21) IDX -> ID = MATRIX .

    ;               reduce using rule 21 (IDX -> ID = MATRIX .)


state 54

    (22) IDX -> ID = TABLE .

    ;               reduce using rule 22 (IDX -> ID = TABLE .)


state 55

    (52) MATRIX -> [ . MATRIXINSIDE ]
    (59) TABLE -> [ . VALUES ]
    (57) MATRIXINSIDE -> . TABLE , MATRIXINSIDE
    (58) MATRIXINSIDE -> . TABLE
    (60) VALUES -> . EXPRESSION , VALUES
    (61) VALUES -> . EXPRESSION
    (59) TABLE -> . [ VALUES ]
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    [               shift and go to state 90
    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    MATRIXINSIDE                   shift and go to state 97
    VALUES                         shift and go to state 98
    TABLE                          shift and go to state 99
    EXPRESSION                     shift and go to state 100

state 56

    (53) MATRIX -> MATRIXEXPR .

    ;               reduce using rule 53 (MATRIX -> MATRIXEXPR .)


state 57

    (54) MATRIX -> ZEROSX .

    ;               reduce using rule 54 (MATRIX -> ZEROSX .)


state 58

    (55) MATRIX -> ONESX .

    ;               reduce using rule 55 (MATRIX -> ONESX .)


state 59

    (56) MATRIX -> EYEX .

    ;               reduce using rule 56 (MATRIX -> EYEX .)


state 60

    (46) ZEROSX -> ZEROS . ( EXPRESSION )
    (47) ZEROSX -> ZEROS . ( EXPRESSION , EXPRESSION )

    (               shift and go to state 101


state 61

    (48) ONESX -> ONES . ( EXPRESSION )
    (49) ONESX -> ONES . ( EXPRESSION , EXPRESSION )

    (               shift and go to state 102


state 62

    (50) EYEX -> EYE . ( EXPRESSION )
    (51) EYEX -> EYE . ( EXPRESSION , EXPRESSION )

    (               shift and go to state 103


state 63

    (23) IDX -> ID [ EXPRESSION . ] = EXPRESSION
    (24) IDX -> ID [ EXPRESSION . , EXPRESSION ] = EXPRESSION
    (25) IDX -> ID [ EXPRESSION . : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (29) IDX -> ID [ EXPRESSION . ] ADDASSIGN EXPRESSION
    (30) IDX -> ID [ EXPRESSION . , EXPRESSION ] ADDASSIGN EXPRESSION
    (34) IDX -> ID [ EXPRESSION . ] SUBASSIGN EXPRESSION
    (35) IDX -> ID [ EXPRESSION . , EXPRESSION ] SUBASSIGN EXPRESSION
    (39) IDX -> ID [ EXPRESSION . ] MULASSIGN EXPRESSION
    (40) IDX -> ID [ EXPRESSION . , EXPRESSION ] MULASSIGN EXPRESSION
    (44) IDX -> ID [ EXPRESSION . ] DIVASSIGN EXPRESSION
    (45) IDX -> ID [ EXPRESSION . , EXPRESSION ] DIVASSIGN EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ]               shift and go to state 104
    ,               shift and go to state 105
    :               shift and go to state 106
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 64

    (26) IDX -> ID ADDASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 26 (IDX -> ID ADDASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96


state 65

    (27) IDX -> ID ADDASSIGN MATRIX .

    ;               reduce using rule 27 (IDX -> ID ADDASSIGN MATRIX .)


state 66

    (28) IDX -> ID ADDASSIGN TABLE .

    ;               reduce using rule 28 (IDX -> ID ADDASSIGN TABLE .)


state 67

    (31) IDX -> ID SUBASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 31 (IDX -> ID SUBASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96


state 68

    (32) IDX -> ID SUBASSIGN MATRIX .

    ;               reduce using rule 32 (IDX -> ID SUBASSIGN MATRIX .)


state 69

    (33) IDX -> ID SUBASSIGN TABLE .

    ;               reduce using rule 33 (IDX -> ID SUBASSIGN TABLE .)


state 70

    (36) IDX -> ID MULASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 36 (IDX -> ID MULASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96


state 71

    (37) IDX -> ID MULASSIGN MATRIX .

    ;               reduce using rule 37 (IDX -> ID MULASSIGN MATRIX .)


state 72

    (38) IDX -> ID MULASSIGN TABLE .

    ;               reduce using rule 38 (IDX -> ID MULASSIGN TABLE .)


state 73

    (41) IDX -> ID DIVASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 41 (IDX -> ID DIVASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96


state 74

    (42) IDX -> ID DIVASSIGN MATRIX .

    ;               reduce using rule 42 (IDX -> ID DIVASSIGN MATRIX .)


state 75

    (43) IDX -> ID DIVASSIGN TABLE .

    ;               reduce using rule 43 (IDX -> ID DIVASSIGN TABLE .)


state 76

    (71) IFX -> IF ( CONDITION . ) ONELINE
    (72) IFX -> IF ( CONDITION . ) BLOCK
    (73) IFX -> IF ( CONDITION . ) ONELINE ELSE ONELINE
    (74) IFX -> IF ( CONDITION . ) ONELINE ELSE BLOCK
    (75) IFX -> IF ( CONDITION . ) BLOCK ELSE ONELINE
    (76) IFX -> IF ( CONDITION . ) BLOCK ELSE BLOCK

    )               shift and go to state 107


state 77

    (110) CONDITION -> EXPRESSION . EQUAL EXPRESSION
    (111) CONDITION -> EXPRESSION . UNEQUAL EXPRESSION
    (112) CONDITION -> EXPRESSION . LESSEQUAL EXPRESSION
    (113) CONDITION -> EXPRESSION . GREATEREQUAL EXPRESSION
    (114) CONDITION -> EXPRESSION . > EXPRESSION
    (115) CONDITION -> EXPRESSION . < EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    EQUAL           shift and go to state 108
    UNEQUAL         shift and go to state 109
    LESSEQUAL       shift and go to state 110
    GREATEREQUAL    shift and go to state 111
    >               shift and go to state 112
    <               shift and go to state 113
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 78

    (106) WHILEX -> WHILE ( CONDITION . ) ONELOOPLINE
    (107) WHILEX -> WHILE ( CONDITION . ) LOOPBLOCK

    )               shift and go to state 114


state 79

    (108) FORX -> FOR ID = . EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> FOR ID = . EXPRESSION : EXPRESSION LOOPBLOCK
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 115

state 80

    (129) EXPRESSION -> EXPRESSION + . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 116

state 81

    (130) EXPRESSION -> EXPRESSION - . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 117

state 82

    (131) EXPRESSION -> EXPRESSION * . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 118

state 83

    (132) EXPRESSION -> EXPRESSION / . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 119

state 84

    (134) EXPRESSION -> - EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    -               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    ;               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    ,               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    DOTADD          reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    DOTSUB          reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    DOTMUL          reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    DOTDIV          reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    '               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    ]               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    :               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    EQUAL           reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    UNEQUAL         reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    LESSEQUAL       reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    GREATEREQUAL    reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    >               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    <               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    )               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    {               reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    ID              reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    WHILE           reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    FOR             reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    RETURN          reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    PRINT           reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    IF              reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    BREAK           reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    CONTINUE        reduce using rule 134 (EXPRESSION -> - EXPRESSION .)
    *               shift and go to state 82
    /               shift and go to state 83

  ! *               [ reduce using rule 134 (EXPRESSION -> - EXPRESSION .) ]
  ! /               [ reduce using rule 134 (EXPRESSION -> - EXPRESSION .) ]
  ! +               [ shift and go to state 80 ]
  ! -               [ shift and go to state 81 ]


state 85

    (133) EXPRESSION -> ( EXPRESSION . )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 120
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 86

    (117) PRINTTRIANGLE -> PRINT STRING * . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 121

state 87

    (119) PRINTMANY -> EXPRESSION , . PRINTMANY
    (118) PRINTMANY -> . STRINGX , PRINTMANY
    (119) PRINTMANY -> . EXPRESSION , PRINTMANY
    (120) PRINTMANY -> . ID TABLE , PRINTMANY
    (121) PRINTMANY -> . STRINGX
    (122) PRINTMANY -> . EXPRESSION
    (123) PRINTMANY -> . ID TABLE
    (124) STRINGX -> . STRING
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    ID              shift and go to state 46
    STRING          shift and go to state 123
    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 44
    PRINTMANY                      shift and go to state 122
    STRINGX                        shift and go to state 45

state 88

    (118) PRINTMANY -> STRINGX , . PRINTMANY
    (118) PRINTMANY -> . STRINGX , PRINTMANY
    (119) PRINTMANY -> . EXPRESSION , PRINTMANY
    (120) PRINTMANY -> . ID TABLE , PRINTMANY
    (121) PRINTMANY -> . STRINGX
    (122) PRINTMANY -> . EXPRESSION
    (123) PRINTMANY -> . ID TABLE
    (124) STRINGX -> . STRING
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    ID              shift and go to state 46
    STRING          shift and go to state 123
    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    (               shift and go to state 41
    -               shift and go to state 40

    STRINGX                        shift and go to state 45
    PRINTMANY                      shift and go to state 124
    EXPRESSION                     shift and go to state 44

state 89

    (120) PRINTMANY -> ID TABLE . , PRINTMANY
    (123) PRINTMANY -> ID TABLE .

    ,               shift and go to state 125
    ;               reduce using rule 123 (PRINTMANY -> ID TABLE .)


state 90

    (59) TABLE -> [ . VALUES ]
    (60) VALUES -> . EXPRESSION , VALUES
    (61) VALUES -> . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    VALUES                         shift and go to state 98
    EXPRESSION                     shift and go to state 100

state 91

    (18) BLOCK -> { LINE } .

    ID              reduce using rule 18 (BLOCK -> { LINE } .)
    IF              reduce using rule 18 (BLOCK -> { LINE } .)
    WHILE           reduce using rule 18 (BLOCK -> { LINE } .)
    FOR             reduce using rule 18 (BLOCK -> { LINE } .)
    RETURN          reduce using rule 18 (BLOCK -> { LINE } .)
    PRINT           reduce using rule 18 (BLOCK -> { LINE } .)
    {               reduce using rule 18 (BLOCK -> { LINE } .)
    $end            reduce using rule 18 (BLOCK -> { LINE } .)
    }               reduce using rule 18 (BLOCK -> { LINE } .)
    ELSE            reduce using rule 18 (BLOCK -> { LINE } .)


state 92

    (62) MATRIXEXPR -> EXPRESSION DOTADD . MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION DOTADD . EXPRESSION
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 126
    MATRIXEXPR                     shift and go to state 127

state 93

    (63) MATRIXEXPR -> EXPRESSION DOTSUB . MATRIXEXPR
    (67) MATRIXEXPR -> EXPRESSION DOTSUB . EXPRESSION
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 128
    MATRIXEXPR                     shift and go to state 129

state 94

    (64) MATRIXEXPR -> EXPRESSION DOTMUL . MATRIXEXPR
    (68) MATRIXEXPR -> EXPRESSION DOTMUL . EXPRESSION
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 130
    MATRIXEXPR                     shift and go to state 131

state 95

    (65) MATRIXEXPR -> EXPRESSION DOTDIV . MATRIXEXPR
    (69) MATRIXEXPR -> EXPRESSION DOTDIV . EXPRESSION
    (62) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> . EXPRESSION DOTADD EXPRESSION
    (67) MATRIXEXPR -> . EXPRESSION DOTSUB EXPRESSION
    (68) MATRIXEXPR -> . EXPRESSION DOTMUL EXPRESSION
    (69) MATRIXEXPR -> . EXPRESSION DOTDIV EXPRESSION
    (70) MATRIXEXPR -> . EXPRESSION '
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 132
    MATRIXEXPR                     shift and go to state 133

state 96

    (70) MATRIXEXPR -> EXPRESSION ' .

    ;               reduce using rule 70 (MATRIXEXPR -> EXPRESSION ' .)


state 97

    (52) MATRIX -> [ MATRIXINSIDE . ]

    ]               shift and go to state 134


state 98

    (59) TABLE -> [ VALUES . ]

    ]               shift and go to state 135


state 99

    (57) MATRIXINSIDE -> TABLE . , MATRIXINSIDE
    (58) MATRIXINSIDE -> TABLE .

    ,               shift and go to state 136
    ]               reduce using rule 58 (MATRIXINSIDE -> TABLE .)


state 100

    (60) VALUES -> EXPRESSION . , VALUES
    (61) VALUES -> EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ,               shift and go to state 137
    ]               reduce using rule 61 (VALUES -> EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 101

    (46) ZEROSX -> ZEROS ( . EXPRESSION )
    (47) ZEROSX -> ZEROS ( . EXPRESSION , EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 138

state 102

    (48) ONESX -> ONES ( . EXPRESSION )
    (49) ONESX -> ONES ( . EXPRESSION , EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 139

state 103

    (50) EYEX -> EYE ( . EXPRESSION )
    (51) EYEX -> EYE ( . EXPRESSION , EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 140

state 104

    (23) IDX -> ID [ EXPRESSION ] . = EXPRESSION
    (29) IDX -> ID [ EXPRESSION ] . ADDASSIGN EXPRESSION
    (34) IDX -> ID [ EXPRESSION ] . SUBASSIGN EXPRESSION
    (39) IDX -> ID [ EXPRESSION ] . MULASSIGN EXPRESSION
    (44) IDX -> ID [ EXPRESSION ] . DIVASSIGN EXPRESSION

    =               shift and go to state 141
    ADDASSIGN       shift and go to state 142
    SUBASSIGN       shift and go to state 143
    MULASSIGN       shift and go to state 144
    DIVASSIGN       shift and go to state 145


state 105

    (24) IDX -> ID [ EXPRESSION , . EXPRESSION ] = EXPRESSION
    (30) IDX -> ID [ EXPRESSION , . EXPRESSION ] ADDASSIGN EXPRESSION
    (35) IDX -> ID [ EXPRESSION , . EXPRESSION ] SUBASSIGN EXPRESSION
    (40) IDX -> ID [ EXPRESSION , . EXPRESSION ] MULASSIGN EXPRESSION
    (45) IDX -> ID [ EXPRESSION , . EXPRESSION ] DIVASSIGN EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 146

state 106

    (25) IDX -> ID [ EXPRESSION : . EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 147

state 107

    (71) IFX -> IF ( CONDITION ) . ONELINE
    (72) IFX -> IF ( CONDITION ) . BLOCK
    (73) IFX -> IF ( CONDITION ) . ONELINE ELSE ONELINE
    (74) IFX -> IF ( CONDITION ) . ONELINE ELSE BLOCK
    (75) IFX -> IF ( CONDITION ) . BLOCK ELSE ONELINE
    (76) IFX -> IF ( CONDITION ) . BLOCK ELSE BLOCK
    (11) ONELINE -> . IDX ;
    (12) ONELINE -> . IFX
    (13) ONELINE -> . WHILEX
    (14) ONELINE -> . FORX
    (15) ONELINE -> . RETURNX ;
    (16) ONELINE -> . PRINTX ;
    (17) ONELINE -> . PRINTTRIANGLE ;
    (18) BLOCK -> . { LINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION

    {               shift and go to state 18
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17

    ONELINE                        shift and go to state 148
    BLOCK                          shift and go to state 149
    IDX                            shift and go to state 150
    IFX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    PRINTTRIANGLE                  shift and go to state 156

state 108

    (110) CONDITION -> EXPRESSION EQUAL . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 157

state 109

    (111) CONDITION -> EXPRESSION UNEQUAL . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 158

state 110

    (112) CONDITION -> EXPRESSION LESSEQUAL . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 159

state 111

    (113) CONDITION -> EXPRESSION GREATEREQUAL . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 160

state 112

    (114) CONDITION -> EXPRESSION > . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 161

state 113

    (115) CONDITION -> EXPRESSION < . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 162

state 114

    (106) WHILEX -> WHILE ( CONDITION ) . ONELOOPLINE
    (107) WHILEX -> WHILE ( CONDITION ) . LOOPBLOCK
    (88) ONELOOPLINE -> . IDX ;
    (89) ONELOOPLINE -> . WHILEX
    (90) ONELOOPLINE -> . FORX
    (91) ONELOOPLINE -> . RETURNX ;
    (92) ONELOOPLINE -> . PRINTX ;
    (93) ONELOOPLINE -> . PRINTTRIANGLE ;
    (94) ONELOOPLINE -> . LOOPIFX
    (95) ONELOOPLINE -> . BREAKX ;
    (96) ONELOOPLINE -> . CONTINUEX ;
    (99) LOOPBLOCK -> . { LOOPLINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    {               shift and go to state 174
    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    ONELOOPLINE                    shift and go to state 163
    LOOPBLOCK                      shift and go to state 164
    IDX                            shift and go to state 165
    WHILEX                         shift and go to state 166
    FORX                           shift and go to state 167
    RETURNX                        shift and go to state 168
    PRINTX                         shift and go to state 169
    PRINTTRIANGLE                  shift and go to state 170
    LOOPIFX                        shift and go to state 171
    BREAKX                         shift and go to state 172
    CONTINUEX                      shift and go to state 173

state 115

    (108) FORX -> FOR ID = EXPRESSION . : EXPRESSION ONELOOPLINE
    (109) FORX -> FOR ID = EXPRESSION . : EXPRESSION LOOPBLOCK
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    :               shift and go to state 178
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 116

    (129) EXPRESSION -> EXPRESSION + EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    -               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ;               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ,               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTADD          reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTSUB          reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTMUL          reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTDIV          reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    '               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ]               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    :               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    EQUAL           reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    UNEQUAL         reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    LESSEQUAL       reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    GREATEREQUAL    reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    >               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    <               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    )               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    {               reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ID              reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    WHILE           reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    FOR             reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    RETURN          reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    PRINT           reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    IF              reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    BREAK           reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    CONTINUE        reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    *               shift and go to state 82
    /               shift and go to state 83

  ! *               [ reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! /               [ reduce using rule 129 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! +               [ shift and go to state 80 ]
  ! -               [ shift and go to state 81 ]


state 117

    (130) EXPRESSION -> EXPRESSION - EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    -               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ;               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ,               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTADD          reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTSUB          reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTMUL          reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTDIV          reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    '               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ]               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    :               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    EQUAL           reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    UNEQUAL         reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    LESSEQUAL       reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    GREATEREQUAL    reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    >               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    <               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    )               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    {               reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ID              reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    WHILE           reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    FOR             reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    RETURN          reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    PRINT           reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    IF              reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    BREAK           reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    CONTINUE        reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    *               shift and go to state 82
    /               shift and go to state 83

  ! *               [ reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! /               [ reduce using rule 130 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! +               [ shift and go to state 80 ]
  ! -               [ shift and go to state 81 ]


state 118

    (131) EXPRESSION -> EXPRESSION * EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    -               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    *               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    /               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ;               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ,               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTADD          reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTSUB          reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTMUL          reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTDIV          reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    '               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ]               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    :               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    EQUAL           reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    UNEQUAL         reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    LESSEQUAL       reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    GREATEREQUAL    reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    >               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    <               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    )               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    {               reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ID              reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    WHILE           reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    FOR             reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    RETURN          reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    PRINT           reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    IF              reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    BREAK           reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    CONTINUE        reduce using rule 131 (EXPRESSION -> EXPRESSION * EXPRESSION .)

  ! +               [ shift and go to state 80 ]
  ! -               [ shift and go to state 81 ]
  ! *               [ shift and go to state 82 ]
  ! /               [ shift and go to state 83 ]


state 119

    (132) EXPRESSION -> EXPRESSION / EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    -               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    *               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    /               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ;               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ,               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTADD          reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTSUB          reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTMUL          reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTDIV          reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    '               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ]               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    :               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    EQUAL           reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    UNEQUAL         reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    LESSEQUAL       reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    GREATEREQUAL    reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    >               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    <               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    )               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    {               reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ID              reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    WHILE           reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    FOR             reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    RETURN          reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    PRINT           reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    IF              reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    BREAK           reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    CONTINUE        reduce using rule 132 (EXPRESSION -> EXPRESSION / EXPRESSION .)

  ! +               [ shift and go to state 80 ]
  ! -               [ shift and go to state 81 ]
  ! *               [ shift and go to state 82 ]
  ! /               [ shift and go to state 83 ]


state 120

    (133) EXPRESSION -> ( EXPRESSION ) .

    +               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    -               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    *               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    /               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    ;               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    ,               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    DOTADD          reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    DOTSUB          reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    DOTMUL          reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    DOTDIV          reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    '               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    ]               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    :               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    EQUAL           reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    UNEQUAL         reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    LESSEQUAL       reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    GREATEREQUAL    reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    >               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    <               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    )               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    {               reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    ID              reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    WHILE           reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    FOR             reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    RETURN          reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    PRINT           reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    IF              reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    BREAK           reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)
    CONTINUE        reduce using rule 133 (EXPRESSION -> ( EXPRESSION ) .)


state 121

    (117) PRINTTRIANGLE -> PRINT STRING * EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 117 (PRINTTRIANGLE -> PRINT STRING * EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 122

    (119) PRINTMANY -> EXPRESSION , PRINTMANY .

    ;               reduce using rule 119 (PRINTMANY -> EXPRESSION , PRINTMANY .)


state 123

    (124) STRINGX -> STRING .

    ,               reduce using rule 124 (STRINGX -> STRING .)
    ;               reduce using rule 124 (STRINGX -> STRING .)


state 124

    (118) PRINTMANY -> STRINGX , PRINTMANY .

    ;               reduce using rule 118 (PRINTMANY -> STRINGX , PRINTMANY .)


state 125

    (120) PRINTMANY -> ID TABLE , . PRINTMANY
    (118) PRINTMANY -> . STRINGX , PRINTMANY
    (119) PRINTMANY -> . EXPRESSION , PRINTMANY
    (120) PRINTMANY -> . ID TABLE , PRINTMANY
    (121) PRINTMANY -> . STRINGX
    (122) PRINTMANY -> . EXPRESSION
    (123) PRINTMANY -> . ID TABLE
    (124) STRINGX -> . STRING
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    ID              shift and go to state 46
    STRING          shift and go to state 123
    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    (               shift and go to state 41
    -               shift and go to state 40

    PRINTMANY                      shift and go to state 179
    STRINGX                        shift and go to state 45
    EXPRESSION                     shift and go to state 44

state 126

    (66) MATRIXEXPR -> EXPRESSION DOTADD EXPRESSION .
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 66 (MATRIXEXPR -> EXPRESSION DOTADD EXPRESSION .)
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 127

    (62) MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR .

    ;               reduce using rule 62 (MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR .)


state 128

    (67) MATRIXEXPR -> EXPRESSION DOTSUB EXPRESSION .
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 67 (MATRIXEXPR -> EXPRESSION DOTSUB EXPRESSION .)
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 129

    (63) MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR .

    ;               reduce using rule 63 (MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR .)


state 130

    (68) MATRIXEXPR -> EXPRESSION DOTMUL EXPRESSION .
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 68 (MATRIXEXPR -> EXPRESSION DOTMUL EXPRESSION .)
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 131

    (64) MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR .

    ;               reduce using rule 64 (MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR .)


state 132

    (69) MATRIXEXPR -> EXPRESSION DOTDIV EXPRESSION .
    (62) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (63) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (64) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (65) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (66) MATRIXEXPR -> EXPRESSION . DOTADD EXPRESSION
    (67) MATRIXEXPR -> EXPRESSION . DOTSUB EXPRESSION
    (68) MATRIXEXPR -> EXPRESSION . DOTMUL EXPRESSION
    (69) MATRIXEXPR -> EXPRESSION . DOTDIV EXPRESSION
    (70) MATRIXEXPR -> EXPRESSION . '
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 69 (MATRIXEXPR -> EXPRESSION DOTDIV EXPRESSION .)
    DOTADD          shift and go to state 92
    DOTSUB          shift and go to state 93
    DOTMUL          shift and go to state 94
    DOTDIV          shift and go to state 95
    '               shift and go to state 96
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 133

    (65) MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR .

    ;               reduce using rule 65 (MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR .)


state 134

    (52) MATRIX -> [ MATRIXINSIDE ] .

    ;               reduce using rule 52 (MATRIX -> [ MATRIXINSIDE ] .)


state 135

    (59) TABLE -> [ VALUES ] .

    ;               reduce using rule 59 (TABLE -> [ VALUES ] .)
    ,               reduce using rule 59 (TABLE -> [ VALUES ] .)
    ]               reduce using rule 59 (TABLE -> [ VALUES ] .)


state 136

    (57) MATRIXINSIDE -> TABLE , . MATRIXINSIDE
    (57) MATRIXINSIDE -> . TABLE , MATRIXINSIDE
    (58) MATRIXINSIDE -> . TABLE
    (59) TABLE -> . [ VALUES ]

    [               shift and go to state 90

    TABLE                          shift and go to state 99
    MATRIXINSIDE                   shift and go to state 180

state 137

    (60) VALUES -> EXPRESSION , . VALUES
    (60) VALUES -> . EXPRESSION , VALUES
    (61) VALUES -> . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 100
    VALUES                         shift and go to state 181

state 138

    (46) ZEROSX -> ZEROS ( EXPRESSION . )
    (47) ZEROSX -> ZEROS ( EXPRESSION . , EXPRESSION )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 182
    ,               shift and go to state 183
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 139

    (48) ONESX -> ONES ( EXPRESSION . )
    (49) ONESX -> ONES ( EXPRESSION . , EXPRESSION )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 184
    ,               shift and go to state 185
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 140

    (50) EYEX -> EYE ( EXPRESSION . )
    (51) EYEX -> EYE ( EXPRESSION . , EXPRESSION )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 186
    ,               shift and go to state 187
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 141

    (23) IDX -> ID [ EXPRESSION ] = . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 188

state 142

    (29) IDX -> ID [ EXPRESSION ] ADDASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 189

state 143

    (34) IDX -> ID [ EXPRESSION ] SUBASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 190

state 144

    (39) IDX -> ID [ EXPRESSION ] MULASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 191

state 145

    (44) IDX -> ID [ EXPRESSION ] DIVASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 192

state 146

    (24) IDX -> ID [ EXPRESSION , EXPRESSION . ] = EXPRESSION
    (30) IDX -> ID [ EXPRESSION , EXPRESSION . ] ADDASSIGN EXPRESSION
    (35) IDX -> ID [ EXPRESSION , EXPRESSION . ] SUBASSIGN EXPRESSION
    (40) IDX -> ID [ EXPRESSION , EXPRESSION . ] MULASSIGN EXPRESSION
    (45) IDX -> ID [ EXPRESSION , EXPRESSION . ] DIVASSIGN EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ]               shift and go to state 193
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 147

    (25) IDX -> ID [ EXPRESSION : EXPRESSION . , EXPRESSION : EXPRESSION ] = EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ,               shift and go to state 194
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 148

    (71) IFX -> IF ( CONDITION ) ONELINE .
    (73) IFX -> IF ( CONDITION ) ONELINE . ELSE ONELINE
    (74) IFX -> IF ( CONDITION ) ONELINE . ELSE BLOCK

    ID              reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    IF              reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    WHILE           reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    FOR             reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    RETURN          reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    PRINT           reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    {               reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    $end            reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    }               reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .)
    ELSE            shift and go to state 195

  ! ELSE            [ reduce using rule 71 (IFX -> IF ( CONDITION ) ONELINE .) ]


state 149

    (72) IFX -> IF ( CONDITION ) BLOCK .
    (75) IFX -> IF ( CONDITION ) BLOCK . ELSE ONELINE
    (76) IFX -> IF ( CONDITION ) BLOCK . ELSE BLOCK

    ID              reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    IF              reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    WHILE           reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    FOR             reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    RETURN          reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    PRINT           reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    {               reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    $end            reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    }               reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .)
    ELSE            shift and go to state 196

  ! ELSE            [ reduce using rule 72 (IFX -> IF ( CONDITION ) BLOCK .) ]


state 150

    (11) ONELINE -> IDX . ;

    ;               shift and go to state 197


state 151

    (12) ONELINE -> IFX .

    ELSE            reduce using rule 12 (ONELINE -> IFX .)
    ID              reduce using rule 12 (ONELINE -> IFX .)
    IF              reduce using rule 12 (ONELINE -> IFX .)
    WHILE           reduce using rule 12 (ONELINE -> IFX .)
    FOR             reduce using rule 12 (ONELINE -> IFX .)
    RETURN          reduce using rule 12 (ONELINE -> IFX .)
    PRINT           reduce using rule 12 (ONELINE -> IFX .)
    {               reduce using rule 12 (ONELINE -> IFX .)
    $end            reduce using rule 12 (ONELINE -> IFX .)
    }               reduce using rule 12 (ONELINE -> IFX .)


state 152

    (13) ONELINE -> WHILEX .

    ELSE            reduce using rule 13 (ONELINE -> WHILEX .)
    ID              reduce using rule 13 (ONELINE -> WHILEX .)
    IF              reduce using rule 13 (ONELINE -> WHILEX .)
    WHILE           reduce using rule 13 (ONELINE -> WHILEX .)
    FOR             reduce using rule 13 (ONELINE -> WHILEX .)
    RETURN          reduce using rule 13 (ONELINE -> WHILEX .)
    PRINT           reduce using rule 13 (ONELINE -> WHILEX .)
    {               reduce using rule 13 (ONELINE -> WHILEX .)
    $end            reduce using rule 13 (ONELINE -> WHILEX .)
    }               reduce using rule 13 (ONELINE -> WHILEX .)


state 153

    (14) ONELINE -> FORX .

    ELSE            reduce using rule 14 (ONELINE -> FORX .)
    ID              reduce using rule 14 (ONELINE -> FORX .)
    IF              reduce using rule 14 (ONELINE -> FORX .)
    WHILE           reduce using rule 14 (ONELINE -> FORX .)
    FOR             reduce using rule 14 (ONELINE -> FORX .)
    RETURN          reduce using rule 14 (ONELINE -> FORX .)
    PRINT           reduce using rule 14 (ONELINE -> FORX .)
    {               reduce using rule 14 (ONELINE -> FORX .)
    $end            reduce using rule 14 (ONELINE -> FORX .)
    }               reduce using rule 14 (ONELINE -> FORX .)


state 154

    (15) ONELINE -> RETURNX . ;

    ;               shift and go to state 198


state 155

    (16) ONELINE -> PRINTX . ;

    ;               shift and go to state 199


state 156

    (17) ONELINE -> PRINTTRIANGLE . ;

    ;               shift and go to state 200


state 157

    (110) CONDITION -> EXPRESSION EQUAL EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 110 (CONDITION -> EXPRESSION EQUAL EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 158

    (111) CONDITION -> EXPRESSION UNEQUAL EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 111 (CONDITION -> EXPRESSION UNEQUAL EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 159

    (112) CONDITION -> EXPRESSION LESSEQUAL EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 112 (CONDITION -> EXPRESSION LESSEQUAL EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 160

    (113) CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 113 (CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 161

    (114) CONDITION -> EXPRESSION > EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 114 (CONDITION -> EXPRESSION > EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 162

    (115) CONDITION -> EXPRESSION < EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 115 (CONDITION -> EXPRESSION < EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 163

    (106) WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .

    ID              reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    IF              reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    WHILE           reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    FOR             reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    RETURN          reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    PRINT           reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    {               reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    $end            reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    }               reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    ELSE            reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    BREAK           reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    CONTINUE        reduce using rule 106 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)


state 164

    (107) WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .

    ID              reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    IF              reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    WHILE           reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    FOR             reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    RETURN          reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    PRINT           reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    {               reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    $end            reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    }               reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    ELSE            reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    BREAK           reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    CONTINUE        reduce using rule 107 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)


state 165

    (88) ONELOOPLINE -> IDX . ;

    ;               shift and go to state 201


state 166

    (89) ONELOOPLINE -> WHILEX .

    ID              reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    IF              reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    WHILE           reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    FOR             reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    RETURN          reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    PRINT           reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    {               reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    $end            reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    }               reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    ELSE            reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    BREAK           reduce using rule 89 (ONELOOPLINE -> WHILEX .)
    CONTINUE        reduce using rule 89 (ONELOOPLINE -> WHILEX .)


state 167

    (90) ONELOOPLINE -> FORX .

    ID              reduce using rule 90 (ONELOOPLINE -> FORX .)
    IF              reduce using rule 90 (ONELOOPLINE -> FORX .)
    WHILE           reduce using rule 90 (ONELOOPLINE -> FORX .)
    FOR             reduce using rule 90 (ONELOOPLINE -> FORX .)
    RETURN          reduce using rule 90 (ONELOOPLINE -> FORX .)
    PRINT           reduce using rule 90 (ONELOOPLINE -> FORX .)
    {               reduce using rule 90 (ONELOOPLINE -> FORX .)
    $end            reduce using rule 90 (ONELOOPLINE -> FORX .)
    }               reduce using rule 90 (ONELOOPLINE -> FORX .)
    ELSE            reduce using rule 90 (ONELOOPLINE -> FORX .)
    BREAK           reduce using rule 90 (ONELOOPLINE -> FORX .)
    CONTINUE        reduce using rule 90 (ONELOOPLINE -> FORX .)


state 168

    (91) ONELOOPLINE -> RETURNX . ;

    ;               shift and go to state 202


state 169

    (92) ONELOOPLINE -> PRINTX . ;

    ;               shift and go to state 203


state 170

    (93) ONELOOPLINE -> PRINTTRIANGLE . ;

    ;               shift and go to state 204


state 171

    (94) ONELOOPLINE -> LOOPIFX .

    ID              reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    IF              reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    WHILE           reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    FOR             reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    RETURN          reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    PRINT           reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    {               reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    $end            reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    }               reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    ELSE            reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    BREAK           reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)
    CONTINUE        reduce using rule 94 (ONELOOPLINE -> LOOPIFX .)


state 172

    (95) ONELOOPLINE -> BREAKX . ;

    ;               shift and go to state 205


state 173

    (96) ONELOOPLINE -> CONTINUEX . ;

    ;               shift and go to state 206


state 174

    (99) LOOPBLOCK -> { . LOOPLINE }
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    LOOPLINE                       shift and go to state 207
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 175

    (100) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK

    (               shift and go to state 219


state 176

    (97) BREAKX -> BREAK .

    ;               reduce using rule 97 (BREAKX -> BREAK .)


state 177

    (98) CONTINUEX -> CONTINUE .

    ;               reduce using rule 98 (CONTINUEX -> CONTINUE .)


state 178

    (108) FORX -> FOR ID = EXPRESSION : . EXPRESSION ONELOOPLINE
    (109) FORX -> FOR ID = EXPRESSION : . EXPRESSION LOOPBLOCK
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 220

state 179

    (120) PRINTMANY -> ID TABLE , PRINTMANY .

    ;               reduce using rule 120 (PRINTMANY -> ID TABLE , PRINTMANY .)


state 180

    (57) MATRIXINSIDE -> TABLE , MATRIXINSIDE .

    ]               reduce using rule 57 (MATRIXINSIDE -> TABLE , MATRIXINSIDE .)


state 181

    (60) VALUES -> EXPRESSION , VALUES .

    ]               reduce using rule 60 (VALUES -> EXPRESSION , VALUES .)


state 182

    (46) ZEROSX -> ZEROS ( EXPRESSION ) .

    ;               reduce using rule 46 (ZEROSX -> ZEROS ( EXPRESSION ) .)


state 183

    (47) ZEROSX -> ZEROS ( EXPRESSION , . EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 221

state 184

    (48) ONESX -> ONES ( EXPRESSION ) .

    ;               reduce using rule 48 (ONESX -> ONES ( EXPRESSION ) .)


state 185

    (49) ONESX -> ONES ( EXPRESSION , . EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 222

state 186

    (50) EYEX -> EYE ( EXPRESSION ) .

    ;               reduce using rule 50 (EYEX -> EYE ( EXPRESSION ) .)


state 187

    (51) EYEX -> EYE ( EXPRESSION , . EXPRESSION )
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 223

state 188

    (23) IDX -> ID [ EXPRESSION ] = EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 23 (IDX -> ID [ EXPRESSION ] = EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 189

    (29) IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 29 (IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 190

    (34) IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 34 (IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 191

    (39) IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 39 (IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 192

    (44) IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 44 (IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 193

    (24) IDX -> ID [ EXPRESSION , EXPRESSION ] . = EXPRESSION
    (30) IDX -> ID [ EXPRESSION , EXPRESSION ] . ADDASSIGN EXPRESSION
    (35) IDX -> ID [ EXPRESSION , EXPRESSION ] . SUBASSIGN EXPRESSION
    (40) IDX -> ID [ EXPRESSION , EXPRESSION ] . MULASSIGN EXPRESSION
    (45) IDX -> ID [ EXPRESSION , EXPRESSION ] . DIVASSIGN EXPRESSION

    =               shift and go to state 224
    ADDASSIGN       shift and go to state 225
    SUBASSIGN       shift and go to state 226
    MULASSIGN       shift and go to state 227
    DIVASSIGN       shift and go to state 228


state 194

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , . EXPRESSION : EXPRESSION ] = EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 229

state 195

    (73) IFX -> IF ( CONDITION ) ONELINE ELSE . ONELINE
    (74) IFX -> IF ( CONDITION ) ONELINE ELSE . BLOCK
    (11) ONELINE -> . IDX ;
    (12) ONELINE -> . IFX
    (13) ONELINE -> . WHILEX
    (14) ONELINE -> . FORX
    (15) ONELINE -> . RETURNX ;
    (16) ONELINE -> . PRINTX ;
    (17) ONELINE -> . PRINTTRIANGLE ;
    (18) BLOCK -> . { LINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION

    {               shift and go to state 18
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17

    ONELINE                        shift and go to state 230
    BLOCK                          shift and go to state 231
    IDX                            shift and go to state 150
    IFX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    PRINTTRIANGLE                  shift and go to state 156

state 196

    (75) IFX -> IF ( CONDITION ) BLOCK ELSE . ONELINE
    (76) IFX -> IF ( CONDITION ) BLOCK ELSE . BLOCK
    (11) ONELINE -> . IDX ;
    (12) ONELINE -> . IFX
    (13) ONELINE -> . WHILEX
    (14) ONELINE -> . FORX
    (15) ONELINE -> . RETURNX ;
    (16) ONELINE -> . PRINTX ;
    (17) ONELINE -> . PRINTTRIANGLE ;
    (18) BLOCK -> . { LINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (71) IFX -> . IF ( CONDITION ) ONELINE
    (72) IFX -> . IF ( CONDITION ) BLOCK
    (73) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (74) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (75) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (76) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION

    {               shift and go to state 18
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17

    BLOCK                          shift and go to state 232
    ONELINE                        shift and go to state 233
    IDX                            shift and go to state 150
    IFX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    PRINTTRIANGLE                  shift and go to state 156

state 197

    (11) ONELINE -> IDX ; .

    ELSE            reduce using rule 11 (ONELINE -> IDX ; .)
    ID              reduce using rule 11 (ONELINE -> IDX ; .)
    IF              reduce using rule 11 (ONELINE -> IDX ; .)
    WHILE           reduce using rule 11 (ONELINE -> IDX ; .)
    FOR             reduce using rule 11 (ONELINE -> IDX ; .)
    RETURN          reduce using rule 11 (ONELINE -> IDX ; .)
    PRINT           reduce using rule 11 (ONELINE -> IDX ; .)
    {               reduce using rule 11 (ONELINE -> IDX ; .)
    $end            reduce using rule 11 (ONELINE -> IDX ; .)
    }               reduce using rule 11 (ONELINE -> IDX ; .)


state 198

    (15) ONELINE -> RETURNX ; .

    ELSE            reduce using rule 15 (ONELINE -> RETURNX ; .)
    ID              reduce using rule 15 (ONELINE -> RETURNX ; .)
    IF              reduce using rule 15 (ONELINE -> RETURNX ; .)
    WHILE           reduce using rule 15 (ONELINE -> RETURNX ; .)
    FOR             reduce using rule 15 (ONELINE -> RETURNX ; .)
    RETURN          reduce using rule 15 (ONELINE -> RETURNX ; .)
    PRINT           reduce using rule 15 (ONELINE -> RETURNX ; .)
    {               reduce using rule 15 (ONELINE -> RETURNX ; .)
    $end            reduce using rule 15 (ONELINE -> RETURNX ; .)
    }               reduce using rule 15 (ONELINE -> RETURNX ; .)


state 199

    (16) ONELINE -> PRINTX ; .

    ELSE            reduce using rule 16 (ONELINE -> PRINTX ; .)
    ID              reduce using rule 16 (ONELINE -> PRINTX ; .)
    IF              reduce using rule 16 (ONELINE -> PRINTX ; .)
    WHILE           reduce using rule 16 (ONELINE -> PRINTX ; .)
    FOR             reduce using rule 16 (ONELINE -> PRINTX ; .)
    RETURN          reduce using rule 16 (ONELINE -> PRINTX ; .)
    PRINT           reduce using rule 16 (ONELINE -> PRINTX ; .)
    {               reduce using rule 16 (ONELINE -> PRINTX ; .)
    $end            reduce using rule 16 (ONELINE -> PRINTX ; .)
    }               reduce using rule 16 (ONELINE -> PRINTX ; .)


state 200

    (17) ONELINE -> PRINTTRIANGLE ; .

    ELSE            reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    ID              reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    IF              reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    WHILE           reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    FOR             reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    RETURN          reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    PRINT           reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    {               reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    $end            reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)
    }               reduce using rule 17 (ONELINE -> PRINTTRIANGLE ; .)


state 201

    (88) ONELOOPLINE -> IDX ; .

    ID              reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    IF              reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    WHILE           reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    FOR             reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    RETURN          reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    PRINT           reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    {               reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    $end            reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    }               reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    ELSE            reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    BREAK           reduce using rule 88 (ONELOOPLINE -> IDX ; .)
    CONTINUE        reduce using rule 88 (ONELOOPLINE -> IDX ; .)


state 202

    (91) ONELOOPLINE -> RETURNX ; .

    ID              reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    IF              reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    WHILE           reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    FOR             reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    RETURN          reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    PRINT           reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    {               reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    $end            reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    }               reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    ELSE            reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    BREAK           reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)
    CONTINUE        reduce using rule 91 (ONELOOPLINE -> RETURNX ; .)


state 203

    (92) ONELOOPLINE -> PRINTX ; .

    ID              reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    IF              reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    WHILE           reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    FOR             reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    RETURN          reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    PRINT           reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    {               reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    $end            reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    }               reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    ELSE            reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    BREAK           reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)
    CONTINUE        reduce using rule 92 (ONELOOPLINE -> PRINTX ; .)


state 204

    (93) ONELOOPLINE -> PRINTTRIANGLE ; .

    ID              reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    IF              reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    WHILE           reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    FOR             reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    RETURN          reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    PRINT           reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    {               reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    $end            reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    }               reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    ELSE            reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    BREAK           reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)
    CONTINUE        reduce using rule 93 (ONELOOPLINE -> PRINTTRIANGLE ; .)


state 205

    (95) ONELOOPLINE -> BREAKX ; .

    ID              reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    IF              reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    WHILE           reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    FOR             reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    RETURN          reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    PRINT           reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    {               reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    $end            reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    }               reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    ELSE            reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    BREAK           reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)
    CONTINUE        reduce using rule 95 (ONELOOPLINE -> BREAKX ; .)


state 206

    (96) ONELOOPLINE -> CONTINUEX ; .

    ID              reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    IF              reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    WHILE           reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    FOR             reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    RETURN          reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    PRINT           reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    {               reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    $end            reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    }               reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    ELSE            reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    BREAK           reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)
    CONTINUE        reduce using rule 96 (ONELOOPLINE -> CONTINUEX ; .)


state 207

    (99) LOOPBLOCK -> { LOOPLINE . }

    }               shift and go to state 234


state 208

    (77) LOOPLINE -> IDX . ; LOOPLINE

    ;               shift and go to state 235


state 209

    (78) LOOPLINE -> WHILEX . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    WHILEX                         shift and go to state 209
    LOOPLINE                       shift and go to state 236
    IDX                            shift and go to state 208
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 210

    (79) LOOPLINE -> FORX . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    FORX                           shift and go to state 210
    LOOPLINE                       shift and go to state 237
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 211

    (80) LOOPLINE -> RETURNX . ; LOOPLINE

    ;               shift and go to state 238


state 212

    (81) LOOPLINE -> PRINTX . ; LOOPLINE

    ;               shift and go to state 239


state 213

    (82) LOOPLINE -> PRINTTRIANGLE . ; LOOPLINE

    ;               shift and go to state 240


state 214

    (83) LOOPLINE -> LOOPBLOCK . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    LOOPBLOCK                      shift and go to state 214
    LOOPLINE                       shift and go to state 241
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 215

    (84) LOOPLINE -> EMPTY .

    }               reduce using rule 84 (LOOPLINE -> EMPTY .)


state 216

    (85) LOOPLINE -> LOOPIFX . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    LOOPIFX                        shift and go to state 216
    LOOPLINE                       shift and go to state 242
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 217

    (86) LOOPLINE -> BREAKX . ; LOOPLINE

    ;               shift and go to state 243


state 218

    (87) LOOPLINE -> CONTINUEX . ; LOOPLINE

    ;               shift and go to state 244


state 219

    (100) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (110) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (111) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (112) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (113) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (114) CONDITION -> . EXPRESSION > EXPRESSION
    (115) CONDITION -> . EXPRESSION < EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    CONDITION                      shift and go to state 245
    EXPRESSION                     shift and go to state 77

state 220

    (108) FORX -> FOR ID = EXPRESSION : EXPRESSION . ONELOOPLINE
    (109) FORX -> FOR ID = EXPRESSION : EXPRESSION . LOOPBLOCK
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION
    (88) ONELOOPLINE -> . IDX ;
    (89) ONELOOPLINE -> . WHILEX
    (90) ONELOOPLINE -> . FORX
    (91) ONELOOPLINE -> . RETURNX ;
    (92) ONELOOPLINE -> . PRINTX ;
    (93) ONELOOPLINE -> . PRINTTRIANGLE ;
    (94) ONELOOPLINE -> . LOOPIFX
    (95) ONELOOPLINE -> . BREAKX ;
    (96) ONELOOPLINE -> . CONTINUEX ;
    (99) LOOPBLOCK -> . { LOOPLINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83
    {               shift and go to state 174
    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    ONELOOPLINE                    shift and go to state 246
    LOOPBLOCK                      shift and go to state 247
    IDX                            shift and go to state 165
    WHILEX                         shift and go to state 166
    FORX                           shift and go to state 167
    RETURNX                        shift and go to state 168
    PRINTX                         shift and go to state 169
    PRINTTRIANGLE                  shift and go to state 170
    LOOPIFX                        shift and go to state 171
    BREAKX                         shift and go to state 172
    CONTINUEX                      shift and go to state 173

state 221

    (47) ZEROSX -> ZEROS ( EXPRESSION , EXPRESSION . )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 248
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 222

    (49) ONESX -> ONES ( EXPRESSION , EXPRESSION . )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 249
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 223

    (51) EYEX -> EYE ( EXPRESSION , EXPRESSION . )
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 250
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 224

    (24) IDX -> ID [ EXPRESSION , EXPRESSION ] = . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 251

state 225

    (30) IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 252

state 226

    (35) IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 253

state 227

    (40) IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 254

state 228

    (45) IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 255

state 229

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION . : EXPRESSION ] = EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    :               shift and go to state 256
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 230

    (73) IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .

    ID              reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    IF              reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    WHILE           reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    FOR             reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    RETURN          reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    PRINT           reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    {               reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    $end            reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    }               reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    ELSE            reduce using rule 73 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)


state 231

    (74) IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .

    ID              reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    IF              reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    WHILE           reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    FOR             reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    RETURN          reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    PRINT           reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    {               reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    $end            reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    }               reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    ELSE            reduce using rule 74 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)


state 232

    (76) IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .

    ID              reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    IF              reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    WHILE           reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    FOR             reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    RETURN          reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    PRINT           reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    {               reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    $end            reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    }               reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    ELSE            reduce using rule 76 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)


state 233

    (75) IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .

    ID              reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    IF              reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    WHILE           reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    FOR             reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    RETURN          reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    PRINT           reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    {               reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    $end            reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    }               reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    ELSE            reduce using rule 75 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)


state 234

    (99) LOOPBLOCK -> { LOOPLINE } .

    ID              reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    IF              reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    WHILE           reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    FOR             reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    RETURN          reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    PRINT           reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    {               reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    $end            reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    }               reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    ELSE            reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    BREAK           reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)
    CONTINUE        reduce using rule 99 (LOOPBLOCK -> { LOOPLINE } .)


state 235

    (77) LOOPLINE -> IDX ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    IDX                            shift and go to state 208
    LOOPLINE                       shift and go to state 257
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 236

    (78) LOOPLINE -> WHILEX LOOPLINE .

    }               reduce using rule 78 (LOOPLINE -> WHILEX LOOPLINE .)


state 237

    (79) LOOPLINE -> FORX LOOPLINE .

    }               reduce using rule 79 (LOOPLINE -> FORX LOOPLINE .)


state 238

    (80) LOOPLINE -> RETURNX ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    RETURNX                        shift and go to state 211
    LOOPLINE                       shift and go to state 258
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 239

    (81) LOOPLINE -> PRINTX ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    PRINTX                         shift and go to state 212
    LOOPLINE                       shift and go to state 259
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 240

    (82) LOOPLINE -> PRINTTRIANGLE ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    PRINTTRIANGLE                  shift and go to state 213
    LOOPLINE                       shift and go to state 260
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217
    CONTINUEX                      shift and go to state 218

state 241

    (83) LOOPLINE -> LOOPBLOCK LOOPLINE .

    }               reduce using rule 83 (LOOPLINE -> LOOPBLOCK LOOPLINE .)


state 242

    (85) LOOPLINE -> LOOPIFX LOOPLINE .

    }               reduce using rule 85 (LOOPLINE -> LOOPIFX LOOPLINE .)


state 243

    (86) LOOPLINE -> BREAKX ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    BREAKX                         shift and go to state 217
    LOOPLINE                       shift and go to state 261
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    CONTINUEX                      shift and go to state 218

state 244

    (87) LOOPLINE -> CONTINUEX ; . LOOPLINE
    (77) LOOPLINE -> . IDX ; LOOPLINE
    (78) LOOPLINE -> . WHILEX LOOPLINE
    (79) LOOPLINE -> . FORX LOOPLINE
    (80) LOOPLINE -> . RETURNX ; LOOPLINE
    (81) LOOPLINE -> . PRINTX ; LOOPLINE
    (82) LOOPLINE -> . PRINTTRIANGLE ; LOOPLINE
    (83) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (84) LOOPLINE -> . EMPTY
    (85) LOOPLINE -> . LOOPIFX LOOPLINE
    (86) LOOPLINE -> . BREAKX ; LOOPLINE
    (87) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (99) LOOPBLOCK -> . { LOOPLINE }
    (19) EMPTY -> .
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    {               shift and go to state 174
    }               reduce using rule 19 (EMPTY -> .)
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    CONTINUEX                      shift and go to state 218
    LOOPLINE                       shift and go to state 262
    IDX                            shift and go to state 208
    WHILEX                         shift and go to state 209
    FORX                           shift and go to state 210
    RETURNX                        shift and go to state 211
    PRINTX                         shift and go to state 212
    PRINTTRIANGLE                  shift and go to state 213
    LOOPBLOCK                      shift and go to state 214
    EMPTY                          shift and go to state 215
    LOOPIFX                        shift and go to state 216
    BREAKX                         shift and go to state 217

state 245

    (100) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE
    (101) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK
    (102) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK ELSE LOOPBLOCK

    )               shift and go to state 263


state 246

    (108) FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .

    ID              reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    IF              reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    WHILE           reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    FOR             reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    RETURN          reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    PRINT           reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    {               reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    $end            reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    }               reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    ELSE            reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    BREAK           reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    CONTINUE        reduce using rule 108 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)


state 247

    (109) FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .

    ID              reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    IF              reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    WHILE           reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    FOR             reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    RETURN          reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    PRINT           reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    {               reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    $end            reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    }               reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    ELSE            reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    BREAK           reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    CONTINUE        reduce using rule 109 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)


state 248

    (47) ZEROSX -> ZEROS ( EXPRESSION , EXPRESSION ) .

    ;               reduce using rule 47 (ZEROSX -> ZEROS ( EXPRESSION , EXPRESSION ) .)


state 249

    (49) ONESX -> ONES ( EXPRESSION , EXPRESSION ) .

    ;               reduce using rule 49 (ONESX -> ONES ( EXPRESSION , EXPRESSION ) .)


state 250

    (51) EYEX -> EYE ( EXPRESSION , EXPRESSION ) .

    ;               reduce using rule 51 (EYEX -> EYE ( EXPRESSION , EXPRESSION ) .)


state 251

    (24) IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 24 (IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 252

    (30) IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 30 (IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 253

    (35) IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 35 (IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 254

    (40) IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 40 (IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 255

    (45) IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 45 (IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 256

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : . EXPRESSION ] = EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 264

state 257

    (77) LOOPLINE -> IDX ; LOOPLINE .

    }               reduce using rule 77 (LOOPLINE -> IDX ; LOOPLINE .)


state 258

    (80) LOOPLINE -> RETURNX ; LOOPLINE .

    }               reduce using rule 80 (LOOPLINE -> RETURNX ; LOOPLINE .)


state 259

    (81) LOOPLINE -> PRINTX ; LOOPLINE .

    }               reduce using rule 81 (LOOPLINE -> PRINTX ; LOOPLINE .)


state 260

    (82) LOOPLINE -> PRINTTRIANGLE ; LOOPLINE .

    }               reduce using rule 82 (LOOPLINE -> PRINTTRIANGLE ; LOOPLINE .)


state 261

    (86) LOOPLINE -> BREAKX ; LOOPLINE .

    }               reduce using rule 86 (LOOPLINE -> BREAKX ; LOOPLINE .)


state 262

    (87) LOOPLINE -> CONTINUEX ; LOOPLINE .

    }               reduce using rule 87 (LOOPLINE -> CONTINUEX ; LOOPLINE .)


state 263

    (100) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE
    (101) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK
    (102) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK ELSE LOOPBLOCK
    (88) ONELOOPLINE -> . IDX ;
    (89) ONELOOPLINE -> . WHILEX
    (90) ONELOOPLINE -> . FORX
    (91) ONELOOPLINE -> . RETURNX ;
    (92) ONELOOPLINE -> . PRINTX ;
    (93) ONELOOPLINE -> . PRINTTRIANGLE ;
    (94) ONELOOPLINE -> . LOOPIFX
    (95) ONELOOPLINE -> . BREAKX ;
    (96) ONELOOPLINE -> . CONTINUEX ;
    (99) LOOPBLOCK -> . { LOOPLINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    {               shift and go to state 174
    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    ONELOOPLINE                    shift and go to state 265
    LOOPBLOCK                      shift and go to state 266
    IDX                            shift and go to state 165
    WHILEX                         shift and go to state 166
    FORX                           shift and go to state 167
    RETURNX                        shift and go to state 168
    PRINTX                         shift and go to state 169
    PRINTTRIANGLE                  shift and go to state 170
    LOOPIFX                        shift and go to state 171
    BREAKX                         shift and go to state 172
    CONTINUEX                      shift and go to state 173

state 264

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION . ] = EXPRESSION
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ]               shift and go to state 267
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83


state 265

    (100) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .
    (102) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE . ELSE ONELOOPLINE
    (103) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE . ELSE LOOPBLOCK

    ID              reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    IF              reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    WHILE           reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    FOR             reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    RETURN          reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    PRINT           reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    {               reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    $end            reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    }               reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    BREAK           reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    CONTINUE        reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    ELSE            shift and go to state 268

  ! ELSE            [ reduce using rule 100 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .) ]


state 266

    (101) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .
    (104) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK . ELSE ONELOOPLINE
    (105) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK . ELSE LOOPBLOCK

    ID              reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    IF              reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    WHILE           reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    FOR             reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    RETURN          reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    PRINT           reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    {               reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    $end            reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    }               reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    BREAK           reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    CONTINUE        reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    ELSE            shift and go to state 269

  ! ELSE            [ reduce using rule 101 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .) ]


state 267

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] . = EXPRESSION

    =               shift and go to state 270


state 268

    (102) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE . ONELOOPLINE
    (103) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE . LOOPBLOCK
    (88) ONELOOPLINE -> . IDX ;
    (89) ONELOOPLINE -> . WHILEX
    (90) ONELOOPLINE -> . FORX
    (91) ONELOOPLINE -> . RETURNX ;
    (92) ONELOOPLINE -> . PRINTX ;
    (93) ONELOOPLINE -> . PRINTTRIANGLE ;
    (94) ONELOOPLINE -> . LOOPIFX
    (95) ONELOOPLINE -> . BREAKX ;
    (96) ONELOOPLINE -> . CONTINUEX ;
    (99) LOOPBLOCK -> . { LOOPLINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    {               shift and go to state 174
    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    ONELOOPLINE                    shift and go to state 271
    LOOPBLOCK                      shift and go to state 272
    IDX                            shift and go to state 165
    WHILEX                         shift and go to state 166
    FORX                           shift and go to state 167
    RETURNX                        shift and go to state 168
    PRINTX                         shift and go to state 169
    PRINTTRIANGLE                  shift and go to state 170
    LOOPIFX                        shift and go to state 171
    BREAKX                         shift and go to state 172
    CONTINUEX                      shift and go to state 173

state 269

    (104) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE . ONELOOPLINE
    (105) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE . LOOPBLOCK
    (88) ONELOOPLINE -> . IDX ;
    (89) ONELOOPLINE -> . WHILEX
    (90) ONELOOPLINE -> . FORX
    (91) ONELOOPLINE -> . RETURNX ;
    (92) ONELOOPLINE -> . PRINTX ;
    (93) ONELOOPLINE -> . PRINTTRIANGLE ;
    (94) ONELOOPLINE -> . LOOPIFX
    (95) ONELOOPLINE -> . BREAKX ;
    (96) ONELOOPLINE -> . CONTINUEX ;
    (99) LOOPBLOCK -> . { LOOPLINE }
    (20) IDX -> . ID = EXPRESSION
    (21) IDX -> . ID = MATRIX
    (22) IDX -> . ID = TABLE
    (23) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (24) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (25) IDX -> . ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION
    (26) IDX -> . ID ADDASSIGN EXPRESSION
    (27) IDX -> . ID ADDASSIGN MATRIX
    (28) IDX -> . ID ADDASSIGN TABLE
    (29) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (30) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> . ID SUBASSIGN EXPRESSION
    (32) IDX -> . ID SUBASSIGN MATRIX
    (33) IDX -> . ID SUBASSIGN TABLE
    (34) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (35) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> . ID MULASSIGN EXPRESSION
    (37) IDX -> . ID MULASSIGN MATRIX
    (38) IDX -> . ID MULASSIGN TABLE
    (39) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (40) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> . ID DIVASSIGN EXPRESSION
    (42) IDX -> . ID DIVASSIGN MATRIX
    (43) IDX -> . ID DIVASSIGN TABLE
    (44) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (45) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (106) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (107) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (108) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (109) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (125) RETURNX -> . RETURN EXPRESSION
    (116) PRINTX -> . PRINT PRINTMANY
    (117) PRINTTRIANGLE -> . PRINT STRING * EXPRESSION
    (100) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (101) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (102) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (103) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (104) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (105) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (97) BREAKX -> . BREAK
    (98) CONTINUEX -> . CONTINUE

    {               shift and go to state 174
    ID              shift and go to state 12
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 17
    IF              shift and go to state 175
    BREAK           shift and go to state 176
    CONTINUE        shift and go to state 177

    LOOPBLOCK                      shift and go to state 273
    ONELOOPLINE                    shift and go to state 274
    IDX                            shift and go to state 165
    WHILEX                         shift and go to state 166
    FORX                           shift and go to state 167
    RETURNX                        shift and go to state 168
    PRINTX                         shift and go to state 169
    PRINTTRIANGLE                  shift and go to state 170
    LOOPIFX                        shift and go to state 171
    BREAKX                         shift and go to state 172
    CONTINUEX                      shift and go to state 173

state 270

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = . EXPRESSION
    (126) EXPRESSION -> . NUMBER
    (127) EXPRESSION -> . FLOATNUMBER
    (128) EXPRESSION -> . ID
    (129) EXPRESSION -> . EXPRESSION + EXPRESSION
    (130) EXPRESSION -> . EXPRESSION - EXPRESSION
    (131) EXPRESSION -> . EXPRESSION * EXPRESSION
    (132) EXPRESSION -> . EXPRESSION / EXPRESSION
    (133) EXPRESSION -> . ( EXPRESSION )
    (134) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 37
    FLOATNUMBER     shift and go to state 38
    ID              shift and go to state 39
    (               shift and go to state 41
    -               shift and go to state 40

    EXPRESSION                     shift and go to state 275

state 271

    (102) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .

    ID              reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    IF              reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    WHILE           reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    FOR             reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    RETURN          reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    PRINT           reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    {               reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    $end            reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    }               reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    ELSE            reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    BREAK           reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    CONTINUE        reduce using rule 102 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)


state 272

    (103) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .

    ID              reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    IF              reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    WHILE           reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    FOR             reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    RETURN          reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    PRINT           reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    {               reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    $end            reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    }               reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    ELSE            reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    BREAK           reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    CONTINUE        reduce using rule 103 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)


state 273

    (105) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .

    ID              reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    IF              reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    WHILE           reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    FOR             reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    RETURN          reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    PRINT           reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    {               reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    $end            reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    }               reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    ELSE            reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    BREAK           reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    CONTINUE        reduce using rule 105 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)


state 274

    (104) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .

    ID              reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    IF              reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    WHILE           reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    FOR             reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    RETURN          reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    PRINT           reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    {               reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    $end            reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    }               reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    ELSE            reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    BREAK           reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    CONTINUE        reduce using rule 104 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)


state 275

    (25) IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION .
    (129) EXPRESSION -> EXPRESSION . + EXPRESSION
    (130) EXPRESSION -> EXPRESSION . - EXPRESSION
    (131) EXPRESSION -> EXPRESSION . * EXPRESSION
    (132) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 25 (IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION .)
    +               shift and go to state 80
    -               shift and go to state 81
    *               shift and go to state 82
    /               shift and go to state 83

