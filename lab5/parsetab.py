
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFSnonassocELSEright=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleftUNEQUALEQUALleft<>LESSEQUALGREATEREQUALleft+-leftDOTADDDOTSUBleft*/leftDOTMULDOTDIVADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOATNUMBER FOR GREATEREQUAL ID IF IFS LESSEQUAL MULASSIGN NUMBER ONES PRINT RETURN STRING SUBASSIGN UNEQUAL WHILE ZEROSstart : LINELINE : IDX \';\' LINE\n                | IFX LINE\n                | WHILEX LINE\n                | FORX LINE\n                | RETURNX \';\' LINE\n                | PRINTX \';\' LINE\n                | PRINTTRIANGLE \';\' LINE\n                | BLOCK LINE\n                | EMPTYONELINE : IDX \';\'\n                    | IFX\n                    | WHILEX\n                    | FORX\n                    | RETURNX \';\'\n                    | PRINTX \';\'\n                    | PRINTTRIANGLE \';\'\n                    BLOCK : \'{\' LINE \'}\' EMPTY :IDX : ID \'=\' EXPRESSION\n               | ID \'=\' MATRIX\n               | ID \'=\' TABLE\n               | ID \'[\' EXPRESSION \']\' \'=\' EXPRESSION\n               | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' \'=\' EXPRESSION\n               | ID \'[\' EXPRESSION \':\' EXPRESSION \',\' EXPRESSION \':\' EXPRESSION \']\' \'=\' EXPRESSION\n               IDX : ID ADDASSIGN EXPRESSION\n               | ID ADDASSIGN MATRIX\n               | ID ADDASSIGN TABLE\n               | ID \'[\' EXPRESSION \']\' ADDASSIGN EXPRESSION\n               | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' ADDASSIGN EXPRESSION\n               | ID SUBASSIGN EXPRESSION\n               | ID SUBASSIGN MATRIX\n               | ID SUBASSIGN TABLE\n               | ID \'[\' EXPRESSION \']\' SUBASSIGN EXPRESSION\n               | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' SUBASSIGN EXPRESSION\n               | ID MULASSIGN EXPRESSION\n               | ID MULASSIGN MATRIX\n               | ID MULASSIGN TABLE\n               | ID \'[\' EXPRESSION \']\' MULASSIGN EXPRESSION\n               | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' MULASSIGN EXPRESSION\n               | ID DIVASSIGN EXPRESSION\n               | ID DIVASSIGN MATRIX\n               | ID DIVASSIGN TABLE\n               | ID \'[\' EXPRESSION \']\' DIVASSIGN EXPRESSION\n               | ID \'[\' EXPRESSION \',\' EXPRESSION \']\' DIVASSIGN EXPRESSION ZEROSX : ZEROS \'(\' EXPRESSION \')\'\n                    | ZEROS \'(\' EXPRESSION \',\' EXPRESSION \')\' ONESX : ONES \'(\' EXPRESSION \')\'\n                    | ONES \'(\' EXPRESSION \',\' EXPRESSION \')\' EYEX : EYE \'(\' EXPRESSION \')\'\n                    | EYE \'(\' EXPRESSION \',\' EXPRESSION \')\' MATRIX : \'[\' MATRIXINSIDE \']\'\n                    | MATRIXEXPR\n                    | ZEROSX\n                    | ONESX\n                    | EYEXMATRIXINSIDE : TABLE \',\' MATRIXINSIDE\n                        | TABLETABLE : \'[\' VALUES \']\'VALUES :  EXPRESSION \',\' VALUES\n                | EXPRESSIONMATRIXEXPR : EXPRESSION DOTADD MATRIXEXPR\n                   | EXPRESSION DOTSUB MATRIXEXPR\n                   | EXPRESSION DOTMUL MATRIXEXPR\n                   | EXPRESSION DOTDIV MATRIXEXPR\n                   | EXPRESSION DOTADD EXPRESSION\n                   | EXPRESSION DOTSUB EXPRESSION\n                   | EXPRESSION DOTMUL EXPRESSION\n                   | EXPRESSION DOTDIV EXPRESSION\n                   | EXPRESSION "\'" IFX :    IF \'(\' CONDITION \')\' ONELINE %prec IFS\n                |   IF \'(\' CONDITION \')\' BLOCK %prec IFS\n                |   IF \'(\' CONDITION \')\' ONELINE ELSE ONELINE\n                |   IF \'(\' CONDITION \')\' ONELINE ELSE BLOCK\n                |   IF \'(\' CONDITION \')\' BLOCK ELSE ONELINE\n                |   IF \'(\' CONDITION \')\' BLOCK ELSE BLOCK LOOPLINE : IDX \';\' LOOPLINE\n                    | WHILEX LOOPLINE\n                    | FORX LOOPLINE\n                    | RETURNX \';\' LOOPLINE\n                    | PRINTX \';\' LOOPLINE\n                    | PRINTTRIANGLE \';\' LOOPLINE\n                    | LOOPBLOCK LOOPLINE\n                    | EMPTY\n                    | LOOPIFX LOOPLINE\n                    | BREAKX \';\' LOOPLINE\n                    | CONTINUEX \';\' LOOPLINEONELOOPLINE : IDX \';\'\n                        | WHILEX\n                        | FORX\n                        | RETURNX \';\'\n                        | PRINTX \';\'\n                        | PRINTTRIANGLE \';\'\n                        | LOOPIFX\n                        | BREAKX \';\'\n                        | CONTINUEX \';\' BREAKX : BREAK CONTINUEX : CONTINUE LOOPBLOCK : \'{\' LOOPLINE \'}\'LOOPIFX :    IF \'(\' CONDITION \')\' ONELOOPLINE %prec IFS\n                    |   IF \'(\' CONDITION \')\' LOOPBLOCK %prec IFS\n                    |   IF \'(\' CONDITION \')\' ONELOOPLINE ELSE ONELOOPLINE\n                    |   IF \'(\' CONDITION \')\' ONELOOPLINE ELSE LOOPBLOCK\n                    |   IF \'(\' CONDITION \')\' LOOPBLOCK ELSE ONELOOPLINE\n                    |   IF \'(\' CONDITION \')\' LOOPBLOCK ELSE LOOPBLOCK WHILEX : WHILE \'(\' CONDITION \')\' ONELOOPLINE\n                    | WHILE \'(\' CONDITION \')\' LOOPBLOCKFORX : FOR ID \'=\' EXPRESSION \':\' EXPRESSION ONELOOPLINE\n                | FOR ID \'=\' EXPRESSION \':\' EXPRESSION LOOPBLOCKCONDITION : EXPRESSION EQUAL EXPRESSION\n                        | EXPRESSION UNEQUAL EXPRESSION\n                        | EXPRESSION LESSEQUAL EXPRESSION\n                        | EXPRESSION GREATEREQUAL EXPRESSION\n                        | EXPRESSION \'>\' EXPRESSION\n                        | EXPRESSION \'<\' EXPRESSION PRINTX : PRINT PRINTMANY PRINTTRIANGLE : PRINT STRING \'*\' EXPRESSION PRINTMANY : STRINGX \',\' PRINTMANY\n                    |  EXPRESSION \',\' PRINTMANY\n                    |  ID TABLE \',\' PRINTMANY\n                    |  STRINGX\n                    |  EXPRESSION\n                    |  ID TABLE STRINGX :  STRING RETURNX : RETURN EXPRESSION EXPRESSION : NUMBEREXPRESSION : FLOATNUMBEREXPRESSION : IDEXPRESSION : EXPRESSION \'+\' EXPRESSION\n                      | EXPRESSION \'-\' EXPRESSIONEXPRESSION : EXPRESSION \'*\' EXPRESSION\n                      | EXPRESSION \'/\' EXPRESSIONEXPRESSION : \'(\' EXPRESSION \')\'EXPRESSION : \'-\' EXPRESSION'
    
_lr_action_items = {'ID':([0,4,5,6,10,15,16,17,18,19,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,55,79,80,81,82,83,84,86,87,88,90,91,92,93,94,95,101,102,103,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,125,137,141,142,143,144,145,148,149,151,152,153,163,164,166,167,171,174,178,183,185,187,194,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,219,220,224,225,226,227,228,230,231,232,233,234,235,238,239,240,243,244,246,247,256,263,265,266,268,269,270,271,272,273,274,],[12,12,12,12,12,35,39,46,12,12,12,12,12,39,39,39,39,39,39,39,39,-126,-127,-128,39,39,39,39,39,39,39,39,-134,39,46,46,39,-18,39,39,39,39,39,39,39,39,39,12,39,39,39,39,39,39,12,-129,-130,-131,-132,-133,46,39,39,39,39,39,39,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,12,39,39,39,39,39,12,12,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,12,12,12,12,39,12,39,39,39,39,39,-73,-74,-76,-75,-99,12,12,12,12,12,12,-108,-109,39,12,-100,-101,12,12,39,-102,-103,-105,-104,]),'IF':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[13,13,13,13,13,13,13,13,13,13,-126,-127,-128,-134,-18,13,175,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,175,13,13,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,175,175,175,175,175,-73,-74,-76,-75,-99,175,175,175,175,175,175,-108,-109,175,-100,-101,175,175,-102,-103,-105,-104,]),'WHILE':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[14,14,14,14,14,14,14,14,14,14,-126,-127,-128,-134,-18,14,14,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,14,14,14,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,14,14,14,14,14,-73,-74,-76,-75,-99,14,14,14,14,14,14,-108,-109,14,-100,-101,14,14,-102,-103,-105,-104,]),'FOR':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[15,15,15,15,15,15,15,15,15,15,-126,-127,-128,-134,-18,15,15,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,15,15,15,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,15,15,15,15,15,-73,-74,-76,-75,-99,15,15,15,15,15,15,-108,-109,15,-100,-101,15,15,-102,-103,-105,-104,]),'RETURN':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[16,16,16,16,16,16,16,16,16,16,-126,-127,-128,-134,-18,16,16,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,16,16,16,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,16,16,16,16,16,-73,-74,-76,-75,-99,16,16,16,16,16,16,-108,-109,16,-100,-101,16,16,-102,-103,-105,-104,]),'PRINT':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[17,17,17,17,17,17,17,17,17,17,-126,-127,-128,-134,-18,17,17,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,17,17,17,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,17,17,17,17,17,-73,-74,-76,-75,-99,17,17,17,17,17,17,-108,-109,17,-100,-101,17,17,-102,-103,-105,-104,]),'{':([0,4,5,6,10,18,19,23,24,25,37,38,39,84,91,107,114,116,117,118,119,120,148,149,151,152,153,163,164,166,167,171,174,195,196,197,198,199,200,201,202,203,204,205,206,209,210,214,216,220,230,231,232,233,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[18,18,18,18,18,18,18,18,18,18,-126,-127,-128,-134,-18,18,174,-129,-130,-131,-132,-133,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,174,18,18,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,174,174,174,174,174,-73,-74,-76,-75,-99,174,174,174,174,174,174,-108,-109,174,-100,-101,174,174,-102,-103,-105,-104,]),'$end':([0,1,2,4,5,6,10,11,19,20,21,22,23,24,25,26,48,49,50,51,91,148,149,151,152,153,163,164,166,167,171,197,198,199,200,201,202,203,204,205,206,230,231,232,233,234,246,247,265,266,271,272,273,274,],[-19,0,-1,-19,-19,-19,-19,-10,-19,-3,-4,-5,-19,-19,-19,-9,-2,-6,-7,-8,-18,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,-73,-74,-76,-75,-99,-108,-109,-100,-101,-102,-103,-105,-104,]),';':([3,7,8,9,36,37,38,39,42,43,44,45,46,52,53,54,56,57,58,59,64,65,66,67,68,69,70,71,72,73,74,75,84,89,96,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,150,154,155,156,165,168,169,170,172,173,176,177,179,182,184,186,188,189,190,191,192,208,211,212,213,217,218,248,249,250,251,252,253,254,255,275,],[19,23,24,25,-125,-126,-127,-128,-116,-124,-122,-121,-128,-20,-21,-22,-53,-54,-55,-56,-26,-27,-28,-31,-32,-33,-36,-37,-38,-41,-42,-43,-134,-123,-70,-129,-130,-131,-132,-133,-117,-119,-124,-118,-66,-62,-67,-63,-68,-64,-69,-65,-52,-59,197,198,199,200,201,202,203,204,205,206,-97,-98,-120,-46,-48,-50,-23,-29,-34,-39,-44,235,238,239,240,243,244,-47,-49,-51,-24,-30,-35,-40,-45,-25,]),'}':([4,5,6,10,11,18,19,20,21,22,23,24,25,26,47,48,49,50,51,91,148,149,151,152,153,163,164,166,167,171,174,197,198,199,200,201,202,203,204,205,206,207,209,210,214,215,216,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,257,258,259,260,261,262,265,266,271,272,273,274,],[-19,-19,-19,-19,-10,-19,-19,-3,-4,-5,-19,-19,-19,-9,91,-2,-6,-7,-8,-18,-71,-72,-12,-13,-14,-106,-107,-89,-90,-94,-19,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,234,-19,-19,-19,-84,-19,-73,-74,-76,-75,-99,-19,-78,-79,-19,-19,-19,-83,-85,-19,-19,-108,-109,-77,-80,-81,-82,-86,-87,-100,-101,-102,-103,-105,-104,]),'=':([12,35,104,193,267,],[27,79,141,224,270,]),'[':([12,27,29,30,31,32,46,55,136,],[28,55,55,55,55,55,90,90,90,]),'ADDASSIGN':([12,104,193,],[29,142,225,]),'SUBASSIGN':([12,104,193,],[30,143,226,]),'MULASSIGN':([12,104,193,],[31,144,227,]),'DIVASSIGN':([12,104,193,],[32,145,228,]),'(':([13,14,16,17,27,28,29,30,31,32,33,34,40,41,55,60,61,62,79,80,81,82,83,86,87,88,90,92,93,94,95,101,102,103,105,106,108,109,110,111,112,113,125,137,141,142,143,144,145,175,178,183,185,187,194,219,224,225,226,227,228,256,270,],[33,34,41,41,41,41,41,41,41,41,41,41,41,41,41,101,102,103,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,219,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'NUMBER':([16,17,27,28,29,30,31,32,33,34,40,41,55,79,80,81,82,83,86,87,88,90,92,93,94,95,101,102,103,105,106,108,109,110,111,112,113,125,137,141,142,143,144,145,178,183,185,187,194,219,224,225,226,227,228,256,270,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FLOATNUMBER':([16,17,27,28,29,30,31,32,33,34,40,41,55,79,80,81,82,83,86,87,88,90,92,93,94,95,101,102,103,105,106,108,109,110,111,112,113,125,137,141,142,143,144,145,178,183,185,187,194,219,224,225,226,227,228,256,270,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'-':([16,17,27,28,29,30,31,32,33,34,36,37,38,39,40,41,44,46,52,55,63,64,67,70,73,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,95,100,101,102,103,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,125,126,128,130,132,137,138,139,140,141,142,143,144,145,146,147,157,158,159,160,161,162,178,183,185,187,188,189,190,191,192,194,219,220,221,222,223,224,225,226,227,228,229,251,252,253,254,255,256,264,270,275,],[40,40,40,40,40,40,40,40,40,40,81,-126,-127,-128,40,40,81,-128,81,40,81,81,81,81,81,81,40,40,40,40,40,-134,81,40,40,40,40,40,40,40,40,81,40,40,40,40,40,40,40,40,40,40,40,81,-129,-130,-131,-132,-133,81,40,81,81,81,81,40,81,81,81,40,40,40,40,40,81,81,81,81,81,81,81,81,40,40,40,40,81,81,81,81,81,40,40,81,81,81,81,40,40,40,40,40,81,81,81,81,81,81,40,81,40,81,]),'STRING':([17,87,88,125,],[43,123,123,123,]),'ZEROS':([27,29,30,31,32,],[60,60,60,60,60,]),'ONES':([27,29,30,31,32,],[61,61,61,61,61,]),'EYE':([27,29,30,31,32,],[62,62,62,62,62,]),'+':([36,37,38,39,44,46,52,63,64,67,70,73,77,84,85,100,115,116,117,118,119,120,121,126,128,130,132,138,139,140,146,147,157,158,159,160,161,162,188,189,190,191,192,220,221,222,223,229,251,252,253,254,255,264,275,],[80,-126,-127,-128,80,-128,80,80,80,80,80,80,80,-134,80,80,80,-129,-130,-131,-132,-133,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'*':([36,37,38,39,43,44,46,52,63,64,67,70,73,77,84,85,100,115,116,117,118,119,120,121,126,128,130,132,138,139,140,146,147,157,158,159,160,161,162,188,189,190,191,192,220,221,222,223,229,251,252,253,254,255,264,275,],[82,-126,-127,-128,86,82,-128,82,82,82,82,82,82,82,82,82,82,82,82,82,-131,-132,-133,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'/':([36,37,38,39,44,46,52,63,64,67,70,73,77,84,85,100,115,116,117,118,119,120,121,126,128,130,132,138,139,140,146,147,157,158,159,160,161,162,188,189,190,191,192,220,221,222,223,229,251,252,253,254,255,264,275,],[83,-126,-127,-128,83,-128,83,83,83,83,83,83,83,83,83,83,83,83,83,-131,-132,-133,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),',':([37,38,39,43,44,45,46,63,84,89,99,100,116,117,118,119,120,123,135,138,139,140,147,],[-126,-127,-128,-124,87,88,-128,105,-134,125,136,137,-129,-130,-131,-132,-133,-124,-59,183,185,187,194,]),'DOTADD':([37,38,39,52,64,67,70,73,84,116,117,118,119,120,126,128,130,132,],[-126,-127,-128,92,92,92,92,92,-134,-129,-130,-131,-132,-133,92,92,92,92,]),'DOTSUB':([37,38,39,52,64,67,70,73,84,116,117,118,119,120,126,128,130,132,],[-126,-127,-128,93,93,93,93,93,-134,-129,-130,-131,-132,-133,93,93,93,93,]),'DOTMUL':([37,38,39,52,64,67,70,73,84,116,117,118,119,120,126,128,130,132,],[-126,-127,-128,94,94,94,94,94,-134,-129,-130,-131,-132,-133,94,94,94,94,]),'DOTDIV':([37,38,39,52,64,67,70,73,84,116,117,118,119,120,126,128,130,132,],[-126,-127,-128,95,95,95,95,95,-134,-129,-130,-131,-132,-133,95,95,95,95,]),"'":([37,38,39,52,64,67,70,73,84,116,117,118,119,120,126,128,130,132,],[-126,-127,-128,96,96,96,96,96,-134,-129,-130,-131,-132,-133,96,96,96,96,]),']':([37,38,39,63,84,97,98,99,100,116,117,118,119,120,135,146,180,181,264,],[-126,-127,-128,104,-134,134,135,-58,-61,-129,-130,-131,-132,-133,-59,193,-57,-60,267,]),':':([37,38,39,63,84,115,116,117,118,119,120,229,],[-126,-127,-128,106,-134,178,-129,-130,-131,-132,-133,256,]),'EQUAL':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,108,-134,-129,-130,-131,-132,-133,]),'UNEQUAL':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,109,-134,-129,-130,-131,-132,-133,]),'LESSEQUAL':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,110,-134,-129,-130,-131,-132,-133,]),'GREATEREQUAL':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,111,-134,-129,-130,-131,-132,-133,]),'>':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,112,-134,-129,-130,-131,-132,-133,]),'<':([37,38,39,77,84,116,117,118,119,120,],[-126,-127,-128,113,-134,-129,-130,-131,-132,-133,]),')':([37,38,39,76,78,84,85,116,117,118,119,120,138,139,140,157,158,159,160,161,162,221,222,223,245,],[-126,-127,-128,107,114,-134,120,-129,-130,-131,-132,-133,182,184,186,-110,-111,-112,-113,-114,-115,248,249,250,263,]),'BREAK':([37,38,39,84,114,116,117,118,119,120,163,164,166,167,171,174,201,202,203,204,205,206,209,210,214,216,220,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[-126,-127,-128,-134,176,-129,-130,-131,-132,-133,-106,-107,-89,-90,-94,176,-88,-91,-92,-93,-95,-96,176,176,176,176,176,-99,176,176,176,176,176,176,-108,-109,176,-100,-101,176,176,-102,-103,-105,-104,]),'CONTINUE':([37,38,39,84,114,116,117,118,119,120,163,164,166,167,171,174,201,202,203,204,205,206,209,210,214,216,220,234,235,238,239,240,243,244,246,247,263,265,266,268,269,271,272,273,274,],[-126,-127,-128,-134,177,-129,-130,-131,-132,-133,-106,-107,-89,-90,-94,177,-88,-91,-92,-93,-95,-96,177,177,177,177,177,-99,177,177,177,177,177,177,-108,-109,177,-100,-101,177,177,-102,-103,-105,-104,]),'ELSE':([91,148,149,151,152,153,163,164,166,167,171,197,198,199,200,201,202,203,204,205,206,230,231,232,233,234,246,247,265,266,271,272,273,274,],[-18,195,196,-12,-13,-14,-106,-107,-89,-90,-94,-11,-15,-16,-17,-88,-91,-92,-93,-95,-96,-73,-74,-76,-75,-99,-108,-109,268,269,-102,-103,-105,-104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'LINE':([0,4,5,6,10,18,19,23,24,25,],[2,20,21,22,26,47,48,49,50,51,]),'IDX':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[3,3,3,3,3,3,3,3,3,3,150,165,208,150,150,208,208,208,208,165,208,208,208,208,208,208,165,165,165,]),'IFX':([0,4,5,6,10,18,19,23,24,25,107,195,196,],[4,4,4,4,4,4,4,4,4,4,151,151,151,]),'WHILEX':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[5,5,5,5,5,5,5,5,5,5,152,166,209,152,152,209,209,209,209,166,209,209,209,209,209,209,166,166,166,]),'FORX':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[6,6,6,6,6,6,6,6,6,6,153,167,210,153,153,210,210,210,210,167,210,210,210,210,210,210,167,167,167,]),'RETURNX':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[7,7,7,7,7,7,7,7,7,7,154,168,211,154,154,211,211,211,211,168,211,211,211,211,211,211,168,168,168,]),'PRINTX':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[8,8,8,8,8,8,8,8,8,8,155,169,212,155,155,212,212,212,212,169,212,212,212,212,212,212,169,169,169,]),'PRINTTRIANGLE':([0,4,5,6,10,18,19,23,24,25,107,114,174,195,196,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[9,9,9,9,9,9,9,9,9,9,156,170,213,156,156,213,213,213,213,170,213,213,213,213,213,213,170,170,170,]),'BLOCK':([0,4,5,6,10,18,19,23,24,25,107,195,196,],[10,10,10,10,10,10,10,10,10,10,149,231,232,]),'EMPTY':([0,4,5,6,10,18,19,23,24,25,174,209,210,214,216,235,238,239,240,243,244,],[11,11,11,11,11,11,11,11,11,11,215,215,215,215,215,215,215,215,215,215,215,]),'EXPRESSION':([16,17,27,28,29,30,31,32,33,34,40,41,55,79,80,81,82,83,86,87,88,90,92,93,94,95,101,102,103,105,106,108,109,110,111,112,113,125,137,141,142,143,144,145,178,183,185,187,194,219,224,225,226,227,228,256,270,],[36,44,52,63,64,67,70,73,77,77,84,85,100,115,116,117,118,119,121,44,44,100,126,128,130,132,138,139,140,146,147,157,158,159,160,161,162,44,100,188,189,190,191,192,220,221,222,223,229,77,251,252,253,254,255,264,275,]),'PRINTMANY':([17,87,88,125,],[42,122,124,179,]),'STRINGX':([17,87,88,125,],[45,45,45,45,]),'MATRIX':([27,29,30,31,32,],[53,65,68,71,74,]),'TABLE':([27,29,30,31,32,46,55,136,],[54,66,69,72,75,89,99,99,]),'MATRIXEXPR':([27,29,30,31,32,92,93,94,95,],[56,56,56,56,56,127,129,131,133,]),'ZEROSX':([27,29,30,31,32,],[57,57,57,57,57,]),'ONESX':([27,29,30,31,32,],[58,58,58,58,58,]),'EYEX':([27,29,30,31,32,],[59,59,59,59,59,]),'CONDITION':([33,34,219,],[76,78,245,]),'MATRIXINSIDE':([55,136,],[97,180,]),'VALUES':([55,90,137,],[98,98,181,]),'ONELINE':([107,195,196,],[148,230,233,]),'ONELOOPLINE':([114,220,263,268,269,],[163,246,265,271,274,]),'LOOPBLOCK':([114,174,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[164,214,214,214,214,214,247,214,214,214,214,214,214,266,272,273,]),'LOOPIFX':([114,174,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[171,216,216,216,216,216,171,216,216,216,216,216,216,171,171,171,]),'BREAKX':([114,174,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[172,217,217,217,217,217,172,217,217,217,217,217,217,172,172,172,]),'CONTINUEX':([114,174,209,210,214,216,220,235,238,239,240,243,244,263,268,269,],[173,218,218,218,218,218,173,218,218,218,218,218,218,173,173,173,]),'LOOPLINE':([174,209,210,214,216,235,238,239,240,243,244,],[207,236,237,241,242,257,258,259,260,261,262,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> LINE','start',1,'p_start','Mparser.py',39),
  ('LINE -> IDX ; LINE','LINE',3,'p_line','Mparser.py',47),
  ('LINE -> IFX LINE','LINE',2,'p_line','Mparser.py',48),
  ('LINE -> WHILEX LINE','LINE',2,'p_line','Mparser.py',49),
  ('LINE -> FORX LINE','LINE',2,'p_line','Mparser.py',50),
  ('LINE -> RETURNX ; LINE','LINE',3,'p_line','Mparser.py',51),
  ('LINE -> PRINTX ; LINE','LINE',3,'p_line','Mparser.py',52),
  ('LINE -> PRINTTRIANGLE ; LINE','LINE',3,'p_line','Mparser.py',53),
  ('LINE -> BLOCK LINE','LINE',2,'p_line','Mparser.py',54),
  ('LINE -> EMPTY','LINE',1,'p_line','Mparser.py',55),
  ('ONELINE -> IDX ;','ONELINE',2,'p_oneline','Mparser.py',66),
  ('ONELINE -> IFX','ONELINE',1,'p_oneline','Mparser.py',67),
  ('ONELINE -> WHILEX','ONELINE',1,'p_oneline','Mparser.py',68),
  ('ONELINE -> FORX','ONELINE',1,'p_oneline','Mparser.py',69),
  ('ONELINE -> RETURNX ;','ONELINE',2,'p_oneline','Mparser.py',70),
  ('ONELINE -> PRINTX ;','ONELINE',2,'p_oneline','Mparser.py',71),
  ('ONELINE -> PRINTTRIANGLE ;','ONELINE',2,'p_oneline','Mparser.py',72),
  ('BLOCK -> { LINE }','BLOCK',3,'p_block','Mparser.py',81),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','Mparser.py',88),
  ('IDX -> ID = EXPRESSION','IDX',3,'p_idx_assign','Mparser.py',92),
  ('IDX -> ID = MATRIX','IDX',3,'p_idx_assign','Mparser.py',93),
  ('IDX -> ID = TABLE','IDX',3,'p_idx_assign','Mparser.py',94),
  ('IDX -> ID [ EXPRESSION ] = EXPRESSION','IDX',6,'p_idx_assign','Mparser.py',95),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION','IDX',8,'p_idx_assign','Mparser.py',96),
  ('IDX -> ID [ EXPRESSION : EXPRESSION , EXPRESSION : EXPRESSION ] = EXPRESSION','IDX',12,'p_idx_assign','Mparser.py',97),
  ('IDX -> ID ADDASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',110),
  ('IDX -> ID ADDASSIGN MATRIX','IDX',3,'p_idx_opassign','Mparser.py',111),
  ('IDX -> ID ADDASSIGN TABLE','IDX',3,'p_idx_opassign','Mparser.py',112),
  ('IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION','IDX',6,'p_idx_opassign','Mparser.py',113),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION','IDX',8,'p_idx_opassign','Mparser.py',114),
  ('IDX -> ID SUBASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',115),
  ('IDX -> ID SUBASSIGN MATRIX','IDX',3,'p_idx_opassign','Mparser.py',116),
  ('IDX -> ID SUBASSIGN TABLE','IDX',3,'p_idx_opassign','Mparser.py',117),
  ('IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION','IDX',6,'p_idx_opassign','Mparser.py',118),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION','IDX',8,'p_idx_opassign','Mparser.py',119),
  ('IDX -> ID MULASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',120),
  ('IDX -> ID MULASSIGN MATRIX','IDX',3,'p_idx_opassign','Mparser.py',121),
  ('IDX -> ID MULASSIGN TABLE','IDX',3,'p_idx_opassign','Mparser.py',122),
  ('IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION','IDX',6,'p_idx_opassign','Mparser.py',123),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION','IDX',8,'p_idx_opassign','Mparser.py',124),
  ('IDX -> ID DIVASSIGN EXPRESSION','IDX',3,'p_idx_opassign','Mparser.py',125),
  ('IDX -> ID DIVASSIGN MATRIX','IDX',3,'p_idx_opassign','Mparser.py',126),
  ('IDX -> ID DIVASSIGN TABLE','IDX',3,'p_idx_opassign','Mparser.py',127),
  ('IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION','IDX',6,'p_idx_opassign','Mparser.py',128),
  ('IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION','IDX',8,'p_idx_opassign','Mparser.py',129),
  ('ZEROSX -> ZEROS ( EXPRESSION )','ZEROSX',4,'p_zerosx','Mparser.py',140),
  ('ZEROSX -> ZEROS ( EXPRESSION , EXPRESSION )','ZEROSX',6,'p_zerosx','Mparser.py',141),
  ('ONESX -> ONES ( EXPRESSION )','ONESX',4,'p_onesx','Mparser.py',150),
  ('ONESX -> ONES ( EXPRESSION , EXPRESSION )','ONESX',6,'p_onesx','Mparser.py',151),
  ('EYEX -> EYE ( EXPRESSION )','EYEX',4,'p_eyex','Mparser.py',160),
  ('EYEX -> EYE ( EXPRESSION , EXPRESSION )','EYEX',6,'p_eyex','Mparser.py',161),
  ('MATRIX -> [ MATRIXINSIDE ]','MATRIX',3,'p_matrix','Mparser.py',170),
  ('MATRIX -> MATRIXEXPR','MATRIX',1,'p_matrix','Mparser.py',171),
  ('MATRIX -> ZEROSX','MATRIX',1,'p_matrix','Mparser.py',172),
  ('MATRIX -> ONESX','MATRIX',1,'p_matrix','Mparser.py',173),
  ('MATRIX -> EYEX','MATRIX',1,'p_matrix','Mparser.py',174),
  ('MATRIXINSIDE -> TABLE , MATRIXINSIDE','MATRIXINSIDE',3,'p_matrixinside','Mparser.py',182),
  ('MATRIXINSIDE -> TABLE','MATRIXINSIDE',1,'p_matrixinside','Mparser.py',183),
  ('TABLE -> [ VALUES ]','TABLE',3,'p_table','Mparser.py',191),
  ('VALUES -> EXPRESSION , VALUES','VALUES',3,'p_values','Mparser.py',196),
  ('VALUES -> EXPRESSION','VALUES',1,'p_values','Mparser.py',197),
  ('MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR','MATRIXEXPR',3,'p_matrixop','Mparser.py',216),
  ('MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR','MATRIXEXPR',3,'p_matrixop','Mparser.py',217),
  ('MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR','MATRIXEXPR',3,'p_matrixop','Mparser.py',218),
  ('MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR','MATRIXEXPR',3,'p_matrixop','Mparser.py',219),
  ('MATRIXEXPR -> EXPRESSION DOTADD EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',220),
  ('MATRIXEXPR -> EXPRESSION DOTSUB EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',221),
  ('MATRIXEXPR -> EXPRESSION DOTMUL EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',222),
  ('MATRIXEXPR -> EXPRESSION DOTDIV EXPRESSION','MATRIXEXPR',3,'p_matrixop','Mparser.py',223),
  ("MATRIXEXPR -> EXPRESSION '",'MATRIXEXPR',2,'p_matrixop','Mparser.py',224),
  ('IFX -> IF ( CONDITION ) ONELINE','IFX',5,'p_ifx_if','Mparser.py',237),
  ('IFX -> IF ( CONDITION ) BLOCK','IFX',5,'p_ifx_if','Mparser.py',238),
  ('IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE','IFX',7,'p_ifx_if','Mparser.py',239),
  ('IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK','IFX',7,'p_ifx_if','Mparser.py',240),
  ('IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE','IFX',7,'p_ifx_if','Mparser.py',241),
  ('IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK','IFX',7,'p_ifx_if','Mparser.py',242),
  ('LOOPLINE -> IDX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',253),
  ('LOOPLINE -> WHILEX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',254),
  ('LOOPLINE -> FORX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',255),
  ('LOOPLINE -> RETURNX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',256),
  ('LOOPLINE -> PRINTX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',257),
  ('LOOPLINE -> PRINTTRIANGLE ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',258),
  ('LOOPLINE -> LOOPBLOCK LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',259),
  ('LOOPLINE -> EMPTY','LOOPLINE',1,'p_loopline','Mparser.py',260),
  ('LOOPLINE -> LOOPIFX LOOPLINE','LOOPLINE',2,'p_loopline','Mparser.py',261),
  ('LOOPLINE -> BREAKX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',262),
  ('LOOPLINE -> CONTINUEX ; LOOPLINE','LOOPLINE',3,'p_loopline','Mparser.py',263),
  ('ONELOOPLINE -> IDX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',274),
  ('ONELOOPLINE -> WHILEX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',275),
  ('ONELOOPLINE -> FORX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',276),
  ('ONELOOPLINE -> RETURNX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',277),
  ('ONELOOPLINE -> PRINTX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',278),
  ('ONELOOPLINE -> PRINTTRIANGLE ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',279),
  ('ONELOOPLINE -> LOOPIFX','ONELOOPLINE',1,'p_oneloopline','Mparser.py',280),
  ('ONELOOPLINE -> BREAKX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',281),
  ('ONELOOPLINE -> CONTINUEX ;','ONELOOPLINE',2,'p_oneloopline','Mparser.py',282),
  ('BREAKX -> BREAK','BREAKX',1,'p_breakx','Mparser.py',289),
  ('CONTINUEX -> CONTINUE','CONTINUEX',1,'p_continuex','Mparser.py',294),
  ('LOOPBLOCK -> { LOOPLINE }','LOOPBLOCK',3,'p_loopblock','Mparser.py',299),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE','LOOPIFX',5,'p_loopifx_if','Mparser.py',305),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK','LOOPIFX',5,'p_loopifx_if','Mparser.py',306),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE','LOOPIFX',7,'p_loopifx_if','Mparser.py',307),
  ('LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK','LOOPIFX',7,'p_loopifx_if','Mparser.py',308),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE','LOOPIFX',7,'p_loopifx_if','Mparser.py',309),
  ('LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK','LOOPIFX',7,'p_loopifx_if','Mparser.py',310),
  ('WHILEX -> WHILE ( CONDITION ) ONELOOPLINE','WHILEX',5,'p_whilex','Mparser.py',321),
  ('WHILEX -> WHILE ( CONDITION ) LOOPBLOCK','WHILEX',5,'p_whilex','Mparser.py',322),
  ('FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE','FORX',7,'p_forx','Mparser.py',329),
  ('FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK','FORX',7,'p_forx','Mparser.py',330),
  ('CONDITION -> EXPRESSION EQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',337),
  ('CONDITION -> EXPRESSION UNEQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',338),
  ('CONDITION -> EXPRESSION LESSEQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',339),
  ('CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION','CONDITION',3,'p_condition','Mparser.py',340),
  ('CONDITION -> EXPRESSION > EXPRESSION','CONDITION',3,'p_condition','Mparser.py',341),
  ('CONDITION -> EXPRESSION < EXPRESSION','CONDITION',3,'p_condition','Mparser.py',342),
  ('PRINTX -> PRINT PRINTMANY','PRINTX',2,'p_printx','Mparser.py',348),
  ('PRINTTRIANGLE -> PRINT STRING * EXPRESSION','PRINTTRIANGLE',4,'p_printtriangle','Mparser.py',353),
  ('PRINTMANY -> STRINGX , PRINTMANY','PRINTMANY',3,'p_printmany','Mparser.py',358),
  ('PRINTMANY -> EXPRESSION , PRINTMANY','PRINTMANY',3,'p_printmany','Mparser.py',359),
  ('PRINTMANY -> ID TABLE , PRINTMANY','PRINTMANY',4,'p_printmany','Mparser.py',360),
  ('PRINTMANY -> STRINGX','PRINTMANY',1,'p_printmany','Mparser.py',361),
  ('PRINTMANY -> EXPRESSION','PRINTMANY',1,'p_printmany','Mparser.py',362),
  ('PRINTMANY -> ID TABLE','PRINTMANY',2,'p_printmany','Mparser.py',363),
  ('STRINGX -> STRING','STRINGX',1,'p_stringx','Mparser.py',375),
  ('RETURNX -> RETURN EXPRESSION','RETURNX',2,'p_returnx_return','Mparser.py',381),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_expression_number','Mparser.py',389),
  ('EXPRESSION -> FLOATNUMBER','EXPRESSION',1,'p_expression_float','Mparser.py',394),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_id','Mparser.py',399),
  ('EXPRESSION -> EXPRESSION + EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',404),
  ('EXPRESSION -> EXPRESSION - EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',405),
  ('EXPRESSION -> EXPRESSION * EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',410),
  ('EXPRESSION -> EXPRESSION / EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',411),
  ('EXPRESSION -> ( EXPRESSION )','EXPRESSION',3,'p_expression_group','Mparser.py',416),
  ('EXPRESSION -> - EXPRESSION','EXPRESSION',2,'p_expression_unarynegation','Mparser.py',421),
]
