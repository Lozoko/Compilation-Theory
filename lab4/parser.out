Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    IFS

Grammar

Rule 0     S' -> start
Rule 1     start -> LINE
Rule 2     LINE -> IDX ; LINE
Rule 3     LINE -> IFX LINE
Rule 4     LINE -> WHILEX LINE
Rule 5     LINE -> FORX LINE
Rule 6     LINE -> RETURNX ; LINE
Rule 7     LINE -> PRINTX ; LINE
Rule 8     LINE -> BLOCK LINE
Rule 9     LINE -> EMPTY
Rule 10    ONELINE -> IDX ;
Rule 11    ONELINE -> IFX
Rule 12    ONELINE -> WHILEX
Rule 13    ONELINE -> FORX
Rule 14    ONELINE -> RETURNX ;
Rule 15    ONELINE -> PRINTX ;
Rule 16    BLOCK -> { LINE }
Rule 17    EMPTY -> <empty>
Rule 18    IDX -> ID = EXPRESSION
Rule 19    IDX -> ID = MATRIX
Rule 20    IDX -> ID = TABLE
Rule 21    IDX -> ID [ EXPRESSION ] = EXPRESSION
Rule 22    IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
Rule 23    IDX -> ID ADDASSIGN EXPRESSION
Rule 24    IDX -> ID ADDASSIGN MATRIX
Rule 25    IDX -> ID ADDASSIGN TABLE
Rule 26    IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION
Rule 27    IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
Rule 28    IDX -> ID SUBASSIGN EXPRESSION
Rule 29    IDX -> ID SUBASSIGN MATRIX
Rule 30    IDX -> ID SUBASSIGN TABLE
Rule 31    IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION
Rule 32    IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
Rule 33    IDX -> ID MULASSIGN EXPRESSION
Rule 34    IDX -> ID MULASSIGN MATRIX
Rule 35    IDX -> ID MULASSIGN TABLE
Rule 36    IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION
Rule 37    IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
Rule 38    IDX -> ID DIVASSIGN EXPRESSION
Rule 39    IDX -> ID DIVASSIGN MATRIX
Rule 40    IDX -> ID DIVASSIGN TABLE
Rule 41    IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION
Rule 42    IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
Rule 43    ZEROSX -> ZEROS ( EXPRESSION )
Rule 44    ONESX -> ONES ( EXPRESSION )
Rule 45    EYEX -> EYE ( EXPRESSION )
Rule 46    MATRIX -> [ MATRIXINSIDE ]
Rule 47    MATRIX -> MATRIXEXPR
Rule 48    MATRIX -> ZEROSX
Rule 49    MATRIX -> ONESX
Rule 50    MATRIX -> EYEX
Rule 51    MATRIXINSIDE -> TABLE , MATRIXINSIDE
Rule 52    MATRIXINSIDE -> TABLE
Rule 53    TABLE -> [ VALUES ]
Rule 54    VALUES -> EXPRESSION , VALUES
Rule 55    VALUES -> EXPRESSION
Rule 56    MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR
Rule 57    MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR
Rule 58    MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR
Rule 59    MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR
Rule 60    MATRIXEXPR -> EXPRESSION '
Rule 61    MATRIXEXPR -> EMPTY
Rule 62    IFX -> IF ( CONDITION ) ONELINE
Rule 63    IFX -> IF ( CONDITION ) BLOCK
Rule 64    IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE
Rule 65    IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK
Rule 66    IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE
Rule 67    IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK
Rule 68    LOOPLINE -> IDX ; LOOPLINE
Rule 69    LOOPLINE -> WHILEX LOOPLINE
Rule 70    LOOPLINE -> FORX LOOPLINE
Rule 71    LOOPLINE -> RETURNX ; LOOPLINE
Rule 72    LOOPLINE -> PRINTX ; LOOPLINE
Rule 73    LOOPLINE -> LOOPBLOCK LOOPLINE
Rule 74    LOOPLINE -> EMPTY
Rule 75    LOOPLINE -> LOOPIFX LOOPLINE
Rule 76    LOOPLINE -> BREAKX ; LOOPLINE
Rule 77    LOOPLINE -> CONTINUEX ; LOOPLINE
Rule 78    ONELOOPLINE -> IDX ;
Rule 79    ONELOOPLINE -> WHILEX
Rule 80    ONELOOPLINE -> FORX
Rule 81    ONELOOPLINE -> RETURNX ;
Rule 82    ONELOOPLINE -> PRINTX ;
Rule 83    ONELOOPLINE -> LOOPIFX
Rule 84    ONELOOPLINE -> BREAKX ;
Rule 85    ONELOOPLINE -> CONTINUEX ;
Rule 86    BREAKX -> BREAK
Rule 87    CONTINUEX -> CONTINUE
Rule 88    LOOPBLOCK -> { LOOPLINE }
Rule 89    LOOPIFX -> IF ( CONDITION ) ONELOOPLINE
Rule 90    LOOPIFX -> IF ( CONDITION ) LOOPBLOCK
Rule 91    LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
Rule 92    LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
Rule 93    LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
Rule 94    LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
Rule 95    WHILEX -> WHILE ( CONDITION ) ONELOOPLINE
Rule 96    WHILEX -> WHILE ( CONDITION ) LOOPBLOCK
Rule 97    FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
Rule 98    FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
Rule 99    CONDITION -> EXPRESSION EQUAL EXPRESSION
Rule 100   CONDITION -> EXPRESSION UNEQUAL EXPRESSION
Rule 101   CONDITION -> EXPRESSION LESSEQUAL EXPRESSION
Rule 102   CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION
Rule 103   CONDITION -> EXPRESSION > EXPRESSION
Rule 104   CONDITION -> EXPRESSION < EXPRESSION
Rule 105   PRINTX -> PRINT PRINTMANY
Rule 106   PRINTMANY -> STRINGX , PRINTMANY
Rule 107   PRINTMANY -> EXPRESSION , PRINTMANY
Rule 108   PRINTMANY -> STRINGX
Rule 109   PRINTMANY -> EXPRESSION
Rule 110   STRINGX -> STRING
Rule 111   RETURNX -> RETURN EXPRESSION
Rule 112   EXPRESSION -> NUMBER
Rule 113   EXPRESSION -> FLOATNUMBER
Rule 114   EXPRESSION -> ID
Rule 115   EXPRESSION -> EXPRESSION + EXPRESSION
Rule 116   EXPRESSION -> EXPRESSION - EXPRESSION
Rule 117   EXPRESSION -> EXPRESSION * EXPRESSION
Rule 118   EXPRESSION -> EXPRESSION / EXPRESSION
Rule 119   EXPRESSION -> ( EXPRESSION )
Rule 120   EXPRESSION -> - EXPRESSION

Terminals, with rules where they appear

'                    : 60
(                    : 43 44 45 62 63 64 65 66 67 89 90 91 92 93 94 95 96 119
)                    : 43 44 45 62 63 64 65 66 67 89 90 91 92 93 94 95 96 119
*                    : 117
+                    : 115
,                    : 22 27 32 37 42 51 54 106 107
-                    : 116 120
/                    : 118
:                    : 97 98
;                    : 2 6 7 10 14 15 68 71 72 76 77 78 81 82 84 85
<                    : 104
=                    : 18 19 20 21 22 97 98
>                    : 103
ADDASSIGN            : 23 24 25 26 27
BREAK                : 86
COMMENT              : 
CONTINUE             : 87
DIVASSIGN            : 38 39 40 41 42
DOTADD               : 56
DOTDIV               : 59
DOTMUL               : 58
DOTSUB               : 57
ELSE                 : 64 65 66 67 91 92 93 94
EQUAL                : 99
EYE                  : 45
FLOATNUMBER          : 113
FOR                  : 97 98
GREATEREQUAL         : 102
ID                   : 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 97 98 114
IF                   : 62 63 64 65 66 67 89 90 91 92 93 94
IFS                  : 
LESSEQUAL            : 101
MULASSIGN            : 33 34 35 36 37
NUMBER               : 112
ONES                 : 44
PRINT                : 105
RETURN               : 111
STRING               : 110
SUBASSIGN            : 28 29 30 31 32
UNEQUAL              : 100
WHILE                : 95 96
ZEROS                : 43
[                    : 21 22 26 27 31 32 36 37 41 42 46 53
]                    : 21 22 26 27 31 32 36 37 41 42 46 53
error                : 
{                    : 16 88
}                    : 16 88

Nonterminals, with rules where they appear

BLOCK                : 8 63 65 66 67 67
BREAKX               : 76 84
CONDITION            : 62 63 64 65 66 67 89 90 91 92 93 94 95 96
CONTINUEX            : 77 85
EMPTY                : 9 61 74
EXPRESSION           : 18 21 21 22 22 22 23 26 26 27 27 27 28 31 31 32 32 32 33 36 36 37 37 37 38 41 41 42 42 42 43 44 45 54 55 56 57 58 59 60 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 107 109 111 115 115 116 116 117 117 118 118 119 120
EYEX                 : 50
FORX                 : 5 13 70 80
IDX                  : 2 10 68 78
IFX                  : 3 11
LINE                 : 1 2 3 4 5 6 7 8 16
LOOPBLOCK            : 73 90 92 93 94 94 96 98
LOOPIFX              : 75 83
LOOPLINE             : 68 69 70 71 72 73 75 76 77 88
MATRIX               : 19 24 29 34 39
MATRIXEXPR           : 47 56 57 58 59
MATRIXINSIDE         : 46 51
ONELINE              : 62 64 64 65 66
ONELOOPLINE          : 89 91 91 92 93 95 97
ONESX                : 49
PRINTMANY            : 105 106 107
PRINTX               : 7 15 72 82
RETURNX              : 6 14 71 81
STRINGX              : 106 108
TABLE                : 20 25 30 35 40 51 52
VALUES               : 53 54
WHILEX               : 4 12 69 79
ZEROSX               : 48
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)

    start                          shift and go to state 1
    LINE                           shift and go to state 2
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 1

    (0) S' -> start .



state 2

    (1) start -> LINE .

    $end            reduce using rule 1 (start -> LINE .)


state 3

    (2) LINE -> IDX . ; LINE

    ;               shift and go to state 18


state 4

    (3) LINE -> IFX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    IFX                            shift and go to state 4
    LINE                           shift and go to state 19
    IDX                            shift and go to state 3
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 5

    (4) LINE -> WHILEX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    WHILEX                         shift and go to state 5
    LINE                           shift and go to state 20
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 6

    (5) LINE -> FORX . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    FORX                           shift and go to state 6
    LINE                           shift and go to state 21
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 7

    (6) LINE -> RETURNX . ; LINE

    ;               shift and go to state 22


state 8

    (7) LINE -> PRINTX . ; LINE

    ;               shift and go to state 23


state 9

    (8) LINE -> BLOCK . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    BLOCK                          shift and go to state 9
    LINE                           shift and go to state 24
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    EMPTY                          shift and go to state 10

state 10

    (9) LINE -> EMPTY .

    $end            reduce using rule 9 (LINE -> EMPTY .)
    }               reduce using rule 9 (LINE -> EMPTY .)


state 11

    (18) IDX -> ID . = EXPRESSION
    (19) IDX -> ID . = MATRIX
    (20) IDX -> ID . = TABLE
    (21) IDX -> ID . [ EXPRESSION ] = EXPRESSION
    (22) IDX -> ID . [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> ID . ADDASSIGN EXPRESSION
    (24) IDX -> ID . ADDASSIGN MATRIX
    (25) IDX -> ID . ADDASSIGN TABLE
    (26) IDX -> ID . [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> ID . [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> ID . SUBASSIGN EXPRESSION
    (29) IDX -> ID . SUBASSIGN MATRIX
    (30) IDX -> ID . SUBASSIGN TABLE
    (31) IDX -> ID . [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> ID . [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> ID . MULASSIGN EXPRESSION
    (34) IDX -> ID . MULASSIGN MATRIX
    (35) IDX -> ID . MULASSIGN TABLE
    (36) IDX -> ID . [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> ID . [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> ID . DIVASSIGN EXPRESSION
    (39) IDX -> ID . DIVASSIGN MATRIX
    (40) IDX -> ID . DIVASSIGN TABLE
    (41) IDX -> ID . [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> ID . [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION

    =               shift and go to state 25
    [               shift and go to state 26
    ADDASSIGN       shift and go to state 27
    SUBASSIGN       shift and go to state 28
    MULASSIGN       shift and go to state 29
    DIVASSIGN       shift and go to state 30


state 12

    (62) IFX -> IF . ( CONDITION ) ONELINE
    (63) IFX -> IF . ( CONDITION ) BLOCK
    (64) IFX -> IF . ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> IF . ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> IF . ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> IF . ( CONDITION ) BLOCK ELSE BLOCK

    (               shift and go to state 31


state 13

    (95) WHILEX -> WHILE . ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> WHILE . ( CONDITION ) LOOPBLOCK

    (               shift and go to state 32


state 14

    (97) FORX -> FOR . ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> FOR . ID = EXPRESSION : EXPRESSION LOOPBLOCK

    ID              shift and go to state 33


state 15

    (111) RETURNX -> RETURN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 34

state 16

    (105) PRINTX -> PRINT . PRINTMANY
    (106) PRINTMANY -> . STRINGX , PRINTMANY
    (107) PRINTMANY -> . EXPRESSION , PRINTMANY
    (108) PRINTMANY -> . STRINGX
    (109) PRINTMANY -> . EXPRESSION
    (110) STRINGX -> . STRING
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    STRING          shift and go to state 43
    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    PRINTMANY                      shift and go to state 40
    STRINGX                        shift and go to state 41
    EXPRESSION                     shift and go to state 42

state 17

    (16) BLOCK -> { . LINE }
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    }               reduce using rule 17 (EMPTY -> .)

    LINE                           shift and go to state 44
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 18

    (2) LINE -> IDX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    IDX                            shift and go to state 3
    LINE                           shift and go to state 45
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 19

    (3) LINE -> IFX LINE .

    $end            reduce using rule 3 (LINE -> IFX LINE .)
    }               reduce using rule 3 (LINE -> IFX LINE .)


state 20

    (4) LINE -> WHILEX LINE .

    $end            reduce using rule 4 (LINE -> WHILEX LINE .)
    }               reduce using rule 4 (LINE -> WHILEX LINE .)


state 21

    (5) LINE -> FORX LINE .

    $end            reduce using rule 5 (LINE -> FORX LINE .)
    }               reduce using rule 5 (LINE -> FORX LINE .)


state 22

    (6) LINE -> RETURNX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    RETURNX                        shift and go to state 7
    LINE                           shift and go to state 46
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    PRINTX                         shift and go to state 8
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 23

    (7) LINE -> PRINTX ; . LINE
    (2) LINE -> . IDX ; LINE
    (3) LINE -> . IFX LINE
    (4) LINE -> . WHILEX LINE
    (5) LINE -> . FORX LINE
    (6) LINE -> . RETURNX ; LINE
    (7) LINE -> . PRINTX ; LINE
    (8) LINE -> . BLOCK LINE
    (9) LINE -> . EMPTY
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (16) BLOCK -> . { LINE }
    (17) EMPTY -> .

    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 17
    $end            reduce using rule 17 (EMPTY -> .)
    }               reduce using rule 17 (EMPTY -> .)

    PRINTX                         shift and go to state 8
    LINE                           shift and go to state 47
    IDX                            shift and go to state 3
    IFX                            shift and go to state 4
    WHILEX                         shift and go to state 5
    FORX                           shift and go to state 6
    RETURNX                        shift and go to state 7
    BLOCK                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 24

    (8) LINE -> BLOCK LINE .

    $end            reduce using rule 8 (LINE -> BLOCK LINE .)
    }               reduce using rule 8 (LINE -> BLOCK LINE .)


state 25

    (18) IDX -> ID = . EXPRESSION
    (19) IDX -> ID = . MATRIX
    (20) IDX -> ID = . TABLE
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (46) MATRIX -> . [ MATRIXINSIDE ]
    (47) MATRIX -> . MATRIXEXPR
    (48) MATRIX -> . ZEROSX
    (49) MATRIX -> . ONESX
    (50) MATRIX -> . EYEX
    (53) TABLE -> . [ VALUES ]
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (43) ZEROSX -> . ZEROS ( EXPRESSION )
    (44) ONESX -> . ONES ( EXPRESSION )
    (45) EYEX -> . EYE ( EXPRESSION )
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    [               shift and go to state 51
    ZEROS           shift and go to state 57
    ONES            shift and go to state 58
    EYE             shift and go to state 59
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 48
    MATRIX                         shift and go to state 49
    TABLE                          shift and go to state 50
    MATRIXEXPR                     shift and go to state 52
    ZEROSX                         shift and go to state 53
    ONESX                          shift and go to state 54
    EYEX                           shift and go to state 55
    EMPTY                          shift and go to state 56

state 26

    (21) IDX -> ID [ . EXPRESSION ] = EXPRESSION
    (22) IDX -> ID [ . EXPRESSION , EXPRESSION ] = EXPRESSION
    (26) IDX -> ID [ . EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> ID [ . EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> ID [ . EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> ID [ . EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> ID [ . EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> ID [ . EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> ID [ . EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> ID [ . EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 60

state 27

    (23) IDX -> ID ADDASSIGN . EXPRESSION
    (24) IDX -> ID ADDASSIGN . MATRIX
    (25) IDX -> ID ADDASSIGN . TABLE
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (46) MATRIX -> . [ MATRIXINSIDE ]
    (47) MATRIX -> . MATRIXEXPR
    (48) MATRIX -> . ZEROSX
    (49) MATRIX -> . ONESX
    (50) MATRIX -> . EYEX
    (53) TABLE -> . [ VALUES ]
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (43) ZEROSX -> . ZEROS ( EXPRESSION )
    (44) ONESX -> . ONES ( EXPRESSION )
    (45) EYEX -> . EYE ( EXPRESSION )
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    [               shift and go to state 51
    ZEROS           shift and go to state 57
    ONES            shift and go to state 58
    EYE             shift and go to state 59
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 61
    MATRIX                         shift and go to state 62
    TABLE                          shift and go to state 63
    MATRIXEXPR                     shift and go to state 52
    ZEROSX                         shift and go to state 53
    ONESX                          shift and go to state 54
    EYEX                           shift and go to state 55
    EMPTY                          shift and go to state 56

state 28

    (28) IDX -> ID SUBASSIGN . EXPRESSION
    (29) IDX -> ID SUBASSIGN . MATRIX
    (30) IDX -> ID SUBASSIGN . TABLE
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (46) MATRIX -> . [ MATRIXINSIDE ]
    (47) MATRIX -> . MATRIXEXPR
    (48) MATRIX -> . ZEROSX
    (49) MATRIX -> . ONESX
    (50) MATRIX -> . EYEX
    (53) TABLE -> . [ VALUES ]
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (43) ZEROSX -> . ZEROS ( EXPRESSION )
    (44) ONESX -> . ONES ( EXPRESSION )
    (45) EYEX -> . EYE ( EXPRESSION )
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    [               shift and go to state 51
    ZEROS           shift and go to state 57
    ONES            shift and go to state 58
    EYE             shift and go to state 59
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 64
    MATRIX                         shift and go to state 65
    TABLE                          shift and go to state 66
    MATRIXEXPR                     shift and go to state 52
    ZEROSX                         shift and go to state 53
    ONESX                          shift and go to state 54
    EYEX                           shift and go to state 55
    EMPTY                          shift and go to state 56

state 29

    (33) IDX -> ID MULASSIGN . EXPRESSION
    (34) IDX -> ID MULASSIGN . MATRIX
    (35) IDX -> ID MULASSIGN . TABLE
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (46) MATRIX -> . [ MATRIXINSIDE ]
    (47) MATRIX -> . MATRIXEXPR
    (48) MATRIX -> . ZEROSX
    (49) MATRIX -> . ONESX
    (50) MATRIX -> . EYEX
    (53) TABLE -> . [ VALUES ]
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (43) ZEROSX -> . ZEROS ( EXPRESSION )
    (44) ONESX -> . ONES ( EXPRESSION )
    (45) EYEX -> . EYE ( EXPRESSION )
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    [               shift and go to state 51
    ZEROS           shift and go to state 57
    ONES            shift and go to state 58
    EYE             shift and go to state 59
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 67
    MATRIX                         shift and go to state 68
    TABLE                          shift and go to state 69
    MATRIXEXPR                     shift and go to state 52
    ZEROSX                         shift and go to state 53
    ONESX                          shift and go to state 54
    EYEX                           shift and go to state 55
    EMPTY                          shift and go to state 56

state 30

    (38) IDX -> ID DIVASSIGN . EXPRESSION
    (39) IDX -> ID DIVASSIGN . MATRIX
    (40) IDX -> ID DIVASSIGN . TABLE
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (46) MATRIX -> . [ MATRIXINSIDE ]
    (47) MATRIX -> . MATRIXEXPR
    (48) MATRIX -> . ZEROSX
    (49) MATRIX -> . ONESX
    (50) MATRIX -> . EYEX
    (53) TABLE -> . [ VALUES ]
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (43) ZEROSX -> . ZEROS ( EXPRESSION )
    (44) ONESX -> . ONES ( EXPRESSION )
    (45) EYEX -> . EYE ( EXPRESSION )
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    [               shift and go to state 51
    ZEROS           shift and go to state 57
    ONES            shift and go to state 58
    EYE             shift and go to state 59
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 70
    MATRIX                         shift and go to state 71
    TABLE                          shift and go to state 72
    MATRIXEXPR                     shift and go to state 52
    ZEROSX                         shift and go to state 53
    ONESX                          shift and go to state 54
    EYEX                           shift and go to state 55
    EMPTY                          shift and go to state 56

state 31

    (62) IFX -> IF ( . CONDITION ) ONELINE
    (63) IFX -> IF ( . CONDITION ) BLOCK
    (64) IFX -> IF ( . CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> IF ( . CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> IF ( . CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> IF ( . CONDITION ) BLOCK ELSE BLOCK
    (99) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (100) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (101) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (102) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (103) CONDITION -> . EXPRESSION > EXPRESSION
    (104) CONDITION -> . EXPRESSION < EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    CONDITION                      shift and go to state 73
    EXPRESSION                     shift and go to state 74

state 32

    (95) WHILEX -> WHILE ( . CONDITION ) ONELOOPLINE
    (96) WHILEX -> WHILE ( . CONDITION ) LOOPBLOCK
    (99) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (100) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (101) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (102) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (103) CONDITION -> . EXPRESSION > EXPRESSION
    (104) CONDITION -> . EXPRESSION < EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    CONDITION                      shift and go to state 75
    EXPRESSION                     shift and go to state 74

state 33

    (97) FORX -> FOR ID . = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> FOR ID . = EXPRESSION : EXPRESSION LOOPBLOCK

    =               shift and go to state 76


state 34

    (111) RETURNX -> RETURN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 111 (RETURNX -> RETURN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 35

    (112) EXPRESSION -> NUMBER .

    +               reduce using rule 112 (EXPRESSION -> NUMBER .)
    -               reduce using rule 112 (EXPRESSION -> NUMBER .)
    *               reduce using rule 112 (EXPRESSION -> NUMBER .)
    /               reduce using rule 112 (EXPRESSION -> NUMBER .)
    ;               reduce using rule 112 (EXPRESSION -> NUMBER .)
    ,               reduce using rule 112 (EXPRESSION -> NUMBER .)
    DOTADD          reduce using rule 112 (EXPRESSION -> NUMBER .)
    DOTSUB          reduce using rule 112 (EXPRESSION -> NUMBER .)
    DOTMUL          reduce using rule 112 (EXPRESSION -> NUMBER .)
    DOTDIV          reduce using rule 112 (EXPRESSION -> NUMBER .)
    '               reduce using rule 112 (EXPRESSION -> NUMBER .)
    ]               reduce using rule 112 (EXPRESSION -> NUMBER .)
    EQUAL           reduce using rule 112 (EXPRESSION -> NUMBER .)
    UNEQUAL         reduce using rule 112 (EXPRESSION -> NUMBER .)
    LESSEQUAL       reduce using rule 112 (EXPRESSION -> NUMBER .)
    GREATEREQUAL    reduce using rule 112 (EXPRESSION -> NUMBER .)
    >               reduce using rule 112 (EXPRESSION -> NUMBER .)
    <               reduce using rule 112 (EXPRESSION -> NUMBER .)
    )               reduce using rule 112 (EXPRESSION -> NUMBER .)
    :               reduce using rule 112 (EXPRESSION -> NUMBER .)
    {               reduce using rule 112 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 112 (EXPRESSION -> NUMBER .)
    WHILE           reduce using rule 112 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 112 (EXPRESSION -> NUMBER .)
    RETURN          reduce using rule 112 (EXPRESSION -> NUMBER .)
    PRINT           reduce using rule 112 (EXPRESSION -> NUMBER .)
    IF              reduce using rule 112 (EXPRESSION -> NUMBER .)
    BREAK           reduce using rule 112 (EXPRESSION -> NUMBER .)
    CONTINUE        reduce using rule 112 (EXPRESSION -> NUMBER .)


state 36

    (113) EXPRESSION -> FLOATNUMBER .

    +               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    -               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    *               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    /               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    ;               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    ,               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    DOTADD          reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    DOTSUB          reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    DOTMUL          reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    DOTDIV          reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    '               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    ]               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    EQUAL           reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    UNEQUAL         reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    LESSEQUAL       reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    GREATEREQUAL    reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    >               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    <               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    )               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    :               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    {               reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    ID              reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    WHILE           reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    FOR             reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    RETURN          reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    PRINT           reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    IF              reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    BREAK           reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)
    CONTINUE        reduce using rule 113 (EXPRESSION -> FLOATNUMBER .)


state 37

    (114) EXPRESSION -> ID .

    +               reduce using rule 114 (EXPRESSION -> ID .)
    -               reduce using rule 114 (EXPRESSION -> ID .)
    *               reduce using rule 114 (EXPRESSION -> ID .)
    /               reduce using rule 114 (EXPRESSION -> ID .)
    ;               reduce using rule 114 (EXPRESSION -> ID .)
    ,               reduce using rule 114 (EXPRESSION -> ID .)
    DOTADD          reduce using rule 114 (EXPRESSION -> ID .)
    DOTSUB          reduce using rule 114 (EXPRESSION -> ID .)
    DOTMUL          reduce using rule 114 (EXPRESSION -> ID .)
    DOTDIV          reduce using rule 114 (EXPRESSION -> ID .)
    '               reduce using rule 114 (EXPRESSION -> ID .)
    ]               reduce using rule 114 (EXPRESSION -> ID .)
    EQUAL           reduce using rule 114 (EXPRESSION -> ID .)
    UNEQUAL         reduce using rule 114 (EXPRESSION -> ID .)
    LESSEQUAL       reduce using rule 114 (EXPRESSION -> ID .)
    GREATEREQUAL    reduce using rule 114 (EXPRESSION -> ID .)
    >               reduce using rule 114 (EXPRESSION -> ID .)
    <               reduce using rule 114 (EXPRESSION -> ID .)
    )               reduce using rule 114 (EXPRESSION -> ID .)
    :               reduce using rule 114 (EXPRESSION -> ID .)
    {               reduce using rule 114 (EXPRESSION -> ID .)
    ID              reduce using rule 114 (EXPRESSION -> ID .)
    WHILE           reduce using rule 114 (EXPRESSION -> ID .)
    FOR             reduce using rule 114 (EXPRESSION -> ID .)
    RETURN          reduce using rule 114 (EXPRESSION -> ID .)
    PRINT           reduce using rule 114 (EXPRESSION -> ID .)
    IF              reduce using rule 114 (EXPRESSION -> ID .)
    BREAK           reduce using rule 114 (EXPRESSION -> ID .)
    CONTINUE        reduce using rule 114 (EXPRESSION -> ID .)


state 38

    (120) EXPRESSION -> - . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 81

state 39

    (119) EXPRESSION -> ( . EXPRESSION )
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 82

state 40

    (105) PRINTX -> PRINT PRINTMANY .

    ;               reduce using rule 105 (PRINTX -> PRINT PRINTMANY .)


state 41

    (106) PRINTMANY -> STRINGX . , PRINTMANY
    (108) PRINTMANY -> STRINGX .

    ,               shift and go to state 83
    ;               reduce using rule 108 (PRINTMANY -> STRINGX .)


state 42

    (107) PRINTMANY -> EXPRESSION . , PRINTMANY
    (109) PRINTMANY -> EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ,               shift and go to state 84
    ;               reduce using rule 109 (PRINTMANY -> EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 43

    (110) STRINGX -> STRING .

    ,               reduce using rule 110 (STRINGX -> STRING .)
    ;               reduce using rule 110 (STRINGX -> STRING .)


state 44

    (16) BLOCK -> { LINE . }

    }               shift and go to state 85


state 45

    (2) LINE -> IDX ; LINE .

    $end            reduce using rule 2 (LINE -> IDX ; LINE .)
    }               reduce using rule 2 (LINE -> IDX ; LINE .)


state 46

    (6) LINE -> RETURNX ; LINE .

    $end            reduce using rule 6 (LINE -> RETURNX ; LINE .)
    }               reduce using rule 6 (LINE -> RETURNX ; LINE .)


state 47

    (7) LINE -> PRINTX ; LINE .

    $end            reduce using rule 7 (LINE -> PRINTX ; LINE .)
    }               reduce using rule 7 (LINE -> PRINTX ; LINE .)


state 48

    (18) IDX -> ID = EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 18 (IDX -> ID = EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90


state 49

    (19) IDX -> ID = MATRIX .

    ;               reduce using rule 19 (IDX -> ID = MATRIX .)


state 50

    (20) IDX -> ID = TABLE .

    ;               reduce using rule 20 (IDX -> ID = TABLE .)


state 51

    (46) MATRIX -> [ . MATRIXINSIDE ]
    (53) TABLE -> [ . VALUES ]
    (51) MATRIXINSIDE -> . TABLE , MATRIXINSIDE
    (52) MATRIXINSIDE -> . TABLE
    (54) VALUES -> . EXPRESSION , VALUES
    (55) VALUES -> . EXPRESSION
    (53) TABLE -> . [ VALUES ]
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    [               shift and go to state 91
    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    MATRIXINSIDE                   shift and go to state 92
    VALUES                         shift and go to state 93
    TABLE                          shift and go to state 94
    EXPRESSION                     shift and go to state 95

state 52

    (47) MATRIX -> MATRIXEXPR .

    ;               reduce using rule 47 (MATRIX -> MATRIXEXPR .)


state 53

    (48) MATRIX -> ZEROSX .

    ;               reduce using rule 48 (MATRIX -> ZEROSX .)


state 54

    (49) MATRIX -> ONESX .

    ;               reduce using rule 49 (MATRIX -> ONESX .)


state 55

    (50) MATRIX -> EYEX .

    ;               reduce using rule 50 (MATRIX -> EYEX .)


state 56

    (61) MATRIXEXPR -> EMPTY .

    ;               reduce using rule 61 (MATRIXEXPR -> EMPTY .)


state 57

    (43) ZEROSX -> ZEROS . ( EXPRESSION )

    (               shift and go to state 96


state 58

    (44) ONESX -> ONES . ( EXPRESSION )

    (               shift and go to state 97


state 59

    (45) EYEX -> EYE . ( EXPRESSION )

    (               shift and go to state 98


state 60

    (21) IDX -> ID [ EXPRESSION . ] = EXPRESSION
    (22) IDX -> ID [ EXPRESSION . , EXPRESSION ] = EXPRESSION
    (26) IDX -> ID [ EXPRESSION . ] ADDASSIGN EXPRESSION
    (27) IDX -> ID [ EXPRESSION . , EXPRESSION ] ADDASSIGN EXPRESSION
    (31) IDX -> ID [ EXPRESSION . ] SUBASSIGN EXPRESSION
    (32) IDX -> ID [ EXPRESSION . , EXPRESSION ] SUBASSIGN EXPRESSION
    (36) IDX -> ID [ EXPRESSION . ] MULASSIGN EXPRESSION
    (37) IDX -> ID [ EXPRESSION . , EXPRESSION ] MULASSIGN EXPRESSION
    (41) IDX -> ID [ EXPRESSION . ] DIVASSIGN EXPRESSION
    (42) IDX -> ID [ EXPRESSION . , EXPRESSION ] DIVASSIGN EXPRESSION
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ]               shift and go to state 99
    ,               shift and go to state 100
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 61

    (23) IDX -> ID ADDASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 23 (IDX -> ID ADDASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90


state 62

    (24) IDX -> ID ADDASSIGN MATRIX .

    ;               reduce using rule 24 (IDX -> ID ADDASSIGN MATRIX .)


state 63

    (25) IDX -> ID ADDASSIGN TABLE .

    ;               reduce using rule 25 (IDX -> ID ADDASSIGN TABLE .)


state 64

    (28) IDX -> ID SUBASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 28 (IDX -> ID SUBASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90


state 65

    (29) IDX -> ID SUBASSIGN MATRIX .

    ;               reduce using rule 29 (IDX -> ID SUBASSIGN MATRIX .)


state 66

    (30) IDX -> ID SUBASSIGN TABLE .

    ;               reduce using rule 30 (IDX -> ID SUBASSIGN TABLE .)


state 67

    (33) IDX -> ID MULASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 33 (IDX -> ID MULASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90


state 68

    (34) IDX -> ID MULASSIGN MATRIX .

    ;               reduce using rule 34 (IDX -> ID MULASSIGN MATRIX .)


state 69

    (35) IDX -> ID MULASSIGN TABLE .

    ;               reduce using rule 35 (IDX -> ID MULASSIGN TABLE .)


state 70

    (38) IDX -> ID DIVASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '

    ;               reduce using rule 38 (IDX -> ID DIVASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90


state 71

    (39) IDX -> ID DIVASSIGN MATRIX .

    ;               reduce using rule 39 (IDX -> ID DIVASSIGN MATRIX .)


state 72

    (40) IDX -> ID DIVASSIGN TABLE .

    ;               reduce using rule 40 (IDX -> ID DIVASSIGN TABLE .)


state 73

    (62) IFX -> IF ( CONDITION . ) ONELINE
    (63) IFX -> IF ( CONDITION . ) BLOCK
    (64) IFX -> IF ( CONDITION . ) ONELINE ELSE ONELINE
    (65) IFX -> IF ( CONDITION . ) ONELINE ELSE BLOCK
    (66) IFX -> IF ( CONDITION . ) BLOCK ELSE ONELINE
    (67) IFX -> IF ( CONDITION . ) BLOCK ELSE BLOCK

    )               shift and go to state 101


state 74

    (99) CONDITION -> EXPRESSION . EQUAL EXPRESSION
    (100) CONDITION -> EXPRESSION . UNEQUAL EXPRESSION
    (101) CONDITION -> EXPRESSION . LESSEQUAL EXPRESSION
    (102) CONDITION -> EXPRESSION . GREATEREQUAL EXPRESSION
    (103) CONDITION -> EXPRESSION . > EXPRESSION
    (104) CONDITION -> EXPRESSION . < EXPRESSION
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    EQUAL           shift and go to state 102
    UNEQUAL         shift and go to state 103
    LESSEQUAL       shift and go to state 104
    GREATEREQUAL    shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 75

    (95) WHILEX -> WHILE ( CONDITION . ) ONELOOPLINE
    (96) WHILEX -> WHILE ( CONDITION . ) LOOPBLOCK

    )               shift and go to state 108


state 76

    (97) FORX -> FOR ID = . EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> FOR ID = . EXPRESSION : EXPRESSION LOOPBLOCK
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 109

state 77

    (115) EXPRESSION -> EXPRESSION + . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 110

state 78

    (116) EXPRESSION -> EXPRESSION - . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 111

state 79

    (117) EXPRESSION -> EXPRESSION * . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 112

state 80

    (118) EXPRESSION -> EXPRESSION / . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 113

state 81

    (120) EXPRESSION -> - EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    -               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    ;               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    ,               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    DOTADD          reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    DOTSUB          reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    DOTMUL          reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    DOTDIV          reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    '               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    ]               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    EQUAL           reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    UNEQUAL         reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    LESSEQUAL       reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    GREATEREQUAL    reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    >               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    <               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    )               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    :               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    {               reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    ID              reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    WHILE           reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    FOR             reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    RETURN          reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    PRINT           reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    IF              reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    BREAK           reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    CONTINUE        reduce using rule 120 (EXPRESSION -> - EXPRESSION .)
    *               shift and go to state 79
    /               shift and go to state 80

  ! *               [ reduce using rule 120 (EXPRESSION -> - EXPRESSION .) ]
  ! /               [ reduce using rule 120 (EXPRESSION -> - EXPRESSION .) ]
  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 78 ]


state 82

    (119) EXPRESSION -> ( EXPRESSION . )
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 114
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 83

    (106) PRINTMANY -> STRINGX , . PRINTMANY
    (106) PRINTMANY -> . STRINGX , PRINTMANY
    (107) PRINTMANY -> . EXPRESSION , PRINTMANY
    (108) PRINTMANY -> . STRINGX
    (109) PRINTMANY -> . EXPRESSION
    (110) STRINGX -> . STRING
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    STRING          shift and go to state 43
    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    STRINGX                        shift and go to state 41
    PRINTMANY                      shift and go to state 115
    EXPRESSION                     shift and go to state 42

state 84

    (107) PRINTMANY -> EXPRESSION , . PRINTMANY
    (106) PRINTMANY -> . STRINGX , PRINTMANY
    (107) PRINTMANY -> . EXPRESSION , PRINTMANY
    (108) PRINTMANY -> . STRINGX
    (109) PRINTMANY -> . EXPRESSION
    (110) STRINGX -> . STRING
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    STRING          shift and go to state 43
    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 42
    PRINTMANY                      shift and go to state 116
    STRINGX                        shift and go to state 41

state 85

    (16) BLOCK -> { LINE } .

    ID              reduce using rule 16 (BLOCK -> { LINE } .)
    IF              reduce using rule 16 (BLOCK -> { LINE } .)
    WHILE           reduce using rule 16 (BLOCK -> { LINE } .)
    FOR             reduce using rule 16 (BLOCK -> { LINE } .)
    RETURN          reduce using rule 16 (BLOCK -> { LINE } .)
    PRINT           reduce using rule 16 (BLOCK -> { LINE } .)
    {               reduce using rule 16 (BLOCK -> { LINE } .)
    $end            reduce using rule 16 (BLOCK -> { LINE } .)
    }               reduce using rule 16 (BLOCK -> { LINE } .)
    ELSE            reduce using rule 16 (BLOCK -> { LINE } .)


state 86

    (56) MATRIXEXPR -> EXPRESSION DOTADD . MATRIXEXPR
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 117
    MATRIXEXPR                     shift and go to state 118
    EMPTY                          shift and go to state 56

state 87

    (57) MATRIXEXPR -> EXPRESSION DOTSUB . MATRIXEXPR
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 117
    MATRIXEXPR                     shift and go to state 119
    EMPTY                          shift and go to state 56

state 88

    (58) MATRIXEXPR -> EXPRESSION DOTMUL . MATRIXEXPR
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 117
    MATRIXEXPR                     shift and go to state 120
    EMPTY                          shift and go to state 56

state 89

    (59) MATRIXEXPR -> EXPRESSION DOTDIV . MATRIXEXPR
    (56) MATRIXEXPR -> . EXPRESSION DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> . EXPRESSION DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> . EXPRESSION DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> . EXPRESSION DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> . EXPRESSION '
    (61) MATRIXEXPR -> . EMPTY
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION
    (17) EMPTY -> .

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38
    ;               reduce using rule 17 (EMPTY -> .)

    EXPRESSION                     shift and go to state 117
    MATRIXEXPR                     shift and go to state 121
    EMPTY                          shift and go to state 56

state 90

    (60) MATRIXEXPR -> EXPRESSION ' .

    ;               reduce using rule 60 (MATRIXEXPR -> EXPRESSION ' .)


state 91

    (53) TABLE -> [ . VALUES ]
    (54) VALUES -> . EXPRESSION , VALUES
    (55) VALUES -> . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    VALUES                         shift and go to state 93
    EXPRESSION                     shift and go to state 95

state 92

    (46) MATRIX -> [ MATRIXINSIDE . ]

    ]               shift and go to state 122


state 93

    (53) TABLE -> [ VALUES . ]

    ]               shift and go to state 123


state 94

    (51) MATRIXINSIDE -> TABLE . , MATRIXINSIDE
    (52) MATRIXINSIDE -> TABLE .

    ,               shift and go to state 124
    ]               reduce using rule 52 (MATRIXINSIDE -> TABLE .)


state 95

    (54) VALUES -> EXPRESSION . , VALUES
    (55) VALUES -> EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ,               shift and go to state 125
    ]               reduce using rule 55 (VALUES -> EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 96

    (43) ZEROSX -> ZEROS ( . EXPRESSION )
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 126

state 97

    (44) ONESX -> ONES ( . EXPRESSION )
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 127

state 98

    (45) EYEX -> EYE ( . EXPRESSION )
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 128

state 99

    (21) IDX -> ID [ EXPRESSION ] . = EXPRESSION
    (26) IDX -> ID [ EXPRESSION ] . ADDASSIGN EXPRESSION
    (31) IDX -> ID [ EXPRESSION ] . SUBASSIGN EXPRESSION
    (36) IDX -> ID [ EXPRESSION ] . MULASSIGN EXPRESSION
    (41) IDX -> ID [ EXPRESSION ] . DIVASSIGN EXPRESSION

    =               shift and go to state 129
    ADDASSIGN       shift and go to state 130
    SUBASSIGN       shift and go to state 131
    MULASSIGN       shift and go to state 132
    DIVASSIGN       shift and go to state 133


state 100

    (22) IDX -> ID [ EXPRESSION , . EXPRESSION ] = EXPRESSION
    (27) IDX -> ID [ EXPRESSION , . EXPRESSION ] ADDASSIGN EXPRESSION
    (32) IDX -> ID [ EXPRESSION , . EXPRESSION ] SUBASSIGN EXPRESSION
    (37) IDX -> ID [ EXPRESSION , . EXPRESSION ] MULASSIGN EXPRESSION
    (42) IDX -> ID [ EXPRESSION , . EXPRESSION ] DIVASSIGN EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 134

state 101

    (62) IFX -> IF ( CONDITION ) . ONELINE
    (63) IFX -> IF ( CONDITION ) . BLOCK
    (64) IFX -> IF ( CONDITION ) . ONELINE ELSE ONELINE
    (65) IFX -> IF ( CONDITION ) . ONELINE ELSE BLOCK
    (66) IFX -> IF ( CONDITION ) . BLOCK ELSE ONELINE
    (67) IFX -> IF ( CONDITION ) . BLOCK ELSE BLOCK
    (10) ONELINE -> . IDX ;
    (11) ONELINE -> . IFX
    (12) ONELINE -> . WHILEX
    (13) ONELINE -> . FORX
    (14) ONELINE -> . RETURNX ;
    (15) ONELINE -> . PRINTX ;
    (16) BLOCK -> . { LINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY

    {               shift and go to state 17
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16

    ONELINE                        shift and go to state 135
    BLOCK                          shift and go to state 136
    IDX                            shift and go to state 137
    IFX                            shift and go to state 138
    WHILEX                         shift and go to state 139
    FORX                           shift and go to state 140
    RETURNX                        shift and go to state 141
    PRINTX                         shift and go to state 142

state 102

    (99) CONDITION -> EXPRESSION EQUAL . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 143

state 103

    (100) CONDITION -> EXPRESSION UNEQUAL . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 144

state 104

    (101) CONDITION -> EXPRESSION LESSEQUAL . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 145

state 105

    (102) CONDITION -> EXPRESSION GREATEREQUAL . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 146

state 106

    (103) CONDITION -> EXPRESSION > . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 147

state 107

    (104) CONDITION -> EXPRESSION < . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 148

state 108

    (95) WHILEX -> WHILE ( CONDITION ) . ONELOOPLINE
    (96) WHILEX -> WHILE ( CONDITION ) . LOOPBLOCK
    (78) ONELOOPLINE -> . IDX ;
    (79) ONELOOPLINE -> . WHILEX
    (80) ONELOOPLINE -> . FORX
    (81) ONELOOPLINE -> . RETURNX ;
    (82) ONELOOPLINE -> . PRINTX ;
    (83) ONELOOPLINE -> . LOOPIFX
    (84) ONELOOPLINE -> . BREAKX ;
    (85) ONELOOPLINE -> . CONTINUEX ;
    (88) LOOPBLOCK -> . { LOOPLINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    {               shift and go to state 159
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    ONELOOPLINE                    shift and go to state 149
    LOOPBLOCK                      shift and go to state 150
    IDX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    LOOPIFX                        shift and go to state 156
    BREAKX                         shift and go to state 157
    CONTINUEX                      shift and go to state 158

state 109

    (97) FORX -> FOR ID = EXPRESSION . : EXPRESSION ONELOOPLINE
    (98) FORX -> FOR ID = EXPRESSION . : EXPRESSION LOOPBLOCK
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    :               shift and go to state 163
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 110

    (115) EXPRESSION -> EXPRESSION + EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    -               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ;               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ,               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTADD          reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTSUB          reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTMUL          reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    DOTDIV          reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    '               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ]               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    EQUAL           reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    UNEQUAL         reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    LESSEQUAL       reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    GREATEREQUAL    reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    >               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    <               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    )               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    :               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    {               reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ID              reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    WHILE           reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    FOR             reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    RETURN          reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    PRINT           reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    IF              reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    BREAK           reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    CONTINUE        reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    *               shift and go to state 79
    /               shift and go to state 80

  ! *               [ reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! /               [ reduce using rule 115 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 78 ]


state 111

    (116) EXPRESSION -> EXPRESSION - EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    -               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ;               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ,               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTADD          reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTSUB          reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTMUL          reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    DOTDIV          reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    '               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ]               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    EQUAL           reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    UNEQUAL         reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    LESSEQUAL       reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    GREATEREQUAL    reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    >               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    <               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    )               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    :               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    {               reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ID              reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    WHILE           reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    FOR             reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    RETURN          reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    PRINT           reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    IF              reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    BREAK           reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    CONTINUE        reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    *               shift and go to state 79
    /               shift and go to state 80

  ! *               [ reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! /               [ reduce using rule 116 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 78 ]


state 112

    (117) EXPRESSION -> EXPRESSION * EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    -               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    *               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    /               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ;               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ,               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTADD          reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTSUB          reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTMUL          reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    DOTDIV          reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    '               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ]               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    EQUAL           reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    UNEQUAL         reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    LESSEQUAL       reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    GREATEREQUAL    reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    >               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    <               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    )               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    :               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    {               reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ID              reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    WHILE           reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    FOR             reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    RETURN          reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    PRINT           reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    IF              reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    BREAK           reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    CONTINUE        reduce using rule 117 (EXPRESSION -> EXPRESSION * EXPRESSION .)

  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 78 ]
  ! *               [ shift and go to state 79 ]
  ! /               [ shift and go to state 80 ]


state 113

    (118) EXPRESSION -> EXPRESSION / EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    +               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    -               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    *               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    /               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ;               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ,               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTADD          reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTSUB          reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTMUL          reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    DOTDIV          reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    '               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ]               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    EQUAL           reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    UNEQUAL         reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    LESSEQUAL       reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    GREATEREQUAL    reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    >               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    <               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    )               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    :               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    {               reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ID              reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    WHILE           reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    FOR             reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    RETURN          reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    PRINT           reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    IF              reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    BREAK           reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    CONTINUE        reduce using rule 118 (EXPRESSION -> EXPRESSION / EXPRESSION .)

  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 78 ]
  ! *               [ shift and go to state 79 ]
  ! /               [ shift and go to state 80 ]


state 114

    (119) EXPRESSION -> ( EXPRESSION ) .

    +               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    -               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    *               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    /               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    ;               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    ,               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    DOTADD          reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    DOTSUB          reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    DOTMUL          reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    DOTDIV          reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    '               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    ]               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    EQUAL           reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    UNEQUAL         reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    LESSEQUAL       reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    GREATEREQUAL    reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    >               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    <               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    )               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    :               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    {               reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    ID              reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    WHILE           reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    FOR             reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    RETURN          reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    PRINT           reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    IF              reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    BREAK           reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)
    CONTINUE        reduce using rule 119 (EXPRESSION -> ( EXPRESSION ) .)


state 115

    (106) PRINTMANY -> STRINGX , PRINTMANY .

    ;               reduce using rule 106 (PRINTMANY -> STRINGX , PRINTMANY .)


state 116

    (107) PRINTMANY -> EXPRESSION , PRINTMANY .

    ;               reduce using rule 107 (PRINTMANY -> EXPRESSION , PRINTMANY .)


state 117

    (56) MATRIXEXPR -> EXPRESSION . DOTADD MATRIXEXPR
    (57) MATRIXEXPR -> EXPRESSION . DOTSUB MATRIXEXPR
    (58) MATRIXEXPR -> EXPRESSION . DOTMUL MATRIXEXPR
    (59) MATRIXEXPR -> EXPRESSION . DOTDIV MATRIXEXPR
    (60) MATRIXEXPR -> EXPRESSION . '
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    DOTADD          shift and go to state 86
    DOTSUB          shift and go to state 87
    DOTMUL          shift and go to state 88
    DOTDIV          shift and go to state 89
    '               shift and go to state 90
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 118

    (56) MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR .

    ;               reduce using rule 56 (MATRIXEXPR -> EXPRESSION DOTADD MATRIXEXPR .)


state 119

    (57) MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR .

    ;               reduce using rule 57 (MATRIXEXPR -> EXPRESSION DOTSUB MATRIXEXPR .)


state 120

    (58) MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR .

    ;               reduce using rule 58 (MATRIXEXPR -> EXPRESSION DOTMUL MATRIXEXPR .)


state 121

    (59) MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR .

    ;               reduce using rule 59 (MATRIXEXPR -> EXPRESSION DOTDIV MATRIXEXPR .)


state 122

    (46) MATRIX -> [ MATRIXINSIDE ] .

    ;               reduce using rule 46 (MATRIX -> [ MATRIXINSIDE ] .)


state 123

    (53) TABLE -> [ VALUES ] .

    ;               reduce using rule 53 (TABLE -> [ VALUES ] .)
    ,               reduce using rule 53 (TABLE -> [ VALUES ] .)
    ]               reduce using rule 53 (TABLE -> [ VALUES ] .)


state 124

    (51) MATRIXINSIDE -> TABLE , . MATRIXINSIDE
    (51) MATRIXINSIDE -> . TABLE , MATRIXINSIDE
    (52) MATRIXINSIDE -> . TABLE
    (53) TABLE -> . [ VALUES ]

    [               shift and go to state 91

    TABLE                          shift and go to state 94
    MATRIXINSIDE                   shift and go to state 164

state 125

    (54) VALUES -> EXPRESSION , . VALUES
    (54) VALUES -> . EXPRESSION , VALUES
    (55) VALUES -> . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 95
    VALUES                         shift and go to state 165

state 126

    (43) ZEROSX -> ZEROS ( EXPRESSION . )
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 166
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 127

    (44) ONESX -> ONES ( EXPRESSION . )
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 167
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 128

    (45) EYEX -> EYE ( EXPRESSION . )
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               shift and go to state 168
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 129

    (21) IDX -> ID [ EXPRESSION ] = . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 169

state 130

    (26) IDX -> ID [ EXPRESSION ] ADDASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 170

state 131

    (31) IDX -> ID [ EXPRESSION ] SUBASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 171

state 132

    (36) IDX -> ID [ EXPRESSION ] MULASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 172

state 133

    (41) IDX -> ID [ EXPRESSION ] DIVASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 173

state 134

    (22) IDX -> ID [ EXPRESSION , EXPRESSION . ] = EXPRESSION
    (27) IDX -> ID [ EXPRESSION , EXPRESSION . ] ADDASSIGN EXPRESSION
    (32) IDX -> ID [ EXPRESSION , EXPRESSION . ] SUBASSIGN EXPRESSION
    (37) IDX -> ID [ EXPRESSION , EXPRESSION . ] MULASSIGN EXPRESSION
    (42) IDX -> ID [ EXPRESSION , EXPRESSION . ] DIVASSIGN EXPRESSION
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ]               shift and go to state 174
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 135

    (62) IFX -> IF ( CONDITION ) ONELINE .
    (64) IFX -> IF ( CONDITION ) ONELINE . ELSE ONELINE
    (65) IFX -> IF ( CONDITION ) ONELINE . ELSE BLOCK

    ID              reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    IF              reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    WHILE           reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    FOR             reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    RETURN          reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    PRINT           reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    {               reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    $end            reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    }               reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .)
    ELSE            shift and go to state 175

  ! ELSE            [ reduce using rule 62 (IFX -> IF ( CONDITION ) ONELINE .) ]


state 136

    (63) IFX -> IF ( CONDITION ) BLOCK .
    (66) IFX -> IF ( CONDITION ) BLOCK . ELSE ONELINE
    (67) IFX -> IF ( CONDITION ) BLOCK . ELSE BLOCK

    ID              reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    IF              reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    WHILE           reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    FOR             reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    RETURN          reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    PRINT           reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    {               reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    $end            reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    }               reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .)
    ELSE            shift and go to state 176

  ! ELSE            [ reduce using rule 63 (IFX -> IF ( CONDITION ) BLOCK .) ]


state 137

    (10) ONELINE -> IDX . ;

    ;               shift and go to state 177


state 138

    (11) ONELINE -> IFX .

    ELSE            reduce using rule 11 (ONELINE -> IFX .)
    ID              reduce using rule 11 (ONELINE -> IFX .)
    IF              reduce using rule 11 (ONELINE -> IFX .)
    WHILE           reduce using rule 11 (ONELINE -> IFX .)
    FOR             reduce using rule 11 (ONELINE -> IFX .)
    RETURN          reduce using rule 11 (ONELINE -> IFX .)
    PRINT           reduce using rule 11 (ONELINE -> IFX .)
    {               reduce using rule 11 (ONELINE -> IFX .)
    $end            reduce using rule 11 (ONELINE -> IFX .)
    }               reduce using rule 11 (ONELINE -> IFX .)


state 139

    (12) ONELINE -> WHILEX .

    ELSE            reduce using rule 12 (ONELINE -> WHILEX .)
    ID              reduce using rule 12 (ONELINE -> WHILEX .)
    IF              reduce using rule 12 (ONELINE -> WHILEX .)
    WHILE           reduce using rule 12 (ONELINE -> WHILEX .)
    FOR             reduce using rule 12 (ONELINE -> WHILEX .)
    RETURN          reduce using rule 12 (ONELINE -> WHILEX .)
    PRINT           reduce using rule 12 (ONELINE -> WHILEX .)
    {               reduce using rule 12 (ONELINE -> WHILEX .)
    $end            reduce using rule 12 (ONELINE -> WHILEX .)
    }               reduce using rule 12 (ONELINE -> WHILEX .)


state 140

    (13) ONELINE -> FORX .

    ELSE            reduce using rule 13 (ONELINE -> FORX .)
    ID              reduce using rule 13 (ONELINE -> FORX .)
    IF              reduce using rule 13 (ONELINE -> FORX .)
    WHILE           reduce using rule 13 (ONELINE -> FORX .)
    FOR             reduce using rule 13 (ONELINE -> FORX .)
    RETURN          reduce using rule 13 (ONELINE -> FORX .)
    PRINT           reduce using rule 13 (ONELINE -> FORX .)
    {               reduce using rule 13 (ONELINE -> FORX .)
    $end            reduce using rule 13 (ONELINE -> FORX .)
    }               reduce using rule 13 (ONELINE -> FORX .)


state 141

    (14) ONELINE -> RETURNX . ;

    ;               shift and go to state 178


state 142

    (15) ONELINE -> PRINTX . ;

    ;               shift and go to state 179


state 143

    (99) CONDITION -> EXPRESSION EQUAL EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 99 (CONDITION -> EXPRESSION EQUAL EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 144

    (100) CONDITION -> EXPRESSION UNEQUAL EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 100 (CONDITION -> EXPRESSION UNEQUAL EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 145

    (101) CONDITION -> EXPRESSION LESSEQUAL EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 101 (CONDITION -> EXPRESSION LESSEQUAL EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 146

    (102) CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 102 (CONDITION -> EXPRESSION GREATEREQUAL EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 147

    (103) CONDITION -> EXPRESSION > EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 103 (CONDITION -> EXPRESSION > EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 148

    (104) CONDITION -> EXPRESSION < EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    )               reduce using rule 104 (CONDITION -> EXPRESSION < EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 149

    (95) WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .

    ID              reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    IF              reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    WHILE           reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    FOR             reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    RETURN          reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    PRINT           reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    {               reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    $end            reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    }               reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    ELSE            reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    BREAK           reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)
    CONTINUE        reduce using rule 95 (WHILEX -> WHILE ( CONDITION ) ONELOOPLINE .)


state 150

    (96) WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .

    ID              reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    IF              reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    WHILE           reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    FOR             reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    RETURN          reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    PRINT           reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    {               reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    $end            reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    }               reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    ELSE            reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    BREAK           reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)
    CONTINUE        reduce using rule 96 (WHILEX -> WHILE ( CONDITION ) LOOPBLOCK .)


state 151

    (78) ONELOOPLINE -> IDX . ;

    ;               shift and go to state 180


state 152

    (79) ONELOOPLINE -> WHILEX .

    ID              reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    IF              reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    WHILE           reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    FOR             reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    RETURN          reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    PRINT           reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    {               reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    $end            reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    }               reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    ELSE            reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    BREAK           reduce using rule 79 (ONELOOPLINE -> WHILEX .)
    CONTINUE        reduce using rule 79 (ONELOOPLINE -> WHILEX .)


state 153

    (80) ONELOOPLINE -> FORX .

    ID              reduce using rule 80 (ONELOOPLINE -> FORX .)
    IF              reduce using rule 80 (ONELOOPLINE -> FORX .)
    WHILE           reduce using rule 80 (ONELOOPLINE -> FORX .)
    FOR             reduce using rule 80 (ONELOOPLINE -> FORX .)
    RETURN          reduce using rule 80 (ONELOOPLINE -> FORX .)
    PRINT           reduce using rule 80 (ONELOOPLINE -> FORX .)
    {               reduce using rule 80 (ONELOOPLINE -> FORX .)
    $end            reduce using rule 80 (ONELOOPLINE -> FORX .)
    }               reduce using rule 80 (ONELOOPLINE -> FORX .)
    ELSE            reduce using rule 80 (ONELOOPLINE -> FORX .)
    BREAK           reduce using rule 80 (ONELOOPLINE -> FORX .)
    CONTINUE        reduce using rule 80 (ONELOOPLINE -> FORX .)


state 154

    (81) ONELOOPLINE -> RETURNX . ;

    ;               shift and go to state 181


state 155

    (82) ONELOOPLINE -> PRINTX . ;

    ;               shift and go to state 182


state 156

    (83) ONELOOPLINE -> LOOPIFX .

    ID              reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    IF              reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    WHILE           reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    FOR             reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    RETURN          reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    PRINT           reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    {               reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    $end            reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    }               reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    ELSE            reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    BREAK           reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)
    CONTINUE        reduce using rule 83 (ONELOOPLINE -> LOOPIFX .)


state 157

    (84) ONELOOPLINE -> BREAKX . ;

    ;               shift and go to state 183


state 158

    (85) ONELOOPLINE -> CONTINUEX . ;

    ;               shift and go to state 184


state 159

    (88) LOOPBLOCK -> { . LOOPLINE }
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    LOOPLINE                       shift and go to state 185
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 160

    (89) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> IF . ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> IF . ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK

    (               shift and go to state 196


state 161

    (86) BREAKX -> BREAK .

    ;               reduce using rule 86 (BREAKX -> BREAK .)


state 162

    (87) CONTINUEX -> CONTINUE .

    ;               reduce using rule 87 (CONTINUEX -> CONTINUE .)


state 163

    (97) FORX -> FOR ID = EXPRESSION : . EXPRESSION ONELOOPLINE
    (98) FORX -> FOR ID = EXPRESSION : . EXPRESSION LOOPBLOCK
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 197

state 164

    (51) MATRIXINSIDE -> TABLE , MATRIXINSIDE .

    ]               reduce using rule 51 (MATRIXINSIDE -> TABLE , MATRIXINSIDE .)


state 165

    (54) VALUES -> EXPRESSION , VALUES .

    ]               reduce using rule 54 (VALUES -> EXPRESSION , VALUES .)


state 166

    (43) ZEROSX -> ZEROS ( EXPRESSION ) .

    ;               reduce using rule 43 (ZEROSX -> ZEROS ( EXPRESSION ) .)


state 167

    (44) ONESX -> ONES ( EXPRESSION ) .

    ;               reduce using rule 44 (ONESX -> ONES ( EXPRESSION ) .)


state 168

    (45) EYEX -> EYE ( EXPRESSION ) .

    ;               reduce using rule 45 (EYEX -> EYE ( EXPRESSION ) .)


state 169

    (21) IDX -> ID [ EXPRESSION ] = EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 21 (IDX -> ID [ EXPRESSION ] = EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 170

    (26) IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 26 (IDX -> ID [ EXPRESSION ] ADDASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 171

    (31) IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 31 (IDX -> ID [ EXPRESSION ] SUBASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 172

    (36) IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 36 (IDX -> ID [ EXPRESSION ] MULASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 173

    (41) IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 41 (IDX -> ID [ EXPRESSION ] DIVASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 174

    (22) IDX -> ID [ EXPRESSION , EXPRESSION ] . = EXPRESSION
    (27) IDX -> ID [ EXPRESSION , EXPRESSION ] . ADDASSIGN EXPRESSION
    (32) IDX -> ID [ EXPRESSION , EXPRESSION ] . SUBASSIGN EXPRESSION
    (37) IDX -> ID [ EXPRESSION , EXPRESSION ] . MULASSIGN EXPRESSION
    (42) IDX -> ID [ EXPRESSION , EXPRESSION ] . DIVASSIGN EXPRESSION

    =               shift and go to state 198
    ADDASSIGN       shift and go to state 199
    SUBASSIGN       shift and go to state 200
    MULASSIGN       shift and go to state 201
    DIVASSIGN       shift and go to state 202


state 175

    (64) IFX -> IF ( CONDITION ) ONELINE ELSE . ONELINE
    (65) IFX -> IF ( CONDITION ) ONELINE ELSE . BLOCK
    (10) ONELINE -> . IDX ;
    (11) ONELINE -> . IFX
    (12) ONELINE -> . WHILEX
    (13) ONELINE -> . FORX
    (14) ONELINE -> . RETURNX ;
    (15) ONELINE -> . PRINTX ;
    (16) BLOCK -> . { LINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY

    {               shift and go to state 17
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16

    ONELINE                        shift and go to state 203
    BLOCK                          shift and go to state 204
    IDX                            shift and go to state 137
    IFX                            shift and go to state 138
    WHILEX                         shift and go to state 139
    FORX                           shift and go to state 140
    RETURNX                        shift and go to state 141
    PRINTX                         shift and go to state 142

state 176

    (66) IFX -> IF ( CONDITION ) BLOCK ELSE . ONELINE
    (67) IFX -> IF ( CONDITION ) BLOCK ELSE . BLOCK
    (10) ONELINE -> . IDX ;
    (11) ONELINE -> . IFX
    (12) ONELINE -> . WHILEX
    (13) ONELINE -> . FORX
    (14) ONELINE -> . RETURNX ;
    (15) ONELINE -> . PRINTX ;
    (16) BLOCK -> . { LINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (62) IFX -> . IF ( CONDITION ) ONELINE
    (63) IFX -> . IF ( CONDITION ) BLOCK
    (64) IFX -> . IF ( CONDITION ) ONELINE ELSE ONELINE
    (65) IFX -> . IF ( CONDITION ) ONELINE ELSE BLOCK
    (66) IFX -> . IF ( CONDITION ) BLOCK ELSE ONELINE
    (67) IFX -> . IF ( CONDITION ) BLOCK ELSE BLOCK
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY

    {               shift and go to state 17
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16

    BLOCK                          shift and go to state 205
    ONELINE                        shift and go to state 206
    IDX                            shift and go to state 137
    IFX                            shift and go to state 138
    WHILEX                         shift and go to state 139
    FORX                           shift and go to state 140
    RETURNX                        shift and go to state 141
    PRINTX                         shift and go to state 142

state 177

    (10) ONELINE -> IDX ; .

    ELSE            reduce using rule 10 (ONELINE -> IDX ; .)
    ID              reduce using rule 10 (ONELINE -> IDX ; .)
    IF              reduce using rule 10 (ONELINE -> IDX ; .)
    WHILE           reduce using rule 10 (ONELINE -> IDX ; .)
    FOR             reduce using rule 10 (ONELINE -> IDX ; .)
    RETURN          reduce using rule 10 (ONELINE -> IDX ; .)
    PRINT           reduce using rule 10 (ONELINE -> IDX ; .)
    {               reduce using rule 10 (ONELINE -> IDX ; .)
    $end            reduce using rule 10 (ONELINE -> IDX ; .)
    }               reduce using rule 10 (ONELINE -> IDX ; .)


state 178

    (14) ONELINE -> RETURNX ; .

    ELSE            reduce using rule 14 (ONELINE -> RETURNX ; .)
    ID              reduce using rule 14 (ONELINE -> RETURNX ; .)
    IF              reduce using rule 14 (ONELINE -> RETURNX ; .)
    WHILE           reduce using rule 14 (ONELINE -> RETURNX ; .)
    FOR             reduce using rule 14 (ONELINE -> RETURNX ; .)
    RETURN          reduce using rule 14 (ONELINE -> RETURNX ; .)
    PRINT           reduce using rule 14 (ONELINE -> RETURNX ; .)
    {               reduce using rule 14 (ONELINE -> RETURNX ; .)
    $end            reduce using rule 14 (ONELINE -> RETURNX ; .)
    }               reduce using rule 14 (ONELINE -> RETURNX ; .)


state 179

    (15) ONELINE -> PRINTX ; .

    ELSE            reduce using rule 15 (ONELINE -> PRINTX ; .)
    ID              reduce using rule 15 (ONELINE -> PRINTX ; .)
    IF              reduce using rule 15 (ONELINE -> PRINTX ; .)
    WHILE           reduce using rule 15 (ONELINE -> PRINTX ; .)
    FOR             reduce using rule 15 (ONELINE -> PRINTX ; .)
    RETURN          reduce using rule 15 (ONELINE -> PRINTX ; .)
    PRINT           reduce using rule 15 (ONELINE -> PRINTX ; .)
    {               reduce using rule 15 (ONELINE -> PRINTX ; .)
    $end            reduce using rule 15 (ONELINE -> PRINTX ; .)
    }               reduce using rule 15 (ONELINE -> PRINTX ; .)


state 180

    (78) ONELOOPLINE -> IDX ; .

    ID              reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    IF              reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    WHILE           reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    FOR             reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    RETURN          reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    PRINT           reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    {               reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    $end            reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    }               reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    ELSE            reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    BREAK           reduce using rule 78 (ONELOOPLINE -> IDX ; .)
    CONTINUE        reduce using rule 78 (ONELOOPLINE -> IDX ; .)


state 181

    (81) ONELOOPLINE -> RETURNX ; .

    ID              reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    IF              reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    WHILE           reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    FOR             reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    RETURN          reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    PRINT           reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    {               reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    $end            reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    }               reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    ELSE            reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    BREAK           reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)
    CONTINUE        reduce using rule 81 (ONELOOPLINE -> RETURNX ; .)


state 182

    (82) ONELOOPLINE -> PRINTX ; .

    ID              reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    IF              reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    WHILE           reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    FOR             reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    RETURN          reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    PRINT           reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    {               reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    $end            reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    }               reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    ELSE            reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    BREAK           reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)
    CONTINUE        reduce using rule 82 (ONELOOPLINE -> PRINTX ; .)


state 183

    (84) ONELOOPLINE -> BREAKX ; .

    ID              reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    IF              reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    WHILE           reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    FOR             reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    RETURN          reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    PRINT           reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    {               reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    $end            reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    }               reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    ELSE            reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    BREAK           reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)
    CONTINUE        reduce using rule 84 (ONELOOPLINE -> BREAKX ; .)


state 184

    (85) ONELOOPLINE -> CONTINUEX ; .

    ID              reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    IF              reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    WHILE           reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    FOR             reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    RETURN          reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    PRINT           reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    {               reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    $end            reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    }               reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    ELSE            reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    BREAK           reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)
    CONTINUE        reduce using rule 85 (ONELOOPLINE -> CONTINUEX ; .)


state 185

    (88) LOOPBLOCK -> { LOOPLINE . }

    }               shift and go to state 207


state 186

    (68) LOOPLINE -> IDX . ; LOOPLINE

    ;               shift and go to state 208


state 187

    (69) LOOPLINE -> WHILEX . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    WHILEX                         shift and go to state 187
    LOOPLINE                       shift and go to state 209
    IDX                            shift and go to state 186
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 188

    (70) LOOPLINE -> FORX . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    FORX                           shift and go to state 188
    LOOPLINE                       shift and go to state 210
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 189

    (71) LOOPLINE -> RETURNX . ; LOOPLINE

    ;               shift and go to state 211


state 190

    (72) LOOPLINE -> PRINTX . ; LOOPLINE

    ;               shift and go to state 212


state 191

    (73) LOOPLINE -> LOOPBLOCK . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    LOOPBLOCK                      shift and go to state 191
    LOOPLINE                       shift and go to state 213
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 192

    (74) LOOPLINE -> EMPTY .

    }               reduce using rule 74 (LOOPLINE -> EMPTY .)


state 193

    (75) LOOPLINE -> LOOPIFX . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    LOOPIFX                        shift and go to state 193
    LOOPLINE                       shift and go to state 214
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 194

    (76) LOOPLINE -> BREAKX . ; LOOPLINE

    ;               shift and go to state 215


state 195

    (77) LOOPLINE -> CONTINUEX . ; LOOPLINE

    ;               shift and go to state 216


state 196

    (89) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> IF ( . CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> IF ( . CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (99) CONDITION -> . EXPRESSION EQUAL EXPRESSION
    (100) CONDITION -> . EXPRESSION UNEQUAL EXPRESSION
    (101) CONDITION -> . EXPRESSION LESSEQUAL EXPRESSION
    (102) CONDITION -> . EXPRESSION GREATEREQUAL EXPRESSION
    (103) CONDITION -> . EXPRESSION > EXPRESSION
    (104) CONDITION -> . EXPRESSION < EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    CONDITION                      shift and go to state 217
    EXPRESSION                     shift and go to state 74

state 197

    (97) FORX -> FOR ID = EXPRESSION : EXPRESSION . ONELOOPLINE
    (98) FORX -> FOR ID = EXPRESSION : EXPRESSION . LOOPBLOCK
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION
    (78) ONELOOPLINE -> . IDX ;
    (79) ONELOOPLINE -> . WHILEX
    (80) ONELOOPLINE -> . FORX
    (81) ONELOOPLINE -> . RETURNX ;
    (82) ONELOOPLINE -> . PRINTX ;
    (83) ONELOOPLINE -> . LOOPIFX
    (84) ONELOOPLINE -> . BREAKX ;
    (85) ONELOOPLINE -> . CONTINUEX ;
    (88) LOOPBLOCK -> . { LOOPLINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80
    {               shift and go to state 159
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    ONELOOPLINE                    shift and go to state 218
    LOOPBLOCK                      shift and go to state 219
    IDX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    LOOPIFX                        shift and go to state 156
    BREAKX                         shift and go to state 157
    CONTINUEX                      shift and go to state 158

state 198

    (22) IDX -> ID [ EXPRESSION , EXPRESSION ] = . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 220

state 199

    (27) IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 221

state 200

    (32) IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 222

state 201

    (37) IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 223

state 202

    (42) IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN . EXPRESSION
    (112) EXPRESSION -> . NUMBER
    (113) EXPRESSION -> . FLOATNUMBER
    (114) EXPRESSION -> . ID
    (115) EXPRESSION -> . EXPRESSION + EXPRESSION
    (116) EXPRESSION -> . EXPRESSION - EXPRESSION
    (117) EXPRESSION -> . EXPRESSION * EXPRESSION
    (118) EXPRESSION -> . EXPRESSION / EXPRESSION
    (119) EXPRESSION -> . ( EXPRESSION )
    (120) EXPRESSION -> . - EXPRESSION

    NUMBER          shift and go to state 35
    FLOATNUMBER     shift and go to state 36
    ID              shift and go to state 37
    (               shift and go to state 39
    -               shift and go to state 38

    EXPRESSION                     shift and go to state 224

state 203

    (64) IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .

    ID              reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    IF              reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    WHILE           reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    FOR             reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    RETURN          reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    PRINT           reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    {               reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    $end            reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    }               reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)
    ELSE            reduce using rule 64 (IFX -> IF ( CONDITION ) ONELINE ELSE ONELINE .)


state 204

    (65) IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .

    ID              reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    IF              reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    WHILE           reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    FOR             reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    RETURN          reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    PRINT           reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    {               reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    $end            reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    }               reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)
    ELSE            reduce using rule 65 (IFX -> IF ( CONDITION ) ONELINE ELSE BLOCK .)


state 205

    (67) IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .

    ID              reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    IF              reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    WHILE           reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    FOR             reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    RETURN          reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    PRINT           reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    {               reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    $end            reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    }               reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)
    ELSE            reduce using rule 67 (IFX -> IF ( CONDITION ) BLOCK ELSE BLOCK .)


state 206

    (66) IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .

    ID              reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    IF              reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    WHILE           reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    FOR             reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    RETURN          reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    PRINT           reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    {               reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    $end            reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    }               reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)
    ELSE            reduce using rule 66 (IFX -> IF ( CONDITION ) BLOCK ELSE ONELINE .)


state 207

    (88) LOOPBLOCK -> { LOOPLINE } .

    ID              reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    IF              reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    WHILE           reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    FOR             reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    RETURN          reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    PRINT           reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    {               reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    $end            reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    }               reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    ELSE            reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    BREAK           reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)
    CONTINUE        reduce using rule 88 (LOOPBLOCK -> { LOOPLINE } .)


state 208

    (68) LOOPLINE -> IDX ; . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    IDX                            shift and go to state 186
    LOOPLINE                       shift and go to state 225
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 209

    (69) LOOPLINE -> WHILEX LOOPLINE .

    }               reduce using rule 69 (LOOPLINE -> WHILEX LOOPLINE .)


state 210

    (70) LOOPLINE -> FORX LOOPLINE .

    }               reduce using rule 70 (LOOPLINE -> FORX LOOPLINE .)


state 211

    (71) LOOPLINE -> RETURNX ; . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    RETURNX                        shift and go to state 189
    LOOPLINE                       shift and go to state 226
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 212

    (72) LOOPLINE -> PRINTX ; . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    PRINTX                         shift and go to state 190
    LOOPLINE                       shift and go to state 227
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194
    CONTINUEX                      shift and go to state 195

state 213

    (73) LOOPLINE -> LOOPBLOCK LOOPLINE .

    }               reduce using rule 73 (LOOPLINE -> LOOPBLOCK LOOPLINE .)


state 214

    (75) LOOPLINE -> LOOPIFX LOOPLINE .

    }               reduce using rule 75 (LOOPLINE -> LOOPIFX LOOPLINE .)


state 215

    (76) LOOPLINE -> BREAKX ; . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    BREAKX                         shift and go to state 194
    LOOPLINE                       shift and go to state 228
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    CONTINUEX                      shift and go to state 195

state 216

    (77) LOOPLINE -> CONTINUEX ; . LOOPLINE
    (68) LOOPLINE -> . IDX ; LOOPLINE
    (69) LOOPLINE -> . WHILEX LOOPLINE
    (70) LOOPLINE -> . FORX LOOPLINE
    (71) LOOPLINE -> . RETURNX ; LOOPLINE
    (72) LOOPLINE -> . PRINTX ; LOOPLINE
    (73) LOOPLINE -> . LOOPBLOCK LOOPLINE
    (74) LOOPLINE -> . EMPTY
    (75) LOOPLINE -> . LOOPIFX LOOPLINE
    (76) LOOPLINE -> . BREAKX ; LOOPLINE
    (77) LOOPLINE -> . CONTINUEX ; LOOPLINE
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (88) LOOPBLOCK -> . { LOOPLINE }
    (17) EMPTY -> .
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    {               shift and go to state 159
    }               reduce using rule 17 (EMPTY -> .)
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    CONTINUEX                      shift and go to state 195
    LOOPLINE                       shift and go to state 229
    IDX                            shift and go to state 186
    WHILEX                         shift and go to state 187
    FORX                           shift and go to state 188
    RETURNX                        shift and go to state 189
    PRINTX                         shift and go to state 190
    LOOPBLOCK                      shift and go to state 191
    EMPTY                          shift and go to state 192
    LOOPIFX                        shift and go to state 193
    BREAKX                         shift and go to state 194

state 217

    (89) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE
    (90) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK
    (91) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> IF ( CONDITION . ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> IF ( CONDITION . ) LOOPBLOCK ELSE LOOPBLOCK

    )               shift and go to state 230


state 218

    (97) FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .

    ID              reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    IF              reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    WHILE           reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    FOR             reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    RETURN          reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    PRINT           reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    {               reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    $end            reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    }               reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    ELSE            reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    BREAK           reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)
    CONTINUE        reduce using rule 97 (FORX -> FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE .)


state 219

    (98) FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .

    ID              reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    IF              reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    WHILE           reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    FOR             reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    RETURN          reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    PRINT           reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    {               reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    $end            reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    }               reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    ELSE            reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    BREAK           reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)
    CONTINUE        reduce using rule 98 (FORX -> FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK .)


state 220

    (22) IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 22 (IDX -> ID [ EXPRESSION , EXPRESSION ] = EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 221

    (27) IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 27 (IDX -> ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 222

    (32) IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 32 (IDX -> ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 223

    (37) IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 37 (IDX -> ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 224

    (42) IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION .
    (115) EXPRESSION -> EXPRESSION . + EXPRESSION
    (116) EXPRESSION -> EXPRESSION . - EXPRESSION
    (117) EXPRESSION -> EXPRESSION . * EXPRESSION
    (118) EXPRESSION -> EXPRESSION . / EXPRESSION

    ;               reduce using rule 42 (IDX -> ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION .)
    +               shift and go to state 77
    -               shift and go to state 78
    *               shift and go to state 79
    /               shift and go to state 80


state 225

    (68) LOOPLINE -> IDX ; LOOPLINE .

    }               reduce using rule 68 (LOOPLINE -> IDX ; LOOPLINE .)


state 226

    (71) LOOPLINE -> RETURNX ; LOOPLINE .

    }               reduce using rule 71 (LOOPLINE -> RETURNX ; LOOPLINE .)


state 227

    (72) LOOPLINE -> PRINTX ; LOOPLINE .

    }               reduce using rule 72 (LOOPLINE -> PRINTX ; LOOPLINE .)


state 228

    (76) LOOPLINE -> BREAKX ; LOOPLINE .

    }               reduce using rule 76 (LOOPLINE -> BREAKX ; LOOPLINE .)


state 229

    (77) LOOPLINE -> CONTINUEX ; LOOPLINE .

    }               reduce using rule 77 (LOOPLINE -> CONTINUEX ; LOOPLINE .)


state 230

    (89) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE
    (90) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK
    (91) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> IF ( CONDITION ) . ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> IF ( CONDITION ) . LOOPBLOCK ELSE LOOPBLOCK
    (78) ONELOOPLINE -> . IDX ;
    (79) ONELOOPLINE -> . WHILEX
    (80) ONELOOPLINE -> . FORX
    (81) ONELOOPLINE -> . RETURNX ;
    (82) ONELOOPLINE -> . PRINTX ;
    (83) ONELOOPLINE -> . LOOPIFX
    (84) ONELOOPLINE -> . BREAKX ;
    (85) ONELOOPLINE -> . CONTINUEX ;
    (88) LOOPBLOCK -> . { LOOPLINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    {               shift and go to state 159
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    ONELOOPLINE                    shift and go to state 231
    LOOPBLOCK                      shift and go to state 232
    IDX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    LOOPIFX                        shift and go to state 156
    BREAKX                         shift and go to state 157
    CONTINUEX                      shift and go to state 158

state 231

    (89) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .
    (91) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE . ELSE ONELOOPLINE
    (92) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE . ELSE LOOPBLOCK

    ID              reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    IF              reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    WHILE           reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    FOR             reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    RETURN          reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    PRINT           reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    {               reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    $end            reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    }               reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    BREAK           reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    CONTINUE        reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .)
    ELSE            shift and go to state 233

  ! ELSE            [ reduce using rule 89 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE .) ]


state 232

    (90) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .
    (93) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK . ELSE ONELOOPLINE
    (94) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK . ELSE LOOPBLOCK

    ID              reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    IF              reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    WHILE           reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    FOR             reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    RETURN          reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    PRINT           reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    {               reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    $end            reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    }               reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    BREAK           reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    CONTINUE        reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .)
    ELSE            shift and go to state 234

  ! ELSE            [ reduce using rule 90 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK .) ]


state 233

    (91) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE . ONELOOPLINE
    (92) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE . LOOPBLOCK
    (78) ONELOOPLINE -> . IDX ;
    (79) ONELOOPLINE -> . WHILEX
    (80) ONELOOPLINE -> . FORX
    (81) ONELOOPLINE -> . RETURNX ;
    (82) ONELOOPLINE -> . PRINTX ;
    (83) ONELOOPLINE -> . LOOPIFX
    (84) ONELOOPLINE -> . BREAKX ;
    (85) ONELOOPLINE -> . CONTINUEX ;
    (88) LOOPBLOCK -> . { LOOPLINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    {               shift and go to state 159
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    ONELOOPLINE                    shift and go to state 235
    LOOPBLOCK                      shift and go to state 236
    IDX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    LOOPIFX                        shift and go to state 156
    BREAKX                         shift and go to state 157
    CONTINUEX                      shift and go to state 158

state 234

    (93) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE . ONELOOPLINE
    (94) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE . LOOPBLOCK
    (78) ONELOOPLINE -> . IDX ;
    (79) ONELOOPLINE -> . WHILEX
    (80) ONELOOPLINE -> . FORX
    (81) ONELOOPLINE -> . RETURNX ;
    (82) ONELOOPLINE -> . PRINTX ;
    (83) ONELOOPLINE -> . LOOPIFX
    (84) ONELOOPLINE -> . BREAKX ;
    (85) ONELOOPLINE -> . CONTINUEX ;
    (88) LOOPBLOCK -> . { LOOPLINE }
    (18) IDX -> . ID = EXPRESSION
    (19) IDX -> . ID = MATRIX
    (20) IDX -> . ID = TABLE
    (21) IDX -> . ID [ EXPRESSION ] = EXPRESSION
    (22) IDX -> . ID [ EXPRESSION , EXPRESSION ] = EXPRESSION
    (23) IDX -> . ID ADDASSIGN EXPRESSION
    (24) IDX -> . ID ADDASSIGN MATRIX
    (25) IDX -> . ID ADDASSIGN TABLE
    (26) IDX -> . ID [ EXPRESSION ] ADDASSIGN EXPRESSION
    (27) IDX -> . ID [ EXPRESSION , EXPRESSION ] ADDASSIGN EXPRESSION
    (28) IDX -> . ID SUBASSIGN EXPRESSION
    (29) IDX -> . ID SUBASSIGN MATRIX
    (30) IDX -> . ID SUBASSIGN TABLE
    (31) IDX -> . ID [ EXPRESSION ] SUBASSIGN EXPRESSION
    (32) IDX -> . ID [ EXPRESSION , EXPRESSION ] SUBASSIGN EXPRESSION
    (33) IDX -> . ID MULASSIGN EXPRESSION
    (34) IDX -> . ID MULASSIGN MATRIX
    (35) IDX -> . ID MULASSIGN TABLE
    (36) IDX -> . ID [ EXPRESSION ] MULASSIGN EXPRESSION
    (37) IDX -> . ID [ EXPRESSION , EXPRESSION ] MULASSIGN EXPRESSION
    (38) IDX -> . ID DIVASSIGN EXPRESSION
    (39) IDX -> . ID DIVASSIGN MATRIX
    (40) IDX -> . ID DIVASSIGN TABLE
    (41) IDX -> . ID [ EXPRESSION ] DIVASSIGN EXPRESSION
    (42) IDX -> . ID [ EXPRESSION , EXPRESSION ] DIVASSIGN EXPRESSION
    (95) WHILEX -> . WHILE ( CONDITION ) ONELOOPLINE
    (96) WHILEX -> . WHILE ( CONDITION ) LOOPBLOCK
    (97) FORX -> . FOR ID = EXPRESSION : EXPRESSION ONELOOPLINE
    (98) FORX -> . FOR ID = EXPRESSION : EXPRESSION LOOPBLOCK
    (111) RETURNX -> . RETURN EXPRESSION
    (105) PRINTX -> . PRINT PRINTMANY
    (89) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE
    (90) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK
    (91) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE
    (92) LOOPIFX -> . IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK
    (93) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE
    (94) LOOPIFX -> . IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK
    (86) BREAKX -> . BREAK
    (87) CONTINUEX -> . CONTINUE

    {               shift and go to state 159
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 16
    IF              shift and go to state 160
    BREAK           shift and go to state 161
    CONTINUE        shift and go to state 162

    LOOPBLOCK                      shift and go to state 237
    ONELOOPLINE                    shift and go to state 238
    IDX                            shift and go to state 151
    WHILEX                         shift and go to state 152
    FORX                           shift and go to state 153
    RETURNX                        shift and go to state 154
    PRINTX                         shift and go to state 155
    LOOPIFX                        shift and go to state 156
    BREAKX                         shift and go to state 157
    CONTINUEX                      shift and go to state 158

state 235

    (91) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .

    ID              reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    IF              reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    WHILE           reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    FOR             reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    RETURN          reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    PRINT           reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    {               reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    $end            reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    }               reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    ELSE            reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    BREAK           reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)
    CONTINUE        reduce using rule 91 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE ONELOOPLINE .)


state 236

    (92) LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .

    ID              reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    IF              reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    WHILE           reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    FOR             reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    RETURN          reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    PRINT           reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    {               reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    $end            reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    }               reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    ELSE            reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    BREAK           reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)
    CONTINUE        reduce using rule 92 (LOOPIFX -> IF ( CONDITION ) ONELOOPLINE ELSE LOOPBLOCK .)


state 237

    (94) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .

    ID              reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    IF              reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    WHILE           reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    FOR             reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    RETURN          reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    PRINT           reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    {               reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    $end            reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    }               reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    ELSE            reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    BREAK           reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)
    CONTINUE        reduce using rule 94 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE LOOPBLOCK .)


state 238

    (93) LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .

    ID              reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    IF              reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    WHILE           reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    FOR             reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    RETURN          reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    PRINT           reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    {               reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    $end            reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    }               reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    ELSE            reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    BREAK           reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)
    CONTINUE        reduce using rule 93 (LOOPIFX -> IF ( CONDITION ) LOOPBLOCK ELSE ONELOOPLINE .)

